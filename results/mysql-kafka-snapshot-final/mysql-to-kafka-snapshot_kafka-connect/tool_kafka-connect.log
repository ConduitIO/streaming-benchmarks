 Container benchi-kafka-connect  Creating
 Container benchi-kafka-connect  Created
Attaching to benchi-kafka-connect
benchi-kafka-connect  | temurin-jdk                                     832 kB/s | 368 kB     00:00    
benchi-kafka-connect  | Red Hat Universal Base Image 8 (RPMs) - BaseOS   11 MB/s | 732 kB     00:00    
benchi-kafka-connect  | Red Hat Universal Base Image 8 (RPMs) - AppStre  36 MB/s | 3.4 MB     00:00    
benchi-kafka-connect  | Red Hat Universal Base Image 8 (RPMs) - CodeRea 3.2 MB/s | 187 kB     00:00    
benchi-kafka-connect  | Package curl-7.61.1-34.el8_10.3.x86_64 is already installed.
benchi-kafka-connect  | Package wget-1.19.5-12.el8_10.x86_64 is already installed.
benchi-kafka-connect  | Dependencies resolved.
benchi-kafka-connect  | ================================================================================
benchi-kafka-connect  |  Package        Arch        Version             Repository                 Size
benchi-kafka-connect  | ================================================================================
benchi-kafka-connect  | Installing:
benchi-kafka-connect  |  jq             x86_64      1.6-9.el8_10        ubi-8-appstream-rpms      203 k
benchi-kafka-connect  | Installing dependencies:
benchi-kafka-connect  |  oniguruma      x86_64      6.8.2-3.el8         ubi-8-appstream-rpms      188 k
benchi-kafka-connect  | 
benchi-kafka-connect  | Transaction Summary
benchi-kafka-connect  | ================================================================================
benchi-kafka-connect  | Install  2 Packages
benchi-kafka-connect  | 
benchi-kafka-connect  | Total download size: 391 k
benchi-kafka-connect  | Installed size: 1.1 M
benchi-kafka-connect  | Downloading Packages:
benchi-kafka-connect  | (1/2): jq-1.6-9.el8_10.x86_64.rpm               5.9 MB/s | 203 kB     00:00    
benchi-kafka-connect  | (2/2): oniguruma-6.8.2-3.el8.x86_64.rpm         4.0 MB/s | 188 kB     00:00    
benchi-kafka-connect  | --------------------------------------------------------------------------------
benchi-kafka-connect  | Total                                           7.5 MB/s | 391 kB     00:00     
benchi-kafka-connect  | Running transaction check
benchi-kafka-connect  | Transaction check succeeded.
benchi-kafka-connect  | Running transaction test
benchi-kafka-connect  | Transaction test succeeded.
benchi-kafka-connect  | Running transaction
benchi-kafka-connect  |   Preparing        :                                                        1/1 
benchi-kafka-connect  |   Installing       : oniguruma-6.8.2-3.el8.x86_64                           1/2 
benchi-kafka-connect  |   Running scriptlet: oniguruma-6.8.2-3.el8.x86_64                           1/2 
benchi-kafka-connect  |   Installing       : jq-1.6-9.el8_10.x86_64                                 2/2 
benchi-kafka-connect  |   Running scriptlet: jq-1.6-9.el8_10.x86_64                                 2/2 
benchi-kafka-connect  |   Verifying        : jq-1.6-9.el8_10.x86_64                                 1/2 
benchi-kafka-connect  |   Verifying        : oniguruma-6.8.2-3.el8.x86_64                           2/2 
benchi-kafka-connect  | 
benchi-kafka-connect  | Installed:
benchi-kafka-connect  |   jq-1.6-9.el8_10.x86_64              oniguruma-6.8.2-3.el8.x86_64             
benchi-kafka-connect  | 
benchi-kafka-connect  | Complete!
benchi-kafka-connect  | Sourcing /benchi/init/init.sh
benchi-kafka-connect  | Last metadata expiration check: 0:00:02 ago on Wed Apr 23 23:56:35 2025.
benchi-kafka-connect  | Package jq-1.6-9.el8_10.x86_64 is already installed.
benchi-kafka-connect  | Package curl-7.61.1-34.el8_10.3.x86_64 is already installed.
benchi-kafka-connect  | Package wget-1.19.5-12.el8_10.x86_64 is already installed.
benchi-kafka-connect  | Dependencies resolved.
benchi-kafka-connect  | Nothing to do.
benchi-kafka-connect  | Complete!
benchi-kafka-connect  | Running in a verbose mode 
benchi-kafka-connect  | Running in a "--no-prompt" mode 
benchi-kafka-connect  | Client's installation type is: PACKAGE 
benchi-kafka-connect  | Implicit acceptance of the license below:  
benchi-kafka-connect  | Apache 2.0 
benchi-kafka-connect  | https://github.com/debezium/debezium/blob/master/LICENSE.txt 
benchi-kafka-connect  | Implicit confirmation of the question: You are about to install 'debezium-connector-mysql' from Debezium Community, as published on Confluent Hub. 
benchi-kafka-connect  | Downloading component Debezium MySQL CDC Connector 2.4.2, provided by Debezium Community from Confluent Hub and installing into /usr/share/confluent-hub-components 
benchi-kafka-connect  | Scanning path /usr/share/confluent-hub-components 
benchi-kafka-connect  | Installation state for the debezium-connector-mysql in the /usr/share/confluent-hub-components is NOT_INSTALLED 
benchi-kafka-connect  | Creating temporary directory 
benchi-kafka-connect  | Created temporary directory: /tmp/confluent-hub-tmp12387737126611103149 
benchi-kafka-connect  | Copying data from input stream to file /tmp/confluent-hub-tmp12387737126611103149/debezium-debezium-connector-mysql-2.4.2.zip 
benchi-kafka-connect  | 13796173 bytes saved to disk 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components 
benchi-kafka-connect  | Unzipping file /tmp/confluent-hub-tmp12387737126611103149/debezium-debezium-connector-mysql-2.4.2.zip to /usr/share/confluent-hub-components/debezium-debezium-connector-mysql 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/doc 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/doc 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/doc 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/doc 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/doc 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/doc 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/doc 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/doc 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/doc 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/assets 
benchi-kafka-connect  | Creating directory recursively: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/assets 
benchi-kafka-connect  | Deleting /tmp/confluent-hub-tmp12387737126611103149 
benchi-kafka-connect  | Updating configuration files: [/etc/kafka/connect-distributed.properties, /etc/kafka/connect-standalone.properties, /etc/schema-registry/connect-avro-distributed.properties, /etc/schema-registry/connect-avro-standalone.properties] 
benchi-kafka-connect  | Adding installation directory to plugin path in the following files: 
benchi-kafka-connect  |   /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | FileName set to /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | ConfigurationUtils.locate(): base is null, name is /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | Could not locate file /etc/kafka/connect-distributed.properties at null: no protocol: /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | Loading configuration from the absolute path /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | Base path set to file:///etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | FileName set to /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | ConfigurationUtils.locate(): base is null, name is /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | Could not locate file /etc/kafka/connect-distributed.properties at null: no protocol: /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | Loading configuration from the absolute path /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  | Base path set to file:///etc/kafka/connect-distributed.properties 
benchi-kafka-connect  |   /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | FileName set to /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | ConfigurationUtils.locate(): base is null, name is /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | Could not locate file /etc/kafka/connect-standalone.properties at null: no protocol: /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | Loading configuration from the absolute path /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | Base path set to file:///etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | FileName set to /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | ConfigurationUtils.locate(): base is null, name is /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | Could not locate file /etc/kafka/connect-standalone.properties at null: no protocol: /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | Loading configuration from the absolute path /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  | Base path set to file:///etc/kafka/connect-standalone.properties 
benchi-kafka-connect  |   /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | FileName set to /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | ConfigurationUtils.locate(): base is null, name is /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | Could not locate file /etc/schema-registry/connect-avro-distributed.properties at null: no protocol: /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | Loading configuration from the absolute path /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | Base path set to file:///etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | FileName set to /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | ConfigurationUtils.locate(): base is null, name is /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | Could not locate file /etc/schema-registry/connect-avro-distributed.properties at null: no protocol: /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | Loading configuration from the absolute path /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  | Base path set to file:///etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  |   /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | FileName set to /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | ConfigurationUtils.locate(): base is null, name is /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | Could not locate file /etc/schema-registry/connect-avro-standalone.properties at null: no protocol: /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | Loading configuration from the absolute path /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | Base path set to file:///etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | FileName set to /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | ConfigurationUtils.locate(): base is null, name is /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | Could not locate file /etc/schema-registry/connect-avro-standalone.properties at null: no protocol: /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | Loading configuration from the absolute path /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  | Base path set to file:///etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  |  
benchi-kafka-connect  | Completed 
benchi-kafka-connect  | ===> User
benchi-kafka-connect  | uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
benchi-kafka-connect  | ===> Configuring ...
benchi-kafka-connect  | ===> Running preflight checks ... 
benchi-kafka-connect  | ===> Check if Kafka is healthy ...
benchi-kafka-connect  | Using log4j config /etc/cp-base-new/log4j.properties
benchi-kafka-connect  | ===> Launching ... 
benchi-kafka-connect  | ===> Launching kafka-connect ... 
benchi-kafka-connect  | SLF4J: Class path contains multiple SLF4J bindings.
benchi-kafka-connect  | SLF4J: Found binding in [jar:file:/usr/share/java/kafka/slf4j-reload4j-1.7.36.jar!/org/slf4j/impl/StaticLoggerBinder.class]
benchi-kafka-connect  | SLF4J: Found binding in [jar:file:/usr/share/java/kafka-serde-tools/slf4j-reload4j-1.7.36.jar!/org/slf4j/impl/StaticLoggerBinder.class]
benchi-kafka-connect  | SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
benchi-kafka-connect  | SLF4J: Actual binding is of type [org.slf4j.impl.Reload4jLoggerFactory]
benchi-kafka-connect  | [2025-04-23 23:56:45,914] INFO Kafka Connect worker initializing ... (org.apache.kafka.connect.cli.AbstractConnectCli)
benchi-kafka-connect  | [2025-04-23 23:56:45,916] INFO WorkerInfo values: 
benchi-kafka-connect  | 	jvm.args = -Xms256M, -Xmx2G, -XX:+UseG1GC, -XX:MaxGCPauseMillis=20, -XX:InitiatingHeapOccupancyPercent=35, -XX:+ExplicitGCInvokesConcurrent, -XX:MaxInlineLevel=15, -Djava.awt.headless=true, -Dcom.sun.management.jmxremote=true, -Dcom.sun.management.jmxremote.authenticate=false, -Dcom.sun.management.jmxremote.ssl=false, -Dkafka.logs.dir=/var/log/kafka, -Dlog4j.configuration=file:/etc/kafka/connect-log4j.properties
benchi-kafka-connect  | 	jvm.spec = Eclipse Adoptium, OpenJDK 64-Bit Server VM, 17.0.13, 17.0.13+11
benchi-kafka-connect  | 	jvm.classpath = /etc/kafka-connect/jars/*:/usr/share/java/kafka/activation-1.1.1.jar:/usr/share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/share/java/kafka/argparse4j-0.7.0.jar:/usr/share/java/kafka/audience-annotations-0.12.0.jar:/usr/share/java/kafka/caffeine-2.9.3.jar:/usr/share/java/kafka/checker-qual-3.19.0.jar:/usr/share/java/kafka/commons-beanutils-1.9.4.jar:/usr/share/java/kafka/commons-cli-1.4.jar:/usr/share/java/kafka/commons-collections-3.2.2.jar:/usr/share/java/kafka/commons-digester-2.1.jar:/usr/share/java/kafka/commons-io-2.16.0.jar:/usr/share/java/kafka/commons-lang3-3.12.0.jar:/usr/share/java/kafka/commons-logging-1.2.jar:/usr/share/java/kafka/commons-validator-1.7.jar:/usr/share/java/kafka/connect-api-7.8.1-ccs.jar:/usr/share/java/kafka/connect-basic-auth-extension-7.8.1-ccs.jar:/usr/share/java/kafka/connect-json-7.8.1-ccs.jar:/usr/share/java/kafka/connect-mirror-7.8.1-ccs.jar:/usr/share/java/kafka/connect-mirror-client-7.8.1-ccs.jar:/usr/share/java/kafka/connect-runtime-7.8.1-ccs.jar:/usr/share/java/kafka/connect-transforms-7.8.1-ccs.jar:/usr/share/java/kafka/error_prone_annotations-2.10.0.jar:/usr/share/java/kafka/hk2-api-2.6.1.jar:/usr/share/java/kafka/hk2-locator-2.6.1.jar:/usr/share/java/kafka/hk2-utils-2.6.1.jar:/usr/share/java/kafka/jackson-annotations-2.16.2.jar:/usr/share/java/kafka/jackson-core-2.16.2.jar:/usr/share/java/kafka/jackson-databind-2.16.2.jar:/usr/share/java/kafka/jackson-dataformat-csv-2.16.2.jar:/usr/share/java/kafka/jackson-datatype-jdk8-2.16.2.jar:/usr/share/java/kafka/jackson-jaxrs-base-2.16.2.jar:/usr/share/java/kafka/jackson-jaxrs-json-provider-2.16.2.jar:/usr/share/java/kafka/jackson-module-afterburner-2.16.2.jar:/usr/share/java/kafka/jackson-module-jaxb-annotations-2.16.2.jar:/usr/share/java/kafka/jackson-module-scala_2.13-2.16.2.jar:/usr/share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/share/java/kafka/jakarta.inject-2.6.1.jar:/usr/share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/share/java/kafka/javassist-3.29.2-GA.jar:/usr/share/java/kafka/javax.activation-api-1.2.0.jar:/usr/share/java/kafka/javax.annotation-api-1.3.2.jar:/usr/share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/share/java/kafka/jaxb-api-2.3.1.jar:/usr/share/java/kafka/jersey-client-2.39.1.jar:/usr/share/java/kafka/jersey-common-2.39.1.jar:/usr/share/java/kafka/jersey-container-servlet-2.39.1.jar:/usr/share/java/kafka/jersey-container-servlet-core-2.39.1.jar:/usr/share/java/kafka/jersey-hk2-2.39.1.jar:/usr/share/java/kafka/jersey-server-2.39.1.jar:/usr/share/java/kafka/jetty-client-9.4.56.v20240826.jar:/usr/share/java/kafka/jetty-continuation-9.4.56.v20240826.jar:/usr/share/java/kafka/jetty-http-9.4.56.v20240826.jar:/usr/share/java/kafka/jetty-io-9.4.56.v20240826.jar:/usr/share/java/kafka/jetty-security-9.4.56.v20240826.jar:/usr/share/java/kafka/jetty-server-9.4.56.v20240826.jar:/usr/share/java/kafka/jetty-servlet-9.4.56.v20240826.jar:/usr/share/java/kafka/jetty-servlets-9.4.56.v20240826.jar:/usr/share/java/kafka/jetty-util-9.4.56.v20240826.jar:/usr/share/java/kafka/jetty-util-ajax-9.4.56.v20240826.jar:/usr/share/java/kafka/jline-3.25.1.jar:/usr/share/java/kafka/jopt-simple-5.0.4.jar:/usr/share/java/kafka/jose4j-0.9.4.jar:/usr/share/java/kafka/jsr305-3.0.2.jar:/usr/share/java/kafka/kafka-clients-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-group-coordinator-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-group-coordinator-api-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-log4j-appender-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-metadata-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-raft-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-server-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-server-common-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-shell-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-storage-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-storage-api-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-streams-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-streams-examples-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-streams-scala_2.13-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-streams-test-utils-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-tools-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-tools-api-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-transaction-coordinator-7.8.1-ccs.jar:/usr/share/java/kafka/kafka.jar:/usr/share/java/kafka/kafka_2.13-7.8.1-ccs.jar:/usr/share/java/kafka/lz4-java-1.8.0.jar:/usr/share/java/kafka/maven-artifact-3.9.6.jar:/usr/share/java/kafka/metrics-core-2.2.0.jar:/usr/share/java/kafka/metrics-core-4.1.12.1.jar:/usr/share/java/kafka/netty-buffer-4.1.115.Final.jar:/usr/share/java/kafka/netty-codec-4.1.115.Final.jar:/usr/share/java/kafka/netty-common-4.1.115.Final.jar:/usr/share/java/kafka/netty-handler-4.1.115.Final.jar:/usr/share/java/kafka/netty-resolver-4.1.115.Final.jar:/usr/share/java/kafka/netty-transport-4.1.115.Final.jar:/usr/share/java/kafka/netty-transport-classes-epoll-4.1.115.Final.jar:/usr/share/java/kafka/netty-transport-native-epoll-4.1.115.Final.jar:/usr/share/java/kafka/netty-transport-native-unix-common-4.1.115.Final.jar:/usr/share/java/kafka/opentelemetry-proto-1.0.0-alpha.jar:/usr/share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/share/java/kafka/paranamer-2.8.jar:/usr/share/java/kafka/pcollections-4.0.1.jar:/usr/share/java/kafka/plexus-utils-3.5.1.jar:/usr/share/java/kafka/protobuf-java-3.25.5.jar:/usr/share/java/kafka/reflections-0.10.2.jar:/usr/share/java/kafka/reload4j-1.2.25.jar:/usr/share/java/kafka/rocksdbjni-7.9.2.jar:/usr/share/java/kafka/scala-collection-compat_2.13-2.10.0.jar:/usr/share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/share/java/kafka/scala-library-2.13.14.jar:/usr/share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/share/java/kafka/scala-reflect-2.13.14.jar:/usr/share/java/kafka/slf4j-api-1.7.36.jar:/usr/share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/share/java/kafka/snappy-java-1.1.10.5.jar:/usr/share/java/kafka/swagger-annotations-2.2.8.jar:/usr/share/java/kafka/trogdor-7.8.1-ccs.jar:/usr/share/java/kafka/zookeeper-3.8.4.jar:/usr/share/java/kafka/zookeeper-jute-3.8.4.jar:/usr/share/java/kafka/zstd-jni-1.5.6-4.jar:/usr/share/java/confluent-common/build-tools-7.8.1.jar:/usr/share/java/confluent-common/common-config-7.8.1.jar:/usr/share/java/confluent-common/common-metrics-7.8.1.jar:/usr/share/java/confluent-common/common-utils-7.8.1.jar:/usr/share/java/confluent-common/slf4j-api-1.7.36.jar:/usr/share/java/kafka-serde-tools/JSONata4Java-2.4.5.jar:/usr/share/java/kafka-serde-tools/accessors-smart-2.5.0.jar:/usr/share/java/kafka-serde-tools/agrona-1.20.0.jar:/usr/share/java/kafka-serde-tools/animal-sniffer-annotations-1.23.jar:/usr/share/java/kafka-serde-tools/annotations-13.0.jar:/usr/share/java/kafka-serde-tools/annotations-3.0.1.jar:/usr/share/java/kafka-serde-tools/annotations-4.1.1.4.jar:/usr/share/java/kafka-serde-tools/antlr4-runtime-4.13.1.jar:/usr/share/java/kafka-serde-tools/api-common-2.18.0.jar:/usr/share/java/kafka-serde-tools/argparse4j-0.7.0.jar:/usr/share/java/kafka-serde-tools/asm-9.3.jar:/usr/share/java/kafka-serde-tools/auto-service-annotations-1.1.1.jar:/usr/share/java/kafka-serde-tools/auto-value-annotations-1.10.4.jar:/usr/share/java/kafka-serde-tools/avro-1.11.4.jar:/usr/share/java/kafka-serde-tools/aws-java-sdk-core-1.12.701.jar:/usr/share/java/kafka-serde-tools/aws-java-sdk-kms-1.12.701.jar:/usr/share/java/kafka-serde-tools/azure-core-1.49.1.jar:/usr/share/java/kafka-serde-tools/azure-core-http-netty-1.15.1.jar:/usr/share/java/kafka-serde-tools/azure-identity-1.13.0.jar:/usr/share/java/kafka-serde-tools/azure-json-1.1.0.jar:/usr/share/java/kafka-serde-tools/azure-security-keyvault-keys-4.8.5.jar:/usr/share/java/kafka-serde-tools/azure-xml-1.0.0.jar:/usr/share/java/kafka-serde-tools/caffeine-2.9.3.jar:/usr/share/java/kafka-serde-tools/cel-core-0.4.4.jar:/usr/share/java/kafka-serde-tools/cel-generated-antlr-0.4.4.jar:/usr/share/java/kafka-serde-tools/cel-generated-pb-0.4.4.jar:/usr/share/java/kafka-serde-tools/cel-jackson-0.4.4.jar:/usr/share/java/kafka-serde-tools/cel-tools-0.4.4.jar:/usr/share/java/kafka-serde-tools/checker-qual-3.33.0.jar:/usr/share/java/kafka-serde-tools/classgraph-4.8.138.jar:/usr/share/java/kafka-serde-tools/commons-beanutils-1.9.4.jar:/usr/share/java/kafka-serde-tools/commons-codec-1.16.1.jar:/usr/share/java/kafka-serde-tools/commons-collections-3.2.2.jar:/usr/share/java/kafka-serde-tools/commons-compress-1.26.1.jar:/usr/share/java/kafka-serde-tools/commons-digester-2.1.jar:/usr/share/java/kafka-serde-tools/commons-io-2.16.0.jar:/usr/share/java/kafka-serde-tools/commons-lang3-3.12.0.jar:/usr/share/java/kafka-serde-tools/commons-logging-1.2.jar:/usr/share/java/kafka-serde-tools/commons-text-1.10.0.jar:/usr/share/java/kafka-serde-tools/commons-validator-1.7.jar:/usr/share/java/kafka-serde-tools/conscrypt-openjdk-uber-2.5.2.jar:/usr/share/java/kafka-serde-tools/content-type-2.3.jar:/usr/share/java/kafka-serde-tools/dek-registry-client-7.8.1.jar:/usr/share/java/kafka-serde-tools/error_prone_annotations-2.18.0.jar:/usr/share/java/kafka-serde-tools/everit-json-schema-1.14.3.jar:/usr/share/java/kafka-serde-tools/failureaccess-1.0.1.jar:/usr/share/java/kafka-serde-tools/gax-2.35.0.jar:/usr/share/java/kafka-serde-tools/gax-grpc-2.35.0.jar:/usr/share/java/kafka-serde-tools/gax-httpjson-2.35.0.jar:/usr/share/java/kafka-serde-tools/google-api-client-1.35.2.jar:/usr/share/java/kafka-serde-tools/google-api-services-cloudkms-v1-rev20221107-2.0.0.jar:/usr/share/java/kafka-serde-tools/google-auth-library-credentials-1.19.0.jar:/usr/share/java/kafka-serde-tools/google-auth-library-oauth2-http-1.20.0.jar:/usr/share/java/kafka-serde-tools/google-cloud-kms-2.31.0.jar:/usr/share/java/kafka-serde-tools/google-http-client-1.43.3.jar:/usr/share/java/kafka-serde-tools/google-http-client-apache-v2-1.42.0.jar:/usr/share/java/kafka-serde-tools/google-http-client-gson-1.43.3.jar:/usr/share/java/kafka-serde-tools/google-oauth-client-1.34.1.jar:/usr/share/java/kafka-serde-tools/grpc-alts-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-api-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-auth-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-context-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-core-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-google-common-protos-2.26.0.jar:/usr/share/java/kafka-serde-tools/grpc-google-iam-v1-1.21.0.jar:/usr/share/java/kafka-serde-tools/grpc-googleapis-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-grpclb-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-inprocess-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-netty-shaded-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-protobuf-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-protobuf-lite-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-services-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-stub-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-util-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-xds-1.58.0.jar:/usr/share/java/kafka-serde-tools/gson-2.9.0.jar:/usr/share/java/kafka-serde-tools/guava-32.0.1-jre.jar:/usr/share/java/kafka-serde-tools/handy-uri-templates-2.1.8.jar:/usr/share/java/kafka-serde-tools/httpclient-4.5.13.jar:/usr/share/java/kafka-serde-tools/httpcore-4.4.15.jar:/usr/share/java/kafka-serde-tools/j2objc-annotations-2.8.jar:/usr/share/java/kafka-serde-tools/jackson-annotations-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-core-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-databind-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-cbor-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-csv-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-protobuf-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-xml-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-yaml-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-guava-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-jdk8-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-joda-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-jsr310-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-protobuf-0.9.13.jar:/usr/share/java/kafka-serde-tools/jackson-jaxrs-base-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-jaxrs-json-provider-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-module-jaxb-annotations-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-module-parameter-names-2.16.0.jar:/usr/share/java/kafka-serde-tools/jakarta.activation-api-1.2.2.jar:/usr/share/java/kafka-serde-tools/jakarta.xml.bind-api-2.3.3.jar:/usr/share/java/kafka-serde-tools/javapoet-1.13.0.jar:/usr/share/java/kafka-serde-tools/javax.annotation-api-1.3.2.jar:/usr/share/java/kafka-serde-tools/jcip-annotations-1.0-1.jar:/usr/share/java/kafka-serde-tools/jmespath-java-1.12.701.jar:/usr/share/java/kafka-serde-tools/jna-5.13.0.jar:/usr/share/java/kafka-serde-tools/jna-platform-5.6.0.jar:/usr/share/java/kafka-serde-tools/joda-time-2.10.14.jar:/usr/share/java/kafka-serde-tools/jopt-simple-5.0.4.jar:/usr/share/java/kafka-serde-tools/jose4j-0.9.5.jar:/usr/share/java/kafka-serde-tools/json-20231013.jar:/usr/share/java/kafka-serde-tools/json-sKema-0.18.0.jar:/usr/share/java/kafka-serde-tools/json-smart-2.5.0.jar:/usr/share/java/kafka-serde-tools/jsr305-3.0.2.jar:/usr/share/java/kafka-serde-tools/kafka-avro-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-connect-avro-converter-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-connect-avro-data-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-connect-json-schema-converter-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-connect-protobuf-converter-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-json-schema-provider-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-json-schema-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-json-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-log4j-appender-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/kafka-protobuf-provider-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-protobuf-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-protobuf-types-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-converter-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-aws-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-azure-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-gcp-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-hcvault-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-tink-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-rules-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-server-common-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/kafka-storage-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/kafka-storage-api-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/kafka-streams-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/kafka-streams-avro-serde-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-streams-json-schema-serde-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-streams-protobuf-serde-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-tools-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/kafka-tools-api-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/kotlin-reflect-2.0.0.jar:/usr/share/java/kafka-serde-tools/kotlin-script-runtime-1.9.10.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-common-1.9.10.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-compiler-embeddable-1.9.10.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-compiler-impl-embeddable-1.9.10.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-jvm-1.9.10.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-1.9.10.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-common-1.8.0.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-jdk7-1.8.0.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-jdk8-1.8.0.jar:/usr/share/java/kafka-serde-tools/kotlinpoet-jvm-1.18.0.jar:/usr/share/java/kafka-serde-tools/lang-tag-1.7.jar:/usr/share/java/kafka-serde-tools/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/usr/share/java/kafka-serde-tools/logredactor-1.0.12.jar:/usr/share/java/kafka-serde-tools/logredactor-metrics-1.0.12.jar:/usr/share/java/kafka-serde-tools/mbknor-jackson-jsonschema_2.13-1.0.39.jar:/usr/share/java/kafka-serde-tools/metrics-core-2.2.0.jar:/usr/share/java/kafka-serde-tools/minimal-json-0.9.5.jar:/usr/share/java/kafka-serde-tools/msal4j-1.15.1.jar:/usr/share/java/kafka-serde-tools/msal4j-persistence-extension-1.3.0.jar:/usr/share/java/kafka-serde-tools/netty-buffer-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-codec-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-codec-dns-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-codec-http-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-codec-http2-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-codec-socks-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-common-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-handler-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-handler-proxy-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-resolver-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-resolver-dns-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-resolver-dns-classes-macos-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-resolver-dns-native-macos-4.1.113.Final-osx-x86_64.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-linux-aarch_64.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-linux-x86_64.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-osx-aarch_64.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-osx-x86_64.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-windows-x86_64.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-classes-2.0.66.Final.jar:/usr/share/java/kafka-serde-tools/netty-transport-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-transport-classes-epoll-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-transport-classes-kqueue-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-transport-native-epoll-4.1.113.Final-linux-x86_64.jar:/usr/share/java/kafka-serde-tools/netty-transport-native-kqueue-4.1.113.Final-osx-x86_64.jar:/usr/share/java/kafka-serde-tools/netty-transport-native-unix-common-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/nimbus-jose-jwt-9.37.3.jar:/usr/share/java/kafka-serde-tools/oauth2-oidc-sdk-11.9.1.jar:/usr/share/java/kafka-serde-tools/okio-jvm-3.4.0.jar:/usr/share/java/kafka-serde-tools/opencensus-api-0.31.1.jar:/usr/share/java/kafka-serde-tools/opencensus-contrib-http-util-0.31.1.jar:/usr/share/java/kafka-serde-tools/opencensus-proto-0.2.0.jar:/usr/share/java/kafka-serde-tools/pcollections-4.0.1.jar:/usr/share/java/kafka-serde-tools/perfmark-api-0.26.0.jar:/usr/share/java/kafka-serde-tools/picocli-4.7.5.jar:/usr/share/java/kafka-serde-tools/proto-google-cloud-kms-v1-0.124.0.jar:/usr/share/java/kafka-serde-tools/proto-google-common-protos-2.22.1.jar:/usr/share/java/kafka-serde-tools/proto-google-iam-v1-1.21.0.jar:/usr/share/java/kafka-serde-tools/protobuf-java-3.25.5.jar:/usr/share/java/kafka-serde-tools/protobuf-java-util-3.25.5.jar:/usr/share/java/kafka-serde-tools/protoparser-4.0.3.jar:/usr/share/java/kafka-serde-tools/re2j-1.6.jar:/usr/share/java/kafka-serde-tools/reactive-streams-1.0.4.jar:/usr/share/java/kafka-serde-tools/reactor-core-3.4.38.jar:/usr/share/java/kafka-serde-tools/reactor-netty-core-1.0.45.jar:/usr/share/java/kafka-serde-tools/reactor-netty-http-1.0.45.jar:/usr/share/java/kafka-serde-tools/reload4j-1.2.25.jar:/usr/share/java/kafka-serde-tools/rocksdbjni-7.9.2.jar:/usr/share/java/kafka-serde-tools/scala-library-2.13.11.jar:/usr/share/java/kafka-serde-tools/slf4j-api-1.7.36.jar:/usr/share/java/kafka-serde-tools/slf4j-reload4j-1.7.36.jar:/usr/share/java/kafka-serde-tools/snakeyaml-2.0.jar:/usr/share/java/kafka-serde-tools/stax2-api-4.2.1.jar:/usr/share/java/kafka-serde-tools/swagger-annotations-2.1.10.jar:/usr/share/java/kafka-serde-tools/threetenbp-1.6.8.jar:/usr/share/java/kafka-serde-tools/tink-1.14.1.jar:/usr/share/java/kafka-serde-tools/tink-awskms-1.10.1.jar:/usr/share/java/kafka-serde-tools/tink-gcpkms-1.10.0.jar:/usr/share/java/kafka-serde-tools/validation-api-2.0.1.Final.jar:/usr/share/java/kafka-serde-tools/vault-java-driver-5.4.0.jar:/usr/share/java/kafka-serde-tools/wire-runtime-jvm-5.0.0.jar:/usr/share/java/kafka-serde-tools/wire-schema-jvm-5.0.0.jar:/usr/share/java/kafka-serde-tools/woodstox-core-6.5.1.jar:/usr/share/java/monitoring-interceptors/monitoring-interceptors-7.8.1.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/audience-annotations-0.12.0.jar:/usr/bin/../share/java/kafka/caffeine-2.9.3.jar:/usr/bin/../share/java/kafka/checker-qual-3.19.0.jar:/usr/bin/../share/java/kafka/commons-beanutils-1.9.4.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/commons-collections-3.2.2.jar:/usr/bin/../share/java/kafka/commons-digester-2.1.jar:/usr/bin/../share/java/kafka/commons-io-2.16.0.jar:/usr/bin/../share/java/kafka/commons-lang3-3.12.0.jar:/usr/bin/../share/java/kafka/commons-logging-1.2.jar:/usr/bin/../share/java/kafka/commons-validator-1.7.jar:/usr/bin/../share/java/kafka/connect-api-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/connect-json-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/connect-mirror-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/connect-runtime-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/connect-transforms-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/error_prone_annotations-2.10.0.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-core-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-databind-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-module-afterburner-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.16.2.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/bin/../share/java/kafka/javassist-3.29.2-GA.jar:/usr/bin/../share/java/kafka/javax.activation-api-1.2.0.jar:/usr/bin/../share/java/kafka/javax.annotation-api-1.3.2.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/jaxb-api-2.3.1.jar:/usr/bin/../share/java/kafka/jersey-client-2.39.1.jar:/usr/bin/../share/java/kafka/jersey-common-2.39.1.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.39.1.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.39.1.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.39.1.jar:/usr/bin/../share/java/kafka/jersey-server-2.39.1.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jline-3.25.1.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/jose4j-0.9.4.jar:/usr/bin/../share/java/kafka/jsr305-3.0.2.jar:/usr/bin/../share/java/kafka/kafka-clients-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-group-coordinator-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-group-coordinator-api-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-raft-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-server-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-shell-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-storage-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-tools-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-tools-api-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-transaction-coordinator-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/maven-artifact-3.9.6.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.115.Final.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.115.Final.jar:/usr/bin/../share/java/kafka/netty-common-4.1.115.Final.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.115.Final.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.115.Final.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.115.Final.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.115.Final.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.115.Final.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.115.Final.jar:/usr/bin/../share/java/kafka/opentelemetry-proto-1.0.0-alpha.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/pcollections-4.0.1.jar:/usr/bin/../share/java/kafka/plexus-utils-3.5.1.jar:/usr/bin/../share/java/kafka/protobuf-java-3.25.5.jar:/usr/bin/../share/java/kafka/reflections-0.10.2.jar:/usr/bin/../share/java/kafka/reload4j-1.2.25.jar:/usr/bin/../share/java/kafka/rocksdbjni-7.9.2.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.10.0.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/bin/../share/java/kafka/scala-library-2.13.14.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.14.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.36.jar:/usr/bin/../share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.10.5.jar:/usr/bin/../share/java/kafka/swagger-annotations-2.2.8.jar:/usr/bin/../share/java/kafka/trogdor-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/zookeeper-3.8.4.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.8.4.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.6-4.jar:/usr/bin/../share/java/confluent-telemetry/confluent-metrics-7.8.1-ce.jar
benchi-kafka-connect  | 	os.spec = Linux, amd64, 6.1.132-147.221.amzn2023.x86_64
benchi-kafka-connect  | 	os.vcpus = 8
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.WorkerInfo)
benchi-kafka-connect  | [2025-04-23 23:56:45,917] INFO Scanning for plugin classes. This might take a moment ... (org.apache.kafka.connect.cli.AbstractConnectCli)
benchi-kafka-connect  | [2025-04-23 23:56:45,980] INFO Loading plugin from: /usr/share/java/cp-base-new (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,214] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/cp-base-new/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,216] INFO Loading plugin from: /usr/share/java/acl (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,393] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/acl/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,393] INFO Loading plugin from: /usr/share/java/confluent-common (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,404] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-common/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,404] INFO Loading plugin from: /usr/share/java/confluent-control-center (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,722] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-control-center/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,722] INFO Loading plugin from: /usr/share/java/confluent-hub-client (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,732] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-hub-client/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,732] INFO Loading plugin from: /usr/share/java/confluent-telemetry (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,738] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-telemetry/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,738] INFO Loading plugin from: /usr/share/java/kafka-serde-tools (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,761] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka-serde-tools/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,762] INFO Loading plugin from: /usr/share/java/monitoring-interceptors (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,771] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/monitoring-interceptors/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,771] INFO Loading plugin from: /usr/share/java/rest-utils (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,792] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/rest-utils/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,792] INFO Loading plugin from: /usr/share/java/schema-registry (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,888] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/schema-registry/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:46,888] INFO Loading plugin from: /usr/share/java/kafka (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:47,039] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:47,039] INFO Loading plugin from: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:47,049] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:47,054] INFO Loading plugin from: classpath (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:47,061] INFO Registered loader: jdk.internal.loader.ClassLoaders$AppClassLoader@4567f35d (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:47,061] INFO Scanning plugins with ServiceLoaderScanner took 1083 ms (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:47,062] INFO Loading plugin from: /usr/share/java/cp-base-new (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:48,015] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/cp-base-new/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:48,016] INFO Loading plugin from: /usr/share/java/acl (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:55,225] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/acl/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:55,225] INFO Loading plugin from: /usr/share/java/confluent-common (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:55,230] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-common/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:55,231] INFO Loading plugin from: /usr/share/java/confluent-control-center (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:57,548] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-control-center/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:57,548] INFO Loading plugin from: /usr/share/java/confluent-hub-client (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:57,670] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-hub-client/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:57,670] INFO Loading plugin from: /usr/share/java/confluent-telemetry (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:58,315] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-telemetry/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:58,315] INFO Loading plugin from: /usr/share/java/kafka-serde-tools (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:59,622] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka-serde-tools/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:59,622] INFO Loading plugin from: /usr/share/java/monitoring-interceptors (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:59,873] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/monitoring-interceptors/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:56:59,873] INFO Loading plugin from: /usr/share/java/rest-utils (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:00,347] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/rest-utils/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:00,348] INFO Loading plugin from: /usr/share/java/schema-registry (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:01,131] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/schema-registry/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:01,131] INFO Loading plugin from: /usr/share/java/kafka (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:01,703] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:01,703] INFO Loading plugin from: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:01,851] INFO Using up-to-date JsonConverter implementation (io.debezium.converters.CloudEventsConverter)
benchi-kafka-connect  | [2025-04-23 23:57:01,875] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:01,875] INFO Loading plugin from: classpath (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:03,783] INFO Registered loader: jdk.internal.loader.ClassLoaders$AppClassLoader@4567f35d (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:03,784] INFO Scanning plugins with ReflectionScanner took 16722 ms (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-23 23:57:03,791] WARN One or more plugins are missing ServiceLoader manifests may not be usable with plugin.discovery=service_load: [
benchi-kafka-connect  | file:/usr/share/java/acl/	io.confluent.connect.avro.AvroConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/confluent-control-center/	io.confluent.connect.avro.AvroConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/kafka-serde-tools/	io.confluent.connect.avro.AvroConverter	converter	undefined
benchi-kafka-connect  | classpath	io.confluent.connect.avro.AvroConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/acl/	io.confluent.connect.json.JsonSchemaConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/confluent-control-center/	io.confluent.connect.json.JsonSchemaConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/kafka-serde-tools/	io.confluent.connect.json.JsonSchemaConverter	converter	undefined
benchi-kafka-connect  | classpath	io.confluent.connect.json.JsonSchemaConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/acl/	io.confluent.connect.protobuf.ProtobufConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/confluent-control-center/	io.confluent.connect.protobuf.ProtobufConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/kafka-serde-tools/	io.confluent.connect.protobuf.ProtobufConverter	converter	undefined
benchi-kafka-connect  | classpath	io.confluent.connect.protobuf.ProtobufConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.connector.mysql.MySqlConnector	source	2.4.2.Final
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.connector.mysql.transforms.ReadToInsertEvent	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.converters.BinaryDataConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.converters.BinaryDataConverter	header_converter	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.converters.ByteArrayConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.converters.ByteArrayConverter	header_converter	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.converters.CloudEventsConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.ByLogicalTableRouter	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.ExtractChangedRecordState	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.ExtractNewRecordState	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.HeaderToValue	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.SchemaChangeEventFilter	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.TimezoneConverter	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.outbox.EventRouter	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.partitions.ComputePartition	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.partitions.PartitionRouting	transformation	undefined
benchi-kafka-connect  | file:/usr/share/confluent-hub-components/debezium-debezium-connector-mysql/	io.debezium.transforms.tracing.ActivateTracingSpan	transformation	undefined
benchi-kafka-connect  | ]
benchi-kafka-connect  | Read the documentation at https://kafka.apache.org/documentation.html#connect_plugindiscovery for instructions on migrating your plugins to take advantage of the performance improvements of service_load mode. To silence this warning, set plugin.discovery=only_scan in the worker config. (org.apache.kafka.connect.runtime.isolation.Plugins)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.transforms.ReplaceField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.transforms.Filter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.mirror.MirrorSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.transforms.InsertField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.converters.DoubleConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.transforms.DropHeaders' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.transforms.Cast$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.storage.SimpleHeaderConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.transforms.InsertHeader' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'io.confluent.connect.json.JsonSchemaConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'io.debezium.converters.BinaryDataConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.common.config.provider.DirectoryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.transforms.Flatten$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.mirror.MirrorCheckpointConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.transforms.HeaderFrom$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,793] INFO Added plugin 'org.apache.kafka.connect.transforms.SetSchemaMetadata$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.debezium.transforms.ExtractNewRecordState' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.debezium.converters.ByteArrayConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.debezium.transforms.partitions.PartitionRouting' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.predicates.TopicNameMatches' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.ReplaceField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.debezium.transforms.outbox.EventRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.SetSchemaMetadata$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.converters.IntegerConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.predicates.RecordIsTombstone' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.debezium.transforms.partitions.ComputePartition' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.debezium.connector.mysql.MySqlConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.converters.ByteArrayConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.confluent.connect.avro.AvroConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.confluent.connect.security.ConnectSecurityExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.Cast$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.Flatten$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.ExtractField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.TimestampConverter$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.converters.FloatConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.TimestampConverter$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.debezium.transforms.HeaderToValue' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.debezium.transforms.SchemaChangeEventFilter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.TimestampRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'io.debezium.transforms.ByLogicalTableRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.RegexRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.HoistField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,794] INFO Added plugin 'org.apache.kafka.connect.transforms.ValueToKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.converters.LongConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.common.config.provider.FileConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'io.confluent.kafka.schemaregistry.client.config.provider.SchemaRegistryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.json.JsonConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'io.debezium.transforms.TimezoneConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.transforms.HeaderFrom$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'io.confluent.connect.protobuf.ProtobufConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.transforms.predicates.HasHeaderKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.transforms.MaskField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.common.config.provider.EnvVarConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'io.debezium.transforms.ExtractChangedRecordState' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.storage.StringConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'io.debezium.transforms.tracing.ActivateTracingSpan' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.transforms.MaskField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'io.debezium.connector.mysql.rest.DebeziumMySqlConnectRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.transforms.ExtractField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'io.debezium.connector.mysql.transforms.ReadToInsertEvent' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.transforms.InsertField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.converters.BooleanConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.mirror.MirrorHeartbeatConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'io.debezium.converters.CloudEventsConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,795] INFO Added plugin 'org.apache.kafka.connect.transforms.HoistField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,796] INFO Added plugin 'org.apache.kafka.connect.converters.ShortConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,799] INFO Added alias 'JsonSchema' to plugin 'io.confluent.connect.json.JsonSchemaConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,799] INFO Added alias 'RecordIsTombstone' to plugin 'org.apache.kafka.connect.transforms.predicates.RecordIsTombstone' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,799] INFO Added alias 'CloudEventsConverter' to plugin 'io.debezium.converters.CloudEventsConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,799] INFO Added alias 'String' to plugin 'org.apache.kafka.connect.storage.StringConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'MySql' to plugin 'io.debezium.connector.mysql.MySqlConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'EnvVar' to plugin 'org.apache.kafka.common.config.provider.EnvVarConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'EnvVarConfigProvider' to plugin 'org.apache.kafka.common.config.provider.EnvVarConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'MirrorCheckpointConnector' to plugin 'org.apache.kafka.connect.mirror.MirrorCheckpointConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'Boolean' to plugin 'org.apache.kafka.connect.converters.BooleanConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'MySqlConnector' to plugin 'io.debezium.connector.mysql.MySqlConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'AvroConverter' to plugin 'io.confluent.connect.avro.AvroConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'HeaderToValue' to plugin 'io.debezium.transforms.HeaderToValue' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'PartitionRouting' to plugin 'io.debezium.transforms.partitions.PartitionRouting' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'SchemaRegistryConfigProvider' to plugin 'io.confluent.kafka.schemaregistry.client.config.provider.SchemaRegistryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'Json' to plugin 'org.apache.kafka.connect.json.JsonConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'StringConverter' to plugin 'org.apache.kafka.connect.storage.StringConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'IntegerConverter' to plugin 'org.apache.kafka.connect.converters.IntegerConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'Float' to plugin 'org.apache.kafka.connect.converters.FloatConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'LongConverter' to plugin 'org.apache.kafka.connect.converters.LongConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'DropHeaders' to plugin 'org.apache.kafka.connect.transforms.DropHeaders' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'SimpleHeaderConverter' to plugin 'org.apache.kafka.connect.storage.SimpleHeaderConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'BinaryData' to plugin 'io.debezium.converters.BinaryDataConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'DirectoryConfigProvider' to plugin 'org.apache.kafka.common.config.provider.DirectoryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'ReadToInsertEvent' to plugin 'io.debezium.connector.mysql.transforms.ReadToInsertEvent' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'ShortConverter' to plugin 'org.apache.kafka.connect.converters.ShortConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'CloudEvents' to plugin 'io.debezium.converters.CloudEventsConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'TimezoneConverter' to plugin 'io.debezium.transforms.TimezoneConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'BasicAuthSecurityRestExtension' to plugin 'org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'Avro' to plugin 'io.confluent.connect.avro.AvroConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'Simple' to plugin 'org.apache.kafka.connect.storage.SimpleHeaderConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'Protobuf' to plugin 'io.confluent.connect.protobuf.ProtobufConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'AllConnectorClientConfigOverridePolicy' to plugin 'org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'ExtractNewRecordState' to plugin 'io.debezium.transforms.ExtractNewRecordState' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'MirrorSource' to plugin 'org.apache.kafka.connect.mirror.MirrorSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,800] INFO Added alias 'Directory' to plugin 'org.apache.kafka.common.config.provider.DirectoryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'MirrorHeartbeat' to plugin 'org.apache.kafka.connect.mirror.MirrorHeartbeatConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'BooleanConverter' to plugin 'org.apache.kafka.connect.converters.BooleanConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'HasHeaderKey' to plugin 'org.apache.kafka.connect.transforms.predicates.HasHeaderKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'ConnectSecurityExtension' to plugin 'io.confluent.connect.security.ConnectSecurityExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'MirrorCheckpoint' to plugin 'org.apache.kafka.connect.mirror.MirrorCheckpointConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'ExtractChangedRecordState' to plugin 'io.debezium.transforms.ExtractChangedRecordState' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'None' to plugin 'org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'TimestampRouter' to plugin 'org.apache.kafka.connect.transforms.TimestampRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'Principal' to plugin 'org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'All' to plugin 'org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'JsonConverter' to plugin 'org.apache.kafka.connect.json.JsonConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'DebeziumMySql' to plugin 'io.debezium.connector.mysql.rest.DebeziumMySqlConnectRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'DebeziumMySqlConnectRestExtension' to plugin 'io.debezium.connector.mysql.rest.DebeziumMySqlConnectRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'RegexRouter' to plugin 'org.apache.kafka.connect.transforms.RegexRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'ComputePartition' to plugin 'io.debezium.transforms.partitions.ComputePartition' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'NoneConnectorClientConfigOverridePolicy' to plugin 'org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'Short' to plugin 'org.apache.kafka.connect.converters.ShortConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'ByLogicalTableRouter' to plugin 'io.debezium.transforms.ByLogicalTableRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'Double' to plugin 'org.apache.kafka.connect.converters.DoubleConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'FileConfigProvider' to plugin 'org.apache.kafka.common.config.provider.FileConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'EventRouter' to plugin 'io.debezium.transforms.outbox.EventRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'SchemaChangeEventFilter' to plugin 'io.debezium.transforms.SchemaChangeEventFilter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'Long' to plugin 'org.apache.kafka.connect.converters.LongConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'File' to plugin 'org.apache.kafka.common.config.provider.FileConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'FloatConverter' to plugin 'org.apache.kafka.connect.converters.FloatConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'ActivateTracingSpan' to plugin 'io.debezium.transforms.tracing.ActivateTracingSpan' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'DoubleConverter' to plugin 'org.apache.kafka.connect.converters.DoubleConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'BinaryDataConverter' to plugin 'io.debezium.converters.BinaryDataConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'TopicNameMatches' to plugin 'org.apache.kafka.connect.transforms.predicates.TopicNameMatches' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'ProtobufConverter' to plugin 'io.confluent.connect.protobuf.ProtobufConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'MirrorHeartbeatConnector' to plugin 'org.apache.kafka.connect.mirror.MirrorHeartbeatConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'InsertHeader' to plugin 'org.apache.kafka.connect.transforms.InsertHeader' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'MirrorSourceConnector' to plugin 'org.apache.kafka.connect.mirror.MirrorSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'PrincipalConnectorClientConfigOverridePolicy' to plugin 'org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'ValueToKey' to plugin 'org.apache.kafka.connect.transforms.ValueToKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'Integer' to plugin 'org.apache.kafka.connect.converters.IntegerConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'JsonSchemaConverter' to plugin 'io.confluent.connect.json.JsonSchemaConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'Filter' to plugin 'org.apache.kafka.connect.transforms.Filter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,801] INFO Added alias 'SchemaRegistry' to plugin 'io.confluent.kafka.schemaregistry.client.config.provider.SchemaRegistryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-23 23:57:03,831] INFO DistributedConfig values: 
benchi-kafka-connect  | 	access.control.allow.methods = 
benchi-kafka-connect  | 	access.control.allow.origin = 
benchi-kafka-connect  | 	admin.listeners = null
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = 
benchi-kafka-connect  | 	config.providers = []
benchi-kafka-connect  | 	config.storage.replication.factor = 1
benchi-kafka-connect  | 	config.storage.topic = benchi-connect-configs
benchi-kafka-connect  | 	connect.protocol = sessioned
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	connector.client.config.override.policy = All
benchi-kafka-connect  | 	exactly.once.source.support = disabled
benchi-kafka-connect  | 	group.id = connect-cluster-group
benchi-kafka-connect  | 	header.converter = class org.apache.kafka.connect.storage.SimpleHeaderConverter
benchi-kafka-connect  | 	heartbeat.interval.ms = 3000
benchi-kafka-connect  | 	inter.worker.key.generation.algorithm = HmacSHA256
benchi-kafka-connect  | 	inter.worker.key.size = null
benchi-kafka-connect  | 	inter.worker.key.ttl.ms = 3600000
benchi-kafka-connect  | 	inter.worker.signature.algorithm = HmacSHA256
benchi-kafka-connect  | 	inter.worker.verification.algorithms = [HmacSHA256]
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	listeners = [http://:8083]
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	offset.flush.interval.ms = 10000
benchi-kafka-connect  | 	offset.flush.timeout.ms = 5000
benchi-kafka-connect  | 	offset.storage.partitions = 25
benchi-kafka-connect  | 	offset.storage.replication.factor = 1
benchi-kafka-connect  | 	offset.storage.topic = benchi-connect-offsets
benchi-kafka-connect  | 	plugin.discovery = hybrid_warn
benchi-kafka-connect  | 	plugin.path = [/usr/share/java, /usr/share/confluent-hub-components]
benchi-kafka-connect  | 	rebalance.timeout.ms = 60000
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 40000
benchi-kafka-connect  | 	response.http.headers.config = 
benchi-kafka-connect  | 	rest.advertised.host.name = benchi-kafka-connect
benchi-kafka-connect  | 	rest.advertised.listener = null
benchi-kafka-connect  | 	rest.advertised.port = null
benchi-kafka-connect  | 	rest.extension.classes = []
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	scheduled.rebalance.max.delay.ms = 300000
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	session.timeout.ms = 10000
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.client.auth = none
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	status.storage.partitions = 5
benchi-kafka-connect  | 	status.storage.replication.factor = 1
benchi-kafka-connect  | 	status.storage.topic = benchi-connect-status
benchi-kafka-connect  | 	task.shutdown.graceful.timeout.ms = 5000
benchi-kafka-connect  | 	topic.creation.enable = true
benchi-kafka-connect  | 	topic.tracking.allow.reset = true
benchi-kafka-connect  | 	topic.tracking.enable = true
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	worker.sync.timeout.ms = 3000
benchi-kafka-connect  | 	worker.unsync.backoff.ms = 300000
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.distributed.DistributedConfig)
benchi-kafka-connect  | [2025-04-23 23:57:03,831] INFO Creating Kafka admin client (org.apache.kafka.connect.runtime.WorkerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:03,833] INFO AdminClientConfig values: 
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	bootstrap.controllers = []
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = 
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  |  (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-23 23:57:03,889] INFO These configurations '[log4j.loggers, config.storage.topic, auto.create.topics.enable, rest.advertised.host.name, group.id, status.storage.topic, plugin.path, offset.flush.interval.ms, rest.port, config.storage.replication.factor, status.storage.replication.factor, offset.storage.replication.factor, offset.storage.topic, value.converter, key.converter]' were supplied but are not used yet. (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-23 23:57:03,890] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:03,890] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:03,890] INFO Kafka startTimeMs: 1745452623889 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,182] INFO Kafka cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.connect.runtime.WorkerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,184] INFO App info kafka.admin.client for adminclient-1 unregistered (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,188] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:04,188] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:04,189] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:04,193] INFO PublicConfig values: 
benchi-kafka-connect  | 	access.control.allow.methods = 
benchi-kafka-connect  | 	access.control.allow.origin = 
benchi-kafka-connect  | 	admin.listeners = null
benchi-kafka-connect  | 	listeners = [http://:8083]
benchi-kafka-connect  | 	response.http.headers.config = 
benchi-kafka-connect  | 	rest.advertised.host.name = benchi-kafka-connect
benchi-kafka-connect  | 	rest.advertised.listener = null
benchi-kafka-connect  | 	rest.advertised.port = null
benchi-kafka-connect  | 	rest.extension.classes = []
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.client.auth = none
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	topic.tracking.allow.reset = true
benchi-kafka-connect  | 	topic.tracking.enable = true
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.rest.RestServerConfig$PublicConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,199] INFO Logging initialized @18808ms to org.eclipse.jetty.util.log.Slf4jLog (org.eclipse.jetty.util.log)
benchi-kafka-connect  | [2025-04-23 23:57:04,252] INFO Added connector for http://:8083 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,253] INFO Initializing REST server (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,270] INFO jetty-9.4.56.v20240826; built: 2024-08-26T17:15:05.868Z; git: ec6782ff5ead824dabdcf47fa98f90a4aedff401; jvm 17.0.13+11 (org.eclipse.jetty.server.Server)
benchi-kafka-connect  | [2025-04-23 23:57:04,293] INFO Started http_8083@337310a{HTTP/1.1, (http/1.1)}{0.0.0.0:8083} (org.eclipse.jetty.server.AbstractConnector)
benchi-kafka-connect  | [2025-04-23 23:57:04,293] INFO Started @18902ms (org.eclipse.jetty.server.Server)
benchi-kafka-connect  | [2025-04-23 23:57:04,313] INFO Advertised URI: http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,314] INFO REST server listening at http://172.23.0.4:8083/, advertising URL http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,314] INFO Advertised URI: http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,314] INFO REST admin endpoints at http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,314] INFO Advertised URI: http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,314] INFO Setting up All Policy for ConnectorClientConfigOverride. This will allow all client configurations to be overridden (org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy)
benchi-kafka-connect  | [2025-04-23 23:57:04,318] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = key
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = false
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,345] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,346] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,346] INFO Kafka startTimeMs: 1745452624345 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,351] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = key
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = false
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,352] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = value
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = false
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,375] INFO Advertised URI: http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,408] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,409] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,409] INFO Kafka startTimeMs: 1745452624408 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,410] INFO Kafka Connect worker initialization took 18496ms (org.apache.kafka.connect.cli.AbstractConnectCli)
benchi-kafka-connect  | [2025-04-23 23:57:04,410] INFO Kafka Connect starting (org.apache.kafka.connect.runtime.Connect)
benchi-kafka-connect  | [2025-04-23 23:57:04,414] INFO Initializing REST resources (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,414] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Herder starting (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:04,415] INFO Worker starting (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:04,415] INFO Starting KafkaOffsetBackingStore (org.apache.kafka.connect.storage.KafkaOffsetBackingStore)
benchi-kafka-connect  | [2025-04-23 23:57:04,415] INFO Starting KafkaBasedLog with topic benchi-connect-offsets reportErrorsToCallback=false (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-23 23:57:04,416] INFO AdminClientConfig values: 
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	bootstrap.controllers = []
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-shared-admin
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  |  (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,420] INFO These configurations '[log4j.loggers, config.storage.topic, auto.create.topics.enable, metrics.context.connect.group.id, rest.advertised.host.name, group.id, status.storage.topic, plugin.path, offset.flush.interval.ms, rest.port, config.storage.replication.factor, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.replication.factor, offset.storage.topic, value.converter, key.converter]' were supplied but are not used yet. (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,420] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,420] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,420] INFO Kafka startTimeMs: 1745452624420 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,439] INFO Adding admin resources to main listener (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,470] INFO DefaultSessionIdManager workerName=node0 (org.eclipse.jetty.server.session)
benchi-kafka-connect  | [2025-04-23 23:57:04,470] INFO No SessionScavenger set, using defaults (org.eclipse.jetty.server.session)
benchi-kafka-connect  | [2025-04-23 23:57:04,471] INFO node0 Scavenging every 600000ms (org.eclipse.jetty.server.session)
benchi-kafka-connect  | [2025-04-23 23:57:04,481] INFO Created topic (name=benchi-connect-offsets, numPartitions=25, replicationFactor=1, replicasAssignments=null, configs={cleanup.policy=compact}) on brokers at benchi-kafka:9092 (org.apache.kafka.connect.util.TopicAdmin)
benchi-kafka-connect  | [2025-04-23 23:57:04,488] INFO ProducerConfig values: 
benchi-kafka-connect  | 	acks = -1
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	batch.size = 16384
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	buffer.memory = 33554432
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-offsets
benchi-kafka-connect  | 	compression.gzip.level = -1
benchi-kafka-connect  | 	compression.lz4.level = 9
benchi-kafka-connect  | 	compression.type = none
benchi-kafka-connect  | 	compression.zstd.level = 3
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	delivery.timeout.ms = 2147483647
benchi-kafka-connect  | 	enable.idempotence = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  | 	linger.ms = 0
benchi-kafka-connect  | 	max.block.ms = 60000
benchi-kafka-connect  | 	max.in.flight.requests.per.connection = 1
benchi-kafka-connect  | 	max.request.size = 1048576
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.max.idle.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partitioner.adaptive.partitioning.enable = true
benchi-kafka-connect  | 	partitioner.availability.timeout.ms = 0
benchi-kafka-connect  | 	partitioner.class = null
benchi-kafka-connect  | 	partitioner.ignore.keys = false
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	transaction.timeout.ms = 60000
benchi-kafka-connect  | 	transactional.id = null
benchi-kafka-connect  | 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  |  (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,507] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-23 23:57:04,535] INFO These configurations '[log4j.loggers, auto.create.topics.enable, group.id, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,535] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,535] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,535] INFO Kafka startTimeMs: 1745452624535 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,541] INFO ConsumerConfig values: 
benchi-kafka-connect  | 	allow.auto.create.topics = true
benchi-kafka-connect  | 	auto.commit.interval.ms = 5000
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	auto.offset.reset = earliest
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	check.crcs = true
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-offsets
benchi-kafka-connect  | 	client.rack = 
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.auto.commit = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	exclude.internal.topics = true
benchi-kafka-connect  | 	fetch.max.bytes = 52428800
benchi-kafka-connect  | 	fetch.max.wait.ms = 500
benchi-kafka-connect  | 	fetch.min.bytes = 1
benchi-kafka-connect  | 	group.id = connect-cluster-group
benchi-kafka-connect  | 	group.instance.id = null
benchi-kafka-connect  | 	group.protocol = classic
benchi-kafka-connect  | 	group.remote.assignor = null
benchi-kafka-connect  | 	heartbeat.interval.ms = 3000
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	internal.leave.group.on.close = true
benchi-kafka-connect  | 	internal.throw.on.fetch.stable.offset.unsupported = false
benchi-kafka-connect  | 	isolation.level = read_uncommitted
benchi-kafka-connect  | 	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
benchi-kafka-connect  | 	max.partition.fetch.bytes = 1048576
benchi-kafka-connect  | 	max.poll.interval.ms = 300000
benchi-kafka-connect  | 	max.poll.records = 500
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	session.timeout.ms = 45000
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
benchi-kafka-connect  |  (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,547] INFO [Producer clientId=connect-cluster-group-offsets] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:04,551] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-23 23:57:04,581] INFO These configurations '[log4j.loggers, auto.create.topics.enable, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,581] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,581] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,581] INFO Kafka startTimeMs: 1745452624581 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,589] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:04,599] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Assigned to partition(s): benchi-connect-offsets-17, benchi-connect-offsets-20, benchi-connect-offsets-11, benchi-connect-offsets-23, benchi-connect-offsets-14, benchi-connect-offsets-5, benchi-connect-offsets-0, benchi-connect-offsets-8, benchi-connect-offsets-7, benchi-connect-offsets-4, benchi-connect-offsets-1, benchi-connect-offsets-10, benchi-connect-offsets-13, benchi-connect-offsets-24, benchi-connect-offsets-21, benchi-connect-offsets-16, benchi-connect-offsets-3, benchi-connect-offsets-9, benchi-connect-offsets-15, benchi-connect-offsets-18, benchi-connect-offsets-19, benchi-connect-offsets-22, benchi-connect-offsets-6, benchi-connect-offsets-2, benchi-connect-offsets-12 (org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-17 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-20 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-11 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-23 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-14 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-5 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-8 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-7 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-4 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-1 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-10 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-13 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-24 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-21 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-16 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-3 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-9 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-15 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-18 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-19 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,601] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-22 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,602] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-6 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,602] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-2 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,602] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-12 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,733] INFO 172.23.0.4 - - [23/Apr/2025:23:57:04 +0000] "GET /connectors HTTP/1.1" 404 447 "-" "curl/7.61.1" 18 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,788] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-24 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-22 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-20 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-18 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-16 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-14 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-12 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-10 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-23 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-21 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-19 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-17 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-15 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-13 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,789] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-11 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,791] INFO Finished reading KafkaBasedLog for topic benchi-connect-offsets (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-23 23:57:04,791] INFO Started KafkaBasedLog for topic benchi-connect-offsets (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-23 23:57:04,791] INFO Finished reading offsets topic and starting KafkaOffsetBackingStore (org.apache.kafka.connect.storage.KafkaOffsetBackingStore)
benchi-kafka-connect  | [2025-04-23 23:57:04,792] INFO Worker started (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:04,792] INFO Starting KafkaBasedLog with topic benchi-connect-status reportErrorsToCallback=false (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-23 23:57:04,827] INFO Created topic (name=benchi-connect-status, numPartitions=5, replicationFactor=1, replicasAssignments=null, configs={cleanup.policy=compact}) on brokers at benchi-kafka:9092 (org.apache.kafka.connect.util.TopicAdmin)
benchi-kafka-connect  | [2025-04-23 23:57:04,828] INFO ProducerConfig values: 
benchi-kafka-connect  | 	acks = -1
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	batch.size = 16384
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	buffer.memory = 33554432
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-statuses
benchi-kafka-connect  | 	compression.gzip.level = -1
benchi-kafka-connect  | 	compression.lz4.level = 9
benchi-kafka-connect  | 	compression.type = none
benchi-kafka-connect  | 	compression.zstd.level = 3
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	delivery.timeout.ms = 120000
benchi-kafka-connect  | 	enable.idempotence = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
benchi-kafka-connect  | 	linger.ms = 0
benchi-kafka-connect  | 	max.block.ms = 60000
benchi-kafka-connect  | 	max.in.flight.requests.per.connection = 1
benchi-kafka-connect  | 	max.request.size = 1048576
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.max.idle.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partitioner.adaptive.partitioning.enable = true
benchi-kafka-connect  | 	partitioner.availability.timeout.ms = 0
benchi-kafka-connect  | 	partitioner.class = null
benchi-kafka-connect  | 	partitioner.ignore.keys = false
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 0
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	transaction.timeout.ms = 60000
benchi-kafka-connect  | 	transactional.id = null
benchi-kafka-connect  | 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  |  (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,828] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-23 23:57:04,832] INFO These configurations '[log4j.loggers, auto.create.topics.enable, group.id, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,832] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,832] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,832] INFO Kafka startTimeMs: 1745452624832 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,833] INFO ConsumerConfig values: 
benchi-kafka-connect  | 	allow.auto.create.topics = true
benchi-kafka-connect  | 	auto.commit.interval.ms = 5000
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	auto.offset.reset = earliest
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	check.crcs = true
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-statuses
benchi-kafka-connect  | 	client.rack = 
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.auto.commit = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	exclude.internal.topics = true
benchi-kafka-connect  | 	fetch.max.bytes = 52428800
benchi-kafka-connect  | 	fetch.max.wait.ms = 500
benchi-kafka-connect  | 	fetch.min.bytes = 1
benchi-kafka-connect  | 	group.id = connect-cluster-group
benchi-kafka-connect  | 	group.instance.id = null
benchi-kafka-connect  | 	group.protocol = classic
benchi-kafka-connect  | 	group.remote.assignor = null
benchi-kafka-connect  | 	heartbeat.interval.ms = 3000
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	internal.leave.group.on.close = true
benchi-kafka-connect  | 	internal.throw.on.fetch.stable.offset.unsupported = false
benchi-kafka-connect  | 	isolation.level = read_uncommitted
benchi-kafka-connect  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
benchi-kafka-connect  | 	max.partition.fetch.bytes = 1048576
benchi-kafka-connect  | 	max.poll.interval.ms = 300000
benchi-kafka-connect  | 	max.poll.records = 500
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	session.timeout.ms = 45000
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
benchi-kafka-connect  |  (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,834] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-23 23:57:04,838] INFO These configurations '[log4j.loggers, auto.create.topics.enable, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:04,839] INFO [Producer clientId=connect-cluster-group-statuses] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:04,839] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,839] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,839] INFO Kafka startTimeMs: 1745452624838 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:04,841] INFO Started o.e.j.s.ServletContextHandler@401b17d{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
benchi-kafka-connect  | [2025-04-23 23:57:04,841] INFO REST resources initialized; server is started and ready to handle requests (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:04,841] INFO Kafka Connect started (org.apache.kafka.connect.runtime.Connect)
benchi-kafka-connect  | [2025-04-23 23:57:04,846] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:04,847] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Assigned to partition(s): benchi-connect-status-1, benchi-connect-status-3, benchi-connect-status-2, benchi-connect-status-0, benchi-connect-status-4 (org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer)
benchi-kafka-connect  | [2025-04-23 23:57:04,848] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-1 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,848] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-3 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,848] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-2 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,848] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,848] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-4 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,981] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,981] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,982] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,982] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,982] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:04,982] INFO Finished reading KafkaBasedLog for topic benchi-connect-status (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-23 23:57:04,982] INFO Started KafkaBasedLog for topic benchi-connect-status (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-23 23:57:04,984] INFO Starting KafkaConfigBackingStore (org.apache.kafka.connect.storage.KafkaConfigBackingStore)
benchi-kafka-connect  | [2025-04-23 23:57:04,984] INFO Starting KafkaBasedLog with topic benchi-connect-configs reportErrorsToCallback=false (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-23 23:57:05,018] INFO Created topic (name=benchi-connect-configs, numPartitions=1, replicationFactor=1, replicasAssignments=null, configs={cleanup.policy=compact}) on brokers at benchi-kafka:9092 (org.apache.kafka.connect.util.TopicAdmin)
benchi-kafka-connect  | [2025-04-23 23:57:05,019] INFO ProducerConfig values: 
benchi-kafka-connect  | 	acks = -1
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	batch.size = 16384
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	buffer.memory = 33554432
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-configs
benchi-kafka-connect  | 	compression.gzip.level = -1
benchi-kafka-connect  | 	compression.lz4.level = 9
benchi-kafka-connect  | 	compression.type = none
benchi-kafka-connect  | 	compression.zstd.level = 3
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	delivery.timeout.ms = 2147483647
benchi-kafka-connect  | 	enable.idempotence = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
benchi-kafka-connect  | 	linger.ms = 0
benchi-kafka-connect  | 	max.block.ms = 60000
benchi-kafka-connect  | 	max.in.flight.requests.per.connection = 1
benchi-kafka-connect  | 	max.request.size = 1048576
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.max.idle.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partitioner.adaptive.partitioning.enable = true
benchi-kafka-connect  | 	partitioner.availability.timeout.ms = 0
benchi-kafka-connect  | 	partitioner.class = null
benchi-kafka-connect  | 	partitioner.ignore.keys = false
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	transaction.timeout.ms = 60000
benchi-kafka-connect  | 	transactional.id = null
benchi-kafka-connect  | 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  |  (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:05,019] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-23 23:57:05,023] INFO These configurations '[log4j.loggers, auto.create.topics.enable, group.id, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:05,023] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:05,023] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:05,023] INFO Kafka startTimeMs: 1745452625023 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:05,023] INFO ConsumerConfig values: 
benchi-kafka-connect  | 	allow.auto.create.topics = true
benchi-kafka-connect  | 	auto.commit.interval.ms = 5000
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	auto.offset.reset = earliest
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	check.crcs = true
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-configs
benchi-kafka-connect  | 	client.rack = 
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.auto.commit = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	exclude.internal.topics = true
benchi-kafka-connect  | 	fetch.max.bytes = 52428800
benchi-kafka-connect  | 	fetch.max.wait.ms = 500
benchi-kafka-connect  | 	fetch.min.bytes = 1
benchi-kafka-connect  | 	group.id = connect-cluster-group
benchi-kafka-connect  | 	group.instance.id = null
benchi-kafka-connect  | 	group.protocol = classic
benchi-kafka-connect  | 	group.remote.assignor = null
benchi-kafka-connect  | 	heartbeat.interval.ms = 3000
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	internal.leave.group.on.close = true
benchi-kafka-connect  | 	internal.throw.on.fetch.stable.offset.unsupported = false
benchi-kafka-connect  | 	isolation.level = read_uncommitted
benchi-kafka-connect  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
benchi-kafka-connect  | 	max.partition.fetch.bytes = 1048576
benchi-kafka-connect  | 	max.poll.interval.ms = 300000
benchi-kafka-connect  | 	max.poll.records = 500
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	session.timeout.ms = 45000
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
benchi-kafka-connect  |  (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:05,024] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-23 23:57:05,027] INFO These configurations '[log4j.loggers, auto.create.topics.enable, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:05,027] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:05,027] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:05,027] INFO Kafka startTimeMs: 1745452625027 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:05,028] INFO [Producer clientId=connect-cluster-group-configs] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:05,030] INFO [Consumer clientId=connect-cluster-group-configs, groupId=connect-cluster-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:05,032] INFO [Consumer clientId=connect-cluster-group-configs, groupId=connect-cluster-group] Assigned to partition(s): benchi-connect-configs-0 (org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer)
benchi-kafka-connect  | [2025-04-23 23:57:05,032] INFO [Consumer clientId=connect-cluster-group-configs, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-configs-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:05,042] INFO [Consumer clientId=connect-cluster-group-configs, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-configs-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-23 23:57:05,042] INFO Finished reading KafkaBasedLog for topic benchi-connect-configs (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-23 23:57:05,042] INFO Started KafkaBasedLog for topic benchi-connect-configs (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-23 23:57:05,042] INFO Started KafkaConfigBackingStore (org.apache.kafka.connect.storage.KafkaConfigBackingStore)
benchi-kafka-connect  | [2025-04-23 23:57:05,042] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Herder started (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:05,049] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:05,176] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Discovered group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,177] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Rebalance started (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,177] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,197] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR. isDisconnected: false. Rediscovery will be attempted. (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,197] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Requesting disconnect from last known coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,197] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,198] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Request joining group due to: rebalance failed due to 'This is not the correct coordinator.' (NotCoordinatorException) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,298] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Client requested disconnect from node 2147483646 (org.apache.kafka.clients.NetworkClient)
benchi-kafka-connect  | [2025-04-23 23:57:05,301] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Discovered group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,301] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted. (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,301] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Requesting disconnect from last known coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,411] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Discovered group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,411] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,416] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR. isDisconnected: false. Rediscovery will be attempted. (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,416] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Requesting disconnect from last known coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,416] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,416] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Request joining group due to: rebalance failed due to 'This is not the correct coordinator.' (NotCoordinatorException) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,516] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Client requested disconnect from node 2147483646 (org.apache.kafka.clients.NetworkClient)
benchi-kafka-connect  | [2025-04-23 23:57:05,518] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Discovered group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,518] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted. (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,518] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Requesting disconnect from last known coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,616] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Discovered group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,616] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:05,625] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:08,635] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully joined group with generation Generation{generationId=1, memberId='connect-benchi-kafka-connect:8083-1031e585-7de6-4e93-a3fd-bf8714bdd1df', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:08,661] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully synced group in generation Generation{generationId=1, memberId='connect-benchi-kafka-connect:8083-1031e585-7de6-4e93-a3fd-bf8714bdd1df', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:08,662] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Joined group at generation 1 with protocol version 2 and got assignment: Assignment{error=0, leader='connect-benchi-kafka-connect:8083-1031e585-7de6-4e93-a3fd-bf8714bdd1df', leaderUrl='http://benchi-kafka-connect:8083/', offset=-1, connectorIds=[], taskIds=[], revokedConnectorIds=[], revokedTaskIds=[], delay=0} with rebalance delay: 0 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:08,662] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting connectors and tasks using config offset -1 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:08,662] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Finished starting connectors and tasks (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:08,718] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Session key updated (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:09,880] INFO 172.23.0.4 - - [23/Apr/2025:23:57:09 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 48 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:15,288] INFO 172.23.0.4 - - [23/Apr/2025:23:57:15 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 4 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:20,397] INFO 172.23.0.4 - - [23/Apr/2025:23:57:20 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:25,573] INFO 172.23.0.4 - - [23/Apr/2025:23:57:25 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:30,775] INFO 172.23.0.4 - - [23/Apr/2025:23:57:30 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:35,908] INFO 172.23.0.4 - - [23/Apr/2025:23:57:35 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 6 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:41,027] INFO 172.23.0.4 - - [23/Apr/2025:23:57:41 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:46,088] INFO 172.23.0.4 - - [23/Apr/2025:23:57:46 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:49,563] INFO Successfully tested connection for jdbc:mysql://benchi-mysql:3306/?useInformationSchema=true&nullCatalogMeansCurrent=false&useUnicode=true&characterEncoding=UTF-8&characterSetResults=UTF-8&zeroDateTimeBehavior=CONVERT_TO_NULL&connectTimeout=30000 with user 'root' (io.debezium.connector.mysql.MySqlConnector)
benchi-kafka-connect  | [2025-04-23 23:57:49,566] INFO Connection gracefully closed (io.debezium.jdbc.JdbcConnection)
benchi-kafka-connect  | [2025-04-23 23:57:49,569] INFO AbstractConfig values: 
benchi-kafka-connect  |  (org.apache.kafka.common.config.AbstractConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,583] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Connector mysql config updated (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,584] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Rebalance started (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,584] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,587] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully joined group with generation Generation{generationId=2, memberId='connect-benchi-kafka-connect:8083-1031e585-7de6-4e93-a3fd-bf8714bdd1df', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,592] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully synced group in generation Generation{generationId=2, memberId='connect-benchi-kafka-connect:8083-1031e585-7de6-4e93-a3fd-bf8714bdd1df', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,592] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Joined group at generation 2 with protocol version 2 and got assignment: Assignment{error=0, leader='connect-benchi-kafka-connect:8083-1031e585-7de6-4e93-a3fd-bf8714bdd1df', leaderUrl='http://benchi-kafka-connect:8083/', offset=2, connectorIds=[mysql], taskIds=[], revokedConnectorIds=[], revokedTaskIds=[], delay=0} with rebalance delay: 0 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,592] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting connectors and tasks using config offset 2 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,593] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting connector mysql (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,596] INFO Creating connector mysql of type io.debezium.connector.mysql.MySqlConnector (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:49,597] INFO SourceConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.SourceConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,598] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,598] INFO 127.0.0.1 - - [23/Apr/2025:23:57:49 +0000] "POST /connectors HTTP/1.1" 201 906 "-" "curl/7.61.1" 403 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:49,602] INFO EnrichedSourceConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.default.exclude = []
benchi-kafka-connect  | 	topic.creation.default.include = [.*]
benchi-kafka-connect  | 	topic.creation.default.partitions = 1
benchi-kafka-connect  | 	topic.creation.default.replication.factor = 1
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.SourceConnectorConfig$EnrichedSourceConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,602] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.default.exclude = []
benchi-kafka-connect  | 	topic.creation.default.include = [.*]
benchi-kafka-connect  | 	topic.creation.default.partitions = 1
benchi-kafka-connect  | 	topic.creation.default.replication.factor = 1
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,607] INFO Instantiated connector mysql with version 2.4.2.Final of type class io.debezium.connector.mysql.MySqlConnector (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:49,607] INFO Finished creating connector mysql (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:49,608] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Finished starting connectors and tasks (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,616] INFO SourceConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.SourceConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,625] INFO 127.0.0.1 - - [23/Apr/2025:23:57:49 +0000] "GET /connectors/mysql/status HTTP/1.1" 200 115 "-" "curl/7.61.1" 8 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:49,626] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,627] INFO EnrichedSourceConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.default.exclude = []
benchi-kafka-connect  | 	topic.creation.default.include = [.*]
benchi-kafka-connect  | 	topic.creation.default.partitions = 1
benchi-kafka-connect  | 	topic.creation.default.replication.factor = 1
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.SourceConnectorConfig$EnrichedSourceConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,628] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.default.exclude = []
benchi-kafka-connect  | 	topic.creation.default.include = [.*]
benchi-kafka-connect  | 	topic.creation.default.partitions = 1
benchi-kafka-connect  | 	topic.creation.default.replication.factor = 1
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,651] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Tasks [mysql-0] configs updated (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,654] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Rebalance started (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,654] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,656] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully joined group with generation Generation{generationId=3, memberId='connect-benchi-kafka-connect:8083-1031e585-7de6-4e93-a3fd-bf8714bdd1df', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,661] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully synced group in generation Generation{generationId=3, memberId='connect-benchi-kafka-connect:8083-1031e585-7de6-4e93-a3fd-bf8714bdd1df', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,661] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Joined group at generation 3 with protocol version 2 and got assignment: Assignment{error=0, leader='connect-benchi-kafka-connect:8083-1031e585-7de6-4e93-a3fd-bf8714bdd1df', leaderUrl='http://benchi-kafka-connect:8083/', offset=4, connectorIds=[mysql], taskIds=[mysql-0], revokedConnectorIds=[], revokedTaskIds=[], delay=0} with rebalance delay: 0 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,662] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting connectors and tasks using config offset 4 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,662] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting task mysql-0 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,665] INFO Creating task mysql-0 (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:49,667] INFO ConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,668] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,669] INFO TaskConfig values: 
benchi-kafka-connect  | 	task.class = class io.debezium.connector.mysql.MySqlConnectorTask
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.TaskConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,671] INFO Instantiated task mysql-0 with version 2.4.2.Final of type io.debezium.connector.mysql.MySqlConnectorTask (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:49,671] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = key
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = false
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,672] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = value
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = false
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,672] INFO Set up the key converter class org.apache.kafka.connect.json.JsonConverter for task mysql-0 using the connector config (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:49,672] INFO Set up the value converter class org.apache.kafka.connect.json.JsonConverter for task mysql-0 using the connector config (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:49,672] INFO Set up the header converter class org.apache.kafka.connect.storage.SimpleHeaderConverter for task mysql-0 using the worker config (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:49,674] INFO Initializing: org.apache.kafka.connect.runtime.TransformationChain{} (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-23 23:57:49,674] INFO SourceConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.SourceConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,675] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,676] INFO EnrichedSourceConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.default.exclude = []
benchi-kafka-connect  | 	topic.creation.default.include = [.*]
benchi-kafka-connect  | 	topic.creation.default.partitions = 1
benchi-kafka-connect  | 	topic.creation.default.replication.factor = 1
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.SourceConnectorConfig$EnrichedSourceConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,676] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.mysql.MySqlConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	name = mysql
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.default.exclude = []
benchi-kafka-connect  | 	topic.creation.default.include = [.*]
benchi-kafka-connect  | 	topic.creation.default.partitions = 1
benchi-kafka-connect  | 	topic.creation.default.replication.factor = 1
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,677] INFO ProducerConfig values: 
benchi-kafka-connect  | 	acks = -1
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	batch.size = 16384
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	buffer.memory = 33554432
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connector-producer-mysql-0
benchi-kafka-connect  | 	compression.gzip.level = -1
benchi-kafka-connect  | 	compression.lz4.level = 9
benchi-kafka-connect  | 	compression.type = none
benchi-kafka-connect  | 	compression.zstd.level = 3
benchi-kafka-connect  | 	connections.max.idle.ms = 540000
benchi-kafka-connect  | 	delivery.timeout.ms = 2147483647
benchi-kafka-connect  | 	enable.idempotence = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  | 	linger.ms = 0
benchi-kafka-connect  | 	max.block.ms = 9223372036854775807
benchi-kafka-connect  | 	max.in.flight.requests.per.connection = 1
benchi-kafka-connect  | 	max.request.size = 1048576
benchi-kafka-connect  | 	metadata.max.age.ms = 300000
benchi-kafka-connect  | 	metadata.max.idle.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partitioner.adaptive.partitioning.enable = true
benchi-kafka-connect  | 	partitioner.availability.timeout.ms = 0
benchi-kafka-connect  | 	partitioner.class = null
benchi-kafka-connect  | 	partitioner.ignore.keys = false
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	transaction.timeout.ms = 60000
benchi-kafka-connect  | 	transactional.id = null
benchi-kafka-connect  | 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  |  (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,677] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-23 23:57:49,680] INFO These configurations '[metrics.context.connect.kafka.cluster.id, metrics.context.connect.group.id]' were supplied but are not used yet. (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,680] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,680] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,680] INFO Kafka startTimeMs: 1745452669680 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,681] INFO AdminClientConfig values: 
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	bootstrap.controllers = []
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connector-adminclient-mysql-0
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  |  (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,682] INFO These configurations '[log4j.loggers, config.storage.topic, auto.create.topics.enable, metrics.context.connect.group.id, rest.advertised.host.name, group.id, status.storage.topic, plugin.path, offset.flush.interval.ms, rest.port, config.storage.replication.factor, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.replication.factor, offset.storage.topic, value.converter, key.converter]' were supplied but are not used yet. (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,683] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,683] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,687] INFO Kafka startTimeMs: 1745452669683 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,684] INFO [Producer clientId=connector-producer-mysql-0] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:49,698] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Finished starting connectors and tasks (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-23 23:57:49,699] INFO Starting MySqlConnectorTask with configuration: (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    connector.class = io.debezium.connector.mysql.MySqlConnector (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    database.user = root (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    topic.creation.default.partitions = 1 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    database.server.id = 1 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    time.precision.mode = connect (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    schema.history.internal.kafka.bootstrap.servers = benchi-kafka:9092 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    database.port = 3306 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    include.schema.changes = false (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    key.converter.schemas.enable = false (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    topic.prefix = mysql (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    schema.history.internal.kafka.topic = schema-changes.conduit (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    task.class = io.debezium.connector.mysql.MySqlConnectorTask (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    database.hostname = benchi-mysql (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    poll.await.time.ms = 1000 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    database.password = ******** (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    value.converter.schemas.enable = false (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    topic.creation.default.replication.factor = 1 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    name = mysql (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    table.include.list = testdb.users (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    value.converter = org.apache.kafka.connect.json.JsonConverter (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    key.converter = org.apache.kafka.connect.json.JsonConverter (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    database.include.list = testdb (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,700] INFO    poll.max.batch.size = 1000 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,704] INFO Loading the custom source info struct maker plugin: io.debezium.connector.mysql.MySqlSourceInfoStructMaker (io.debezium.config.CommonConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,712] INFO Loading the custom topic naming strategy plugin: io.debezium.schema.DefaultTopicNamingStrategy (io.debezium.config.CommonConnectorConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,756] INFO No previous offsets found (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,789] INFO KafkaSchemaHistory Consumer config: {key.deserializer=org.apache.kafka.common.serialization.StringDeserializer, value.deserializer=org.apache.kafka.common.serialization.StringDeserializer, enable.auto.commit=false, group.id=mysql-schemahistory, bootstrap.servers=benchi-kafka:9092, fetch.min.bytes=1, session.timeout.ms=10000, auto.offset.reset=earliest, client.id=mysql-schemahistory} (io.debezium.storage.kafka.history.KafkaSchemaHistory)
benchi-kafka-connect  | [2025-04-23 23:57:49,789] INFO KafkaSchemaHistory Producer config: {retries=1, value.serializer=org.apache.kafka.common.serialization.StringSerializer, acks=1, batch.size=32768, max.block.ms=10000, bootstrap.servers=benchi-kafka:9092, buffer.memory=1048576, key.serializer=org.apache.kafka.common.serialization.StringSerializer, client.id=mysql-schemahistory, linger.ms=0} (io.debezium.storage.kafka.history.KafkaSchemaHistory)
benchi-kafka-connect  | [2025-04-23 23:57:49,790] INFO Requested thread factory for connector MySqlConnector, id = mysql named = db-history-config-check (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-23 23:57:49,793] INFO Idempotence will be disabled because acks is set to 1, not set to 'all'. (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,794] INFO ProducerConfig values: 
benchi-kafka-connect  | 	acks = 1
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	batch.size = 32768
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	buffer.memory = 1048576
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = mysql-schemahistory
benchi-kafka-connect  | 	compression.gzip.level = -1
benchi-kafka-connect  | 	compression.lz4.level = 9
benchi-kafka-connect  | 	compression.type = none
benchi-kafka-connect  | 	compression.zstd.level = 3
benchi-kafka-connect  | 	connections.max.idle.ms = 540000
benchi-kafka-connect  | 	delivery.timeout.ms = 120000
benchi-kafka-connect  | 	enable.idempotence = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
benchi-kafka-connect  | 	linger.ms = 0
benchi-kafka-connect  | 	max.block.ms = 10000
benchi-kafka-connect  | 	max.in.flight.requests.per.connection = 5
benchi-kafka-connect  | 	max.request.size = 1048576
benchi-kafka-connect  | 	metadata.max.age.ms = 300000
benchi-kafka-connect  | 	metadata.max.idle.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partitioner.adaptive.partitioning.enable = true
benchi-kafka-connect  | 	partitioner.availability.timeout.ms = 0
benchi-kafka-connect  | 	partitioner.class = null
benchi-kafka-connect  | 	partitioner.ignore.keys = false
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 1
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	transaction.timeout.ms = 60000
benchi-kafka-connect  | 	transactional.id = null
benchi-kafka-connect  | 	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
benchi-kafka-connect  |  (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,795] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-23 23:57:49,797] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,797] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,797] INFO Kafka startTimeMs: 1745452669797 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,801] INFO [Producer clientId=mysql-schemahistory] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:49,824] INFO Closing connection before starting schema recovery (io.debezium.connector.mysql.MySqlConnectorTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,825] INFO Connection gracefully closed (io.debezium.jdbc.JdbcConnection)
benchi-kafka-connect  | [2025-04-23 23:57:49,825] INFO Connector started for the first time, database schema history recovery will not be executed (io.debezium.connector.mysql.MySqlConnectorTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,826] INFO ConsumerConfig values: 
benchi-kafka-connect  | 	allow.auto.create.topics = true
benchi-kafka-connect  | 	auto.commit.interval.ms = 5000
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	auto.offset.reset = earliest
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	check.crcs = true
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = mysql-schemahistory
benchi-kafka-connect  | 	client.rack = 
benchi-kafka-connect  | 	connections.max.idle.ms = 540000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.auto.commit = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	exclude.internal.topics = true
benchi-kafka-connect  | 	fetch.max.bytes = 52428800
benchi-kafka-connect  | 	fetch.max.wait.ms = 500
benchi-kafka-connect  | 	fetch.min.bytes = 1
benchi-kafka-connect  | 	group.id = mysql-schemahistory
benchi-kafka-connect  | 	group.instance.id = null
benchi-kafka-connect  | 	group.protocol = classic
benchi-kafka-connect  | 	group.remote.assignor = null
benchi-kafka-connect  | 	heartbeat.interval.ms = 3000
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	internal.leave.group.on.close = true
benchi-kafka-connect  | 	internal.throw.on.fetch.stable.offset.unsupported = false
benchi-kafka-connect  | 	isolation.level = read_uncommitted
benchi-kafka-connect  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
benchi-kafka-connect  | 	max.partition.fetch.bytes = 1048576
benchi-kafka-connect  | 	max.poll.interval.ms = 300000
benchi-kafka-connect  | 	max.poll.records = 500
benchi-kafka-connect  | 	metadata.max.age.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	session.timeout.ms = 10000
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
benchi-kafka-connect  |  (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,826] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-23 23:57:49,829] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,829] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,829] INFO Kafka startTimeMs: 1745452669829 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,834] INFO [Consumer clientId=mysql-schemahistory, groupId=mysql-schemahistory] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-23 23:57:49,840] INFO [Consumer clientId=mysql-schemahistory, groupId=mysql-schemahistory] Resetting generation and member id due to: consumer pro-actively leaving the group (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,840] INFO [Consumer clientId=mysql-schemahistory, groupId=mysql-schemahistory] Request joining group due to: consumer pro-actively leaving the group (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,844] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:49,844] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:49,844] INFO Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:49,844] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:49,847] INFO App info kafka.consumer for mysql-schemahistory unregistered (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,847] INFO AdminClientConfig values: 
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	bootstrap.controllers = []
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = mysql-schemahistory
benchi-kafka-connect  | 	connections.max.idle.ms = 300000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	metadata.max.age.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 1
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  |  (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,849] INFO These configurations '[value.serializer, acks, batch.size, max.block.ms, buffer.memory, key.serializer, linger.ms]' were supplied but are not used yet. (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-23 23:57:49,849] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,849] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,849] INFO Kafka startTimeMs: 1745452669849 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,891] INFO Database schema history topic '(name=schema-changes.conduit, numPartitions=1, replicationFactor=default, replicasAssignments=null, configs={cleanup.policy=delete, retention.ms=9223372036854775807, retention.bytes=-1})' created (io.debezium.storage.kafka.history.KafkaSchemaHistory)
benchi-kafka-connect  | [2025-04-23 23:57:49,891] INFO App info kafka.admin.client for mysql-schemahistory unregistered (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-23 23:57:49,892] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:49,892] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:49,892] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-23 23:57:49,893] INFO Reconnecting after finishing schema recovery (io.debezium.connector.mysql.MySqlConnectorTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,926] INFO Requested thread factory for connector MySqlConnector, id = mysql named = SignalProcessor (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-23 23:57:49,938] INFO Requested thread factory for connector MySqlConnector, id = mysql named = change-event-source-coordinator (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-23 23:57:49,938] INFO Requested thread factory for connector MySqlConnector, id = mysql named = blocking-snapshot (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-23 23:57:49,941] INFO Creating thread debezium-mysqlconnector-mysql-change-event-source-coordinator (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-23 23:57:49,942] INFO Metrics registered (io.debezium.pipeline.ChangeEventSourceCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,943] INFO Context created (io.debezium.pipeline.ChangeEventSourceCoordinator)
benchi-kafka-connect  | [2025-04-23 23:57:49,945] INFO SignalProcessor started. Scheduling it every 5000ms (io.debezium.pipeline.signal.SignalProcessor)
benchi-kafka-connect  | [2025-04-23 23:57:49,945] INFO Creating thread debezium-mysqlconnector-mysql-SignalProcessor (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-23 23:57:49,945] INFO WorkerSourceTask{id=mysql-0} Source task finished initialization and start (org.apache.kafka.connect.runtime.AbstractWorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:49,949] INFO No previous offset has been found (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,950] INFO According to the connector configuration both schema and data will be snapshotted (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,953] INFO Snapshot step 1 - Preparing (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,954] INFO Snapshot step 2 - Determining captured tables (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,954] INFO Read list of available databases (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,964] INFO 	 list of available databases is: [conduit, information_schema, mysql, performance_schema, sys, testdb] (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,964] INFO Read list of available tables in each database (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,977] INFO 	snapshot continuing with database(s): [testdb] (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,978] INFO Adding table testdb.users to the list of capture schema tables (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,979] INFO Created connection pool with 1 threads (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,980] INFO Snapshot step 3 - Locking captured tables [testdb.users] (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,983] INFO Flush and obtain global read lock to prevent writes to database (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,987] INFO Snapshot step 4 - Determining snapshot offset (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,989] INFO Read binlog position of MySQL primary server (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,991] INFO 	 using binlog 'binlog.000002' at position '151426369' and gtid '' (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,991] INFO Snapshot step 5 - Reading structure of captured tables (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:49,991] INFO All eligible tables schema should be captured, capturing: [testdb.users] (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,388] INFO Reading structure of database 'testdb' (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,458] INFO Snapshot step 6 - Persisting schema history (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,506] INFO Releasing global read lock to enable MySQL writes (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,508] INFO Writes to MySQL tables prevented for a total of 00:00:00.522 (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,508] INFO Snapshot step 7 - Snapshotting data (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,510] INFO Creating snapshot worker pool with 1 worker thread(s) (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,511] INFO For table 'testdb.users' using select statement: 'SELECT `id`, `username`, `email`, `first_name`, `last_name` FROM `testdb`.`users`' (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,518] INFO Estimated row count for table testdb.users is OptionalLong[2728594] (io.debezium.connector.mysql.MySqlSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,524] INFO Exporting data from table 'testdb.users' (1 of 1 tables) (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:57:50,672] INFO The task will send records to topic 'mysql.testdb.users' for the first time. Checking whether topic exists (org.apache.kafka.connect.runtime.AbstractWorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:50,719] INFO Creating topic 'mysql.testdb.users' (org.apache.kafka.connect.runtime.AbstractWorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:50,760] INFO Created topic (name=mysql.testdb.users, numPartitions=1, replicationFactor=1, replicasAssignments=null, configs={}) on brokers at benchi-kafka:9092 (org.apache.kafka.connect.util.TopicAdmin)
benchi-kafka-connect  | [2025-04-23 23:57:50,760] INFO Created topic '(name=mysql.testdb.users, numPartitions=1, replicationFactor=1, replicasAssignments=null, configs={})' using creation group TopicCreationGroup{name='default', inclusionPattern=.*, exclusionPattern=, numPartitions=1, replicationFactor=1, otherConfigs={}} (org.apache.kafka.connect.runtime.AbstractWorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:51,271] INFO 172.23.0.4 - - [23/Apr/2025:23:57:51 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:54,701] INFO 149504 records sent during previous 00:00:05.03, last recorded offset of {server=mysql} partition is {ts_sec=1745452670, file=binlog.000002, pos=151426369, snapshot=true} (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:57:56,385] INFO 172.23.0.4 - - [23/Apr/2025:23:57:56 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:57:59,698] INFO WorkerSourceTask{id=mysql-0} Committing offsets for 253989 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:58:00,540] INFO 	 Exported 364114 of 2728594 records for table 'testdb.users' after 00:00:10.016 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:01,509] INFO 172.23.0.4 - - [23/Apr/2025:23:58:01 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:04,690] INFO 419840 records sent during previous 00:00:09.989, last recorded offset of {server=mysql} partition is {ts_sec=1745452670, file=binlog.000002, pos=151426369, snapshot=true} (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:58:06,719] INFO 172.23.0.4 - - [23/Apr/2025:23:58:06 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 18 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:09,709] INFO WorkerSourceTask{id=mysql-0} Committing offsets for 501760 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:58:10,557] INFO 	 Exported 880644 of 2728594 records for table 'testdb.users' after 00:00:20.033 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:11,796] INFO 172.23.0.4 - - [23/Apr/2025:23:58:11 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:16,929] INFO 172.23.0.4 - - [23/Apr/2025:23:58:16 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:19,711] INFO WorkerSourceTask{id=mysql-0} Committing offsets for 526365 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:58:20,563] INFO 	 Exported 1409028 of 2728594 records for table 'testdb.users' after 00:00:30.039 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:22,358] INFO 172.23.0.4 - - [23/Apr/2025:23:58:22 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:24,705] INFO 1048576 records sent during previous 00:00:20.015, last recorded offset of {server=mysql} partition is {ts_sec=1745452670, file=binlog.000002, pos=151426369, snapshot=true} (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-23 23:58:27,478] INFO 172.23.0.4 - - [23/Apr/2025:23:58:27 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:29,712] INFO WorkerSourceTask{id=mysql-0} Committing offsets for 524230 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:58:30,568] INFO 	 Exported 1935931 of 2728594 records for table 'testdb.users' after 00:00:40.044 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:32,595] INFO 172.23.0.4 - - [23/Apr/2025:23:58:32 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:37,735] INFO 172.23.0.4 - - [23/Apr/2025:23:58:37 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:39,713] INFO WorkerSourceTask{id=mysql-0} Committing offsets for 532525 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:58:40,583] INFO 	 Exported 2465796 of 2728594 records for table 'testdb.users' after 00:00:50.059 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:42,856] INFO 172.23.0.4 - - [23/Apr/2025:23:58:42 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:47,977] INFO 172.23.0.4 - - [23/Apr/2025:23:58:47 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:49,716] INFO WorkerSourceTask{id=mysql-0} Committing offsets for 518105 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:58:50,587] INFO 	 Exported 2981892 of 2728594 records for table 'testdb.users' after 00:01:00.063 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:50,866] INFO 	 Finished exporting 3000000 records for table 'testdb.users' (1 of 1 tables); total duration '00:01:00.342' (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:50,869] INFO Snapshot - Final stage (io.debezium.pipeline.source.AbstractSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:50,869] INFO Snapshot completed (io.debezium.pipeline.source.AbstractSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:50,884] INFO Snapshot ended with SnapshotResult [status=COMPLETED, offset=MySqlOffsetContext [sourceInfoSchema=Schema{io.debezium.connector.mysql.Source:STRUCT}, sourceInfo=SourceInfo [currentGtid=null, currentBinlogFilename=binlog.000002, currentBinlogPosition=151426369, currentRowNumber=0, serverId=0, sourceTime=2025-04-23T23:57:50Z, threadId=-1, currentQuery=null, tableIds=[testdb.users], databaseName=testdb], snapshotCompleted=true, transactionContext=TransactionContext [currentTransactionId=null, perTableEventCount={}, totalEventCount=0], restartGtidSet=null, currentGtidSet=null, restartBinlogFilename=binlog.000002, restartBinlogPosition=151426369, restartRowsToSkip=0, restartEventsToSkip=0, currentEventLengthInBytes=0, inTransaction=false, transactionId=null, incrementalSnapshotContext =IncrementalSnapshotContext [windowOpened=false, chunkEndPosition=null, dataCollectionsToSnapshot=[], lastEventKeySent=null, maximumKey=null]]] (io.debezium.pipeline.ChangeEventSourceCoordinator)
benchi-kafka-connect  | [2025-04-23 23:58:50,888] INFO Requested thread factory for connector MySqlConnector, id = mysql named = binlog-client (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-23 23:58:50,892] INFO Enable ssl PREFERRED mode for connector mysql (io.debezium.connector.mysql.MySqlStreamingChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:50,894] INFO Starting streaming (io.debezium.pipeline.ChangeEventSourceCoordinator)
benchi-kafka-connect  | [2025-04-23 23:58:50,900] INFO Skip 0 events on streaming start (io.debezium.connector.mysql.MySqlStreamingChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:50,900] INFO Skip 0 rows on streaming start (io.debezium.connector.mysql.MySqlStreamingChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:50,900] INFO Creating thread debezium-mysqlconnector-mysql-binlog-client (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-23 23:58:50,903] INFO Creating thread debezium-mysqlconnector-mysql-binlog-client (io.debezium.util.Threads)
benchi-kafka-connect  | Apr 23, 2025 11:58:50 PM com.github.shyiko.mysql.binlog.BinaryLogClient tryUpgradeToSSL
benchi-kafka-connect  | INFO: SSL enabled
benchi-kafka-connect  | Apr 23, 2025 11:58:50 PM com.github.shyiko.mysql.binlog.BinaryLogClient connect
benchi-kafka-connect  | INFO: Connected to benchi-mysql:3306 at binlog.000002/151426369 (sid:1, cid:27)
benchi-kafka-connect  | [2025-04-23 23:58:50,965] INFO Connected to MySQL binlog at benchi-mysql:3306, starting at MySqlOffsetContext [sourceInfoSchema=Schema{io.debezium.connector.mysql.Source:STRUCT}, sourceInfo=SourceInfo [currentGtid=null, currentBinlogFilename=binlog.000002, currentBinlogPosition=151426369, currentRowNumber=0, serverId=0, sourceTime=2025-04-23T23:57:50Z, threadId=-1, currentQuery=null, tableIds=[testdb.users], databaseName=testdb], snapshotCompleted=true, transactionContext=TransactionContext [currentTransactionId=null, perTableEventCount={}, totalEventCount=0], restartGtidSet=null, currentGtidSet=null, restartBinlogFilename=binlog.000002, restartBinlogPosition=151426369, restartRowsToSkip=0, restartEventsToSkip=0, currentEventLengthInBytes=0, inTransaction=false, transactionId=null, incrementalSnapshotContext =IncrementalSnapshotContext [windowOpened=false, chunkEndPosition=null, dataCollectionsToSnapshot=[], lastEventKeySent=null, maximumKey=null]] (io.debezium.connector.mysql.MySqlStreamingChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:50,965] INFO Waiting for keepalive thread to start (io.debezium.connector.mysql.MySqlStreamingChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:50,965] INFO Creating thread debezium-mysqlconnector-mysql-binlog-client (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-23 23:58:51,065] INFO Keepalive thread is running (io.debezium.connector.mysql.MySqlStreamingChangeEventSource)
benchi-kafka-connect  | [2025-04-23 23:58:53,348] INFO 172.23.0.4 - - [23/Apr/2025:23:58:53 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:58,466] INFO 172.23.0.4 - - [23/Apr/2025:23:58:58 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:58:59,718] INFO WorkerSourceTask{id=mysql-0} Committing offsets for 143026 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-23 23:59:03,566] INFO 172.23.0.4 - - [23/Apr/2025:23:59:03 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:59:08,688] INFO 172.23.0.4 - - [23/Apr/2025:23:59:08 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:59:13,785] INFO 172.23.0.4 - - [23/Apr/2025:23:59:13 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:59:18,904] INFO 172.23.0.4 - - [23/Apr/2025:23:59:18 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:59:24,035] INFO 172.23.0.4 - - [23/Apr/2025:23:59:24 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-23 23:59:29,166] INFO 172.23.0.4 - - [23/Apr/2025:23:59:29 +0000] "GET /connectors HTTP/1.1" 200 9 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
[Kbenchi-kafka-connect exited with code 137
