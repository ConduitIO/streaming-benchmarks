 Container benchi-kafka-connect  Creating
 Container benchi-kafka-connect  Created
Attaching to benchi-kafka-connect
benchi-kafka-connect  | temurin-jdk                                     435 kB/s | 342 kB     00:00    
benchi-kafka-connect  | Red Hat Universal Base Image 8 (RPMs) - BaseOS  7.0 MB/s | 586 kB     00:00    
benchi-kafka-connect  | Red Hat Universal Base Image 8 (RPMs) - AppStre  29 MB/s | 3.1 MB     00:00    
benchi-kafka-connect  | Red Hat Universal Base Image 8 (RPMs) - CodeRea 1.6 MB/s | 122 kB     00:00    
benchi-kafka-connect  | Package curl-7.61.1-34.el8_10.3.aarch64 is already installed.
benchi-kafka-connect  | Package wget-1.19.5-12.el8_10.aarch64 is already installed.
benchi-kafka-connect  | Dependencies resolved.
benchi-kafka-connect  | ================================================================================
benchi-kafka-connect  |  Package        Architecture Version            Repository                 Size
benchi-kafka-connect  | ================================================================================
benchi-kafka-connect  | Installing:
benchi-kafka-connect  |  jq             aarch64      1.6-9.el8_10       ubi-8-appstream-rpms      189 k
benchi-kafka-connect  | Installing dependencies:
benchi-kafka-connect  |  oniguruma      aarch64      6.8.2-3.el8        ubi-8-appstream-rpms      181 k
benchi-kafka-connect  | 
benchi-kafka-connect  | Transaction Summary
benchi-kafka-connect  | ================================================================================
benchi-kafka-connect  | Install  2 Packages
benchi-kafka-connect  | 
benchi-kafka-connect  | Total download size: 371 k
benchi-kafka-connect  | Installed size: 1.2 M
benchi-kafka-connect  | Downloading Packages:
benchi-kafka-connect  | (1/2): jq-1.6-9.el8_10.aarch64.rpm              5.2 MB/s | 189 kB     00:00    
benchi-kafka-connect  | (2/2): oniguruma-6.8.2-3.el8.aarch64.rpm        4.9 MB/s | 181 kB     00:00    
benchi-kafka-connect  | --------------------------------------------------------------------------------
benchi-kafka-connect  | Total                                           9.5 MB/s | 371 kB     00:00     
benchi-kafka-connect  | Running transaction check
benchi-kafka-connect  | Transaction check succeeded.
benchi-kafka-connect  | Running transaction test
benchi-kafka-connect  | Transaction test succeeded.
benchi-kafka-connect  | Running transaction
benchi-kafka-connect  |   Preparing        :                                                        1/1 
benchi-kafka-connect  |   Installing       : oniguruma-6.8.2-3.el8.aarch64                          1/2 
benchi-kafka-connect  |   Running scriptlet: oniguruma-6.8.2-3.el8.aarch64                          1/2 
benchi-kafka-connect  |   Installing       : jq-1.6-9.el8_10.aarch64                                2/2 
benchi-kafka-connect  |   Running scriptlet: jq-1.6-9.el8_10.aarch64                                2/2 
benchi-kafka-connect  |   Verifying        : jq-1.6-9.el8_10.aarch64                                1/2 
benchi-kafka-connect  |   Verifying        : oniguruma-6.8.2-3.el8.aarch64                          2/2 
benchi-kafka-connect  | 
benchi-kafka-connect  | Installed:
benchi-kafka-connect  |   jq-1.6-9.el8_10.aarch64             oniguruma-6.8.2-3.el8.aarch64            
benchi-kafka-connect  | 
benchi-kafka-connect  | Complete!
benchi-kafka-connect  | Sourcing /benchi/init/init.sh
benchi-kafka-connect  | Running in a "--no-prompt" mode 
benchi-kafka-connect  | Implicit acceptance of the license below:  
benchi-kafka-connect  | Apache 2.0 
benchi-kafka-connect  | https://github.com/debezium/debezium/blob/master/LICENSE.txt 
benchi-kafka-connect  | Implicit confirmation of the question: You are about to install 'debezium-connector-postgresql' from Debezium Community, as published on Confluent Hub. 
benchi-kafka-connect  | Downloading component Debezium PostgreSQL CDC Connector 2.5.4, provided by Debezium Community from Confluent Hub and installing into /usr/share/confluent-hub-components 
benchi-kafka-connect  | Adding installation directory to plugin path in the following files: 
benchi-kafka-connect  |   /etc/kafka/connect-distributed.properties 
benchi-kafka-connect  |   /etc/kafka/connect-standalone.properties 
benchi-kafka-connect  |   /etc/schema-registry/connect-avro-distributed.properties 
benchi-kafka-connect  |   /etc/schema-registry/connect-avro-standalone.properties 
benchi-kafka-connect  |  
benchi-kafka-connect  | Completed 
benchi-kafka-connect  | ===> User
benchi-kafka-connect  | uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
benchi-kafka-connect  | ===> Configuring ...
benchi-kafka-connect  | ===> Running preflight checks ... 
benchi-kafka-connect  | ===> Check if Kafka is healthy ...
benchi-kafka-connect  | Using log4j config /etc/cp-base-new/log4j.properties
benchi-kafka-connect  | ===> Launching ... 
benchi-kafka-connect  | ===> Launching kafka-connect ... 
benchi-kafka-connect  | SLF4J: Class path contains multiple SLF4J bindings.
benchi-kafka-connect  | SLF4J: Found binding in [jar:file:/usr/share/java/kafka/slf4j-reload4j-1.7.36.jar!/org/slf4j/impl/StaticLoggerBinder.class]
benchi-kafka-connect  | SLF4J: Found binding in [jar:file:/usr/share/java/kafka-serde-tools/slf4j-reload4j-1.7.36.jar!/org/slf4j/impl/StaticLoggerBinder.class]
benchi-kafka-connect  | SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
benchi-kafka-connect  | SLF4J: Actual binding is of type [org.slf4j.impl.Reload4jLoggerFactory]
benchi-kafka-connect  | [2025-04-02 09:54:18,066] INFO Kafka Connect worker initializing ... (org.apache.kafka.connect.cli.AbstractConnectCli)
benchi-kafka-connect  | [2025-04-02 09:54:18,067] INFO WorkerInfo values: 
benchi-kafka-connect  | 	jvm.args = -Xms256M, -Xmx2G, -XX:+UseG1GC, -XX:MaxGCPauseMillis=20, -XX:InitiatingHeapOccupancyPercent=35, -XX:+ExplicitGCInvokesConcurrent, -XX:MaxInlineLevel=15, -Djava.awt.headless=true, -Dcom.sun.management.jmxremote=true, -Dcom.sun.management.jmxremote.authenticate=false, -Dcom.sun.management.jmxremote.ssl=false, -Dkafka.logs.dir=/var/log/kafka, -Dlog4j.configuration=file:/etc/kafka/connect-log4j.properties
benchi-kafka-connect  | 	jvm.spec = Eclipse Adoptium, OpenJDK 64-Bit Server VM, 17.0.13, 17.0.13+11
benchi-kafka-connect  | 	jvm.classpath = /etc/kafka-connect/jars/*:/usr/share/java/kafka/jetty-servlets-9.4.56.v20240826.jar:/usr/share/java/kafka/reflections-0.10.2.jar:/usr/share/java/kafka/checker-qual-3.19.0.jar:/usr/share/java/kafka/swagger-annotations-2.2.8.jar:/usr/share/java/kafka/reload4j-1.2.25.jar:/usr/share/java/kafka/plexus-utils-3.5.1.jar:/usr/share/java/kafka/snappy-java-1.1.10.5.jar:/usr/share/java/kafka/netty-common-4.1.115.Final.jar:/usr/share/java/kafka/jetty-http-9.4.56.v20240826.jar:/usr/share/java/kafka/jackson-core-2.16.2.jar:/usr/share/java/kafka/jsr305-3.0.2.jar:/usr/share/java/kafka/jersey-client-2.39.1.jar:/usr/share/java/kafka/scala-collection-compat_2.13-2.10.0.jar:/usr/share/java/kafka/paranamer-2.8.jar:/usr/share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/share/java/kafka/commons-digester-2.1.jar:/usr/share/java/kafka/commons-lang3-3.12.0.jar:/usr/share/java/kafka/lz4-java-1.8.0.jar:/usr/share/java/kafka/jakarta.inject-2.6.1.jar:/usr/share/java/kafka/kafka-streams-test-utils-7.8.1-ccs.jar:/usr/share/java/kafka/jackson-databind-2.16.2.jar:/usr/share/java/kafka/jersey-hk2-2.39.1.jar:/usr/share/java/kafka/zookeeper-3.8.4.jar:/usr/share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/share/java/kafka/commons-cli-1.4.jar:/usr/share/java/kafka/jackson-module-scala_2.13-2.16.2.jar:/usr/share/java/kafka/jetty-util-ajax-9.4.56.v20240826.jar:/usr/share/java/kafka/kafka-streams-scala_2.13-7.8.1-ccs.jar:/usr/share/java/kafka/scala-library-2.13.14.jar:/usr/share/java/kafka/pcollections-4.0.1.jar:/usr/share/java/kafka/kafka-streams-examples-7.8.1-ccs.jar:/usr/share/java/kafka/connect-json-7.8.1-ccs.jar:/usr/share/java/kafka/connect-api-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-tools-7.8.1-ccs.jar:/usr/share/java/kafka/commons-collections-3.2.2.jar:/usr/share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/share/java/kafka/jetty-util-9.4.56.v20240826.jar:/usr/share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/share/java/kafka/netty-transport-native-epoll-4.1.115.Final.jar:/usr/share/java/kafka/commons-logging-1.2.jar:/usr/share/java/kafka/jaxb-api-2.3.1.jar:/usr/share/java/kafka/jersey-container-servlet-core-2.39.1.jar:/usr/share/java/kafka/kafka-clients-7.8.1-ccs.jar:/usr/share/java/kafka/jackson-module-afterburner-2.16.2.jar:/usr/share/java/kafka/connect-runtime-7.8.1-ccs.jar:/usr/share/java/kafka/commons-io-2.16.0.jar:/usr/share/java/kafka/audience-annotations-0.12.0.jar:/usr/share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/share/java/kafka/kafka-group-coordinator-7.8.1-ccs.jar:/usr/share/java/kafka/hk2-api-2.6.1.jar:/usr/share/java/kafka/jersey-common-2.39.1.jar:/usr/share/java/kafka/connect-basic-auth-extension-7.8.1-ccs.jar:/usr/share/java/kafka/netty-handler-4.1.115.Final.jar:/usr/share/java/kafka/javax.annotation-api-1.3.2.jar:/usr/share/java/kafka/activation-1.1.1.jar:/usr/share/java/kafka/maven-artifact-3.9.6.jar:/usr/share/java/kafka/error_prone_annotations-2.10.0.jar:/usr/share/java/kafka/jackson-module-jaxb-annotations-2.16.2.jar:/usr/share/java/kafka/netty-codec-4.1.115.Final.jar:/usr/share/java/kafka/hk2-locator-2.6.1.jar:/usr/share/java/kafka/jersey-container-servlet-2.39.1.jar:/usr/share/java/kafka/commons-validator-1.7.jar:/usr/share/java/kafka/jline-3.25.1.jar:/usr/share/java/kafka/netty-transport-4.1.115.Final.jar:/usr/share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/share/java/kafka/kafka-raft-7.8.1-ccs.jar:/usr/share/java/kafka/jackson-jaxrs-json-provider-2.16.2.jar:/usr/share/java/kafka/jackson-datatype-jdk8-2.16.2.jar:/usr/share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/share/java/kafka/kafka-transaction-coordinator-7.8.1-ccs.jar:/usr/share/java/kafka/netty-buffer-4.1.115.Final.jar:/usr/share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/share/java/kafka/connect-mirror-client-7.8.1-ccs.jar:/usr/share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/share/java/kafka/jetty-io-9.4.56.v20240826.jar:/usr/share/java/kafka/kafka.jar:/usr/share/java/kafka/kafka-tools-api-7.8.1-ccs.jar:/usr/share/java/kafka/jetty-continuation-9.4.56.v20240826.jar:/usr/share/java/kafka/netty-transport-native-unix-common-4.1.115.Final.jar:/usr/share/java/kafka/jackson-jaxrs-base-2.16.2.jar:/usr/share/java/kafka/kafka-server-7.8.1-ccs.jar:/usr/share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/share/java/kafka/metrics-core-4.1.12.1.jar:/usr/share/java/kafka/kafka-storage-api-7.8.1-ccs.jar:/usr/share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/share/java/kafka/jose4j-0.9.4.jar:/usr/share/java/kafka/kafka-log4j-appender-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-server-common-7.8.1-ccs.jar:/usr/share/java/kafka/jetty-client-9.4.56.v20240826.jar:/usr/share/java/kafka/kafka_2.13-7.8.1-ccs.jar:/usr/share/java/kafka/jetty-server-9.4.56.v20240826.jar:/usr/share/java/kafka/javax.activation-api-1.2.0.jar:/usr/share/java/kafka/argparse4j-0.7.0.jar:/usr/share/java/kafka/kafka-metadata-7.8.1-ccs.jar:/usr/share/java/kafka/trogdor-7.8.1-ccs.jar:/usr/share/java/kafka/jersey-server-2.39.1.jar:/usr/share/java/kafka/scala-reflect-2.13.14.jar:/usr/share/java/kafka/kafka-group-coordinator-api-7.8.1-ccs.jar:/usr/share/java/kafka/jackson-annotations-2.16.2.jar:/usr/share/java/kafka/zookeeper-jute-3.8.4.jar:/usr/share/java/kafka/javassist-3.29.2-GA.jar:/usr/share/java/kafka/jetty-servlet-9.4.56.v20240826.jar:/usr/share/java/kafka/netty-resolver-4.1.115.Final.jar:/usr/share/java/kafka/metrics-core-2.2.0.jar:/usr/share/java/kafka/connect-mirror-7.8.1-ccs.jar:/usr/share/java/kafka/kafka-storage-7.8.1-ccs.jar:/usr/share/java/kafka/commons-beanutils-1.9.4.jar:/usr/share/java/kafka/jetty-security-9.4.56.v20240826.jar:/usr/share/java/kafka/protobuf-java-3.25.5.jar:/usr/share/java/kafka/kafka-streams-7.8.1-ccs.jar:/usr/share/java/kafka/jopt-simple-5.0.4.jar:/usr/share/java/kafka/opentelemetry-proto-1.0.0-alpha.jar:/usr/share/java/kafka/slf4j-api-1.7.36.jar:/usr/share/java/kafka/caffeine-2.9.3.jar:/usr/share/java/kafka/netty-transport-classes-epoll-4.1.115.Final.jar:/usr/share/java/kafka/jackson-dataformat-csv-2.16.2.jar:/usr/share/java/kafka/kafka-shell-7.8.1-ccs.jar:/usr/share/java/kafka/connect-transforms-7.8.1-ccs.jar:/usr/share/java/kafka/hk2-utils-2.6.1.jar:/usr/share/java/kafka/zstd-jni-1.5.6-4.jar:/usr/share/java/kafka/rocksdbjni-7.9.2.jar:/usr/share/java/confluent-common/common-metrics-7.8.1.jar:/usr/share/java/confluent-common/common-utils-7.8.1.jar:/usr/share/java/confluent-common/common-config-7.8.1.jar:/usr/share/java/confluent-common/build-tools-7.8.1.jar:/usr/share/java/confluent-common/slf4j-api-1.7.36.jar:/usr/share/java/kafka-serde-tools/JSONata4Java-2.4.5.jar:/usr/share/java/kafka-serde-tools/aws-java-sdk-kms-1.12.701.jar:/usr/share/java/kafka-serde-tools/auto-value-annotations-1.10.4.jar:/usr/share/java/kafka-serde-tools/everit-json-schema-1.14.3.jar:/usr/share/java/kafka-serde-tools/httpcore-4.4.15.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-csv-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-databind-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-cbor-2.16.0.jar:/usr/share/java/kafka-serde-tools/kafka-protobuf-provider-7.8.1.jar:/usr/share/java/kafka-serde-tools/picocli-4.7.5.jar:/usr/share/java/kafka-serde-tools/asm-9.3.jar:/usr/share/java/kafka-serde-tools/reload4j-1.2.25.jar:/usr/share/java/kafka-serde-tools/grpc-util-1.58.0.jar:/usr/share/java/kafka-serde-tools/proto-google-common-protos-2.22.1.jar:/usr/share/java/kafka-serde-tools/netty-codec-socks-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-transport-native-unix-common-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/jsr305-3.0.2.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-protobuf-2.16.0.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-jvm-1.9.10.jar:/usr/share/java/kafka-serde-tools/grpc-google-iam-v1-1.21.0.jar:/usr/share/java/kafka-serde-tools/commons-compress-1.26.1.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-classes-2.0.66.Final.jar:/usr/share/java/kafka-serde-tools/jackson-module-parameter-names-2.16.0.jar:/usr/share/java/kafka-serde-tools/auto-service-annotations-1.1.1.jar:/usr/share/java/kafka-serde-tools/avro-1.11.4.jar:/usr/share/java/kafka-serde-tools/commons-text-1.10.0.jar:/usr/share/java/kafka-serde-tools/opencensus-proto-0.2.0.jar:/usr/share/java/kafka-serde-tools/kotlinpoet-jvm-1.18.0.jar:/usr/share/java/kafka-serde-tools/grpc-core-1.58.0.jar:/usr/share/java/kafka-serde-tools/netty-codec-http-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/cel-jackson-0.4.4.jar:/usr/share/java/kafka-serde-tools/kafka-schema-converter-7.8.1.jar:/usr/share/java/kafka-serde-tools/jakarta.activation-api-1.2.2.jar:/usr/share/java/kafka-serde-tools/oauth2-oidc-sdk-11.9.1.jar:/usr/share/java/kafka-serde-tools/commons-digester-2.1.jar:/usr/share/java/kafka-serde-tools/jackson-jaxrs-json-provider-2.16.0.jar:/usr/share/java/kafka-serde-tools/commons-lang3-3.12.0.jar:/usr/share/java/kafka-serde-tools/netty-transport-native-epoll-4.1.113.Final-linux-x86_64.jar:/usr/share/java/kafka-serde-tools/gax-httpjson-2.35.0.jar:/usr/share/java/kafka-serde-tools/kafka-schema-rules-7.8.1.jar:/usr/share/java/kafka-serde-tools/slf4j-reload4j-1.7.36.jar:/usr/share/java/kafka-serde-tools/google-http-client-1.43.3.jar:/usr/share/java/kafka-serde-tools/stax2-api-4.2.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-tink-7.8.1.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-compiler-embeddable-1.9.10.jar:/usr/share/java/kafka-serde-tools/json-sKema-0.18.0.jar:/usr/share/java/kafka-serde-tools/reactor-netty-http-1.0.45.jar:/usr/share/java/kafka-serde-tools/google-api-client-1.35.2.jar:/usr/share/java/kafka-serde-tools/grpc-xds-1.58.0.jar:/usr/share/java/kafka-serde-tools/pcollections-4.0.1.jar:/usr/share/java/kafka-serde-tools/proto-google-cloud-kms-v1-0.124.0.jar:/usr/share/java/kafka-serde-tools/mbknor-jackson-jsonschema_2.13-1.0.39.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-hcvault-7.8.1.jar:/usr/share/java/kafka-serde-tools/netty-transport-classes-epoll-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/kafka-json-schema-provider-7.8.1.jar:/usr/share/java/kafka-serde-tools/animal-sniffer-annotations-1.23.jar:/usr/share/java/kafka-serde-tools/netty-handler-proxy-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/j2objc-annotations-2.8.jar:/usr/share/java/kafka-serde-tools/javapoet-1.13.0.jar:/usr/share/java/kafka-serde-tools/google-http-client-apache-v2-1.42.0.jar:/usr/share/java/kafka-serde-tools/protoparser-4.0.3.jar:/usr/share/java/kafka-serde-tools/kafka-tools-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/netty-resolver-dns-native-macos-4.1.113.Final-osx-x86_64.jar:/usr/share/java/kafka-serde-tools/commons-collections-3.2.2.jar:/usr/share/java/kafka-serde-tools/netty-resolver-dns-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/handy-uri-templates-2.1.8.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-jsr310-2.16.0.jar:/usr/share/java/kafka-serde-tools/json-20231013.jar:/usr/share/java/kafka-serde-tools/cel-generated-antlr-0.4.4.jar:/usr/share/java/kafka-serde-tools/commons-logging-1.2.jar:/usr/share/java/kafka-serde-tools/kafka-avro-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/kotlin-script-runtime-1.9.10.jar:/usr/share/java/kafka-serde-tools/commons-codec-1.16.1.jar:/usr/share/java/kafka-serde-tools/grpc-protobuf-lite-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-services-1.58.0.jar:/usr/share/java/kafka-serde-tools/kafka-protobuf-types-7.8.1.jar:/usr/share/java/kafka-serde-tools/cel-core-0.4.4.jar:/usr/share/java/kafka-serde-tools/jna-5.13.0.jar:/usr/share/java/kafka-serde-tools/netty-codec-http2-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/json-smart-2.5.0.jar:/usr/share/java/kafka-serde-tools/classgraph-4.8.138.jar:/usr/share/java/kafka-serde-tools/commons-io-2.16.0.jar:/usr/share/java/kafka-serde-tools/google-http-client-gson-1.43.3.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-yaml-2.16.0.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-jdk8-1.8.0.jar:/usr/share/java/kafka-serde-tools/grpc-inprocess-1.58.0.jar:/usr/share/java/kafka-serde-tools/jakarta.xml.bind-api-2.3.3.jar:/usr/share/java/kafka-serde-tools/msal4j-1.15.1.jar:/usr/share/java/kafka-serde-tools/grpc-auth-1.58.0.jar:/usr/share/java/kafka-serde-tools/woodstox-core-6.5.1.jar:/usr/share/java/kafka-serde-tools/kafka-connect-protobuf-converter-7.8.1.jar:/usr/share/java/kafka-serde-tools/cel-tools-0.4.4.jar:/usr/share/java/kafka-serde-tools/threetenbp-1.6.8.jar:/usr/share/java/kafka-serde-tools/kafka-json-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-linux-x86_64.jar:/usr/share/java/kafka-serde-tools/kafka-connect-json-schema-converter-7.8.1.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-protobuf-0.9.13.jar:/usr/share/java/kafka-serde-tools/javax.annotation-api-1.3.2.jar:/usr/share/java/kafka-serde-tools/jackson-annotations-2.16.0.jar:/usr/share/java/kafka-serde-tools/agrona-1.20.0.jar:/usr/share/java/kafka-serde-tools/gson-2.9.0.jar:/usr/share/java/kafka-serde-tools/msal4j-persistence-extension-1.3.0.jar:/usr/share/java/kafka-serde-tools/protobuf-java-util-3.25.5.jar:/usr/share/java/kafka-serde-tools/validation-api-2.0.1.Final.jar:/usr/share/java/kafka-serde-tools/netty-transport-native-kqueue-4.1.113.Final-osx-x86_64.jar:/usr/share/java/kafka-serde-tools/gax-2.35.0.jar:/usr/share/java/kafka-serde-tools/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/usr/share/java/kafka-serde-tools/commons-validator-1.7.jar:/usr/share/java/kafka-serde-tools/content-type-2.3.jar:/usr/share/java/kafka-serde-tools/failureaccess-1.0.1.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-linux-aarch_64.jar:/usr/share/java/kafka-serde-tools/netty-handler-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-aws-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-7.8.1.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-jdk7-1.8.0.jar:/usr/share/java/kafka-serde-tools/jose4j-0.9.5.jar:/usr/share/java/kafka-serde-tools/grpc-alts-1.58.0.jar:/usr/share/java/kafka-serde-tools/grpc-google-common-protos-2.26.0.jar:/usr/share/java/kafka-serde-tools/gax-grpc-2.35.0.jar:/usr/share/java/kafka-serde-tools/netty-transport-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/azure-xml-1.0.0.jar:/usr/share/java/kafka-serde-tools/annotations-13.0.jar:/usr/share/java/kafka-serde-tools/grpc-netty-shaded-1.58.0.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-guava-2.16.0.jar:/usr/share/java/kafka-serde-tools/checker-qual-3.33.0.jar:/usr/share/java/kafka-serde-tools/re2j-1.6.jar:/usr/share/java/kafka-serde-tools/google-auth-library-credentials-1.19.0.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-joda-2.16.0.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-windows-x86_64.jar:/usr/share/java/kafka-serde-tools/vault-java-driver-5.4.0.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-common-1.9.10.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final.jar:/usr/share/java/kafka-serde-tools/azure-core-1.49.1.jar:/usr/share/java/kafka-serde-tools/logredactor-1.0.12.jar:/usr/share/java/kafka-serde-tools/jackson-core-2.16.0.jar:/usr/share/java/kafka-serde-tools/azure-security-keyvault-keys-4.8.5.jar:/usr/share/java/kafka-serde-tools/jna-platform-5.6.0.jar:/usr/share/java/kafka-serde-tools/google-auth-library-oauth2-http-1.20.0.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-azure-7.8.1.jar:/usr/share/java/kafka-serde-tools/tink-1.14.1.jar:/usr/share/java/kafka-serde-tools/kafka-tools-api-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/lang-tag-1.7.jar:/usr/share/java/kafka-serde-tools/netty-codec-dns-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/wire-runtime-jvm-5.0.0.jar:/usr/share/java/kafka-serde-tools/api-common-2.18.0.jar:/usr/share/java/kafka-serde-tools/annotations-3.0.1.jar:/usr/share/java/kafka-serde-tools/azure-identity-1.13.0.jar:/usr/share/java/kafka-serde-tools/jackson-jaxrs-base-2.16.0.jar:/usr/share/java/kafka-serde-tools/grpc-api-1.58.0.jar:/usr/share/java/kafka-serde-tools/kafka-storage-api-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/kafka-log4j-appender-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/kafka-streams-json-schema-serde-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-streams-protobuf-serde-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-server-common-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/grpc-stub-1.58.0.jar:/usr/share/java/kafka-serde-tools/opencensus-api-0.31.1.jar:/usr/share/java/kafka-serde-tools/netty-resolver-dns-classes-macos-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/jackson-dataformat-xml-2.16.0.jar:/usr/share/java/kafka-serde-tools/jackson-module-jaxb-annotations-2.16.0.jar:/usr/share/java/kafka-serde-tools/antlr4-runtime-4.13.1.jar:/usr/share/java/kafka-serde-tools/aws-java-sdk-core-1.12.701.jar:/usr/share/java/kafka-serde-tools/grpc-googleapis-1.58.0.jar:/usr/share/java/kafka-serde-tools/joda-time-2.10.14.jar:/usr/share/java/kafka-serde-tools/jcip-annotations-1.0-1.jar:/usr/share/java/kafka-serde-tools/netty-common-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-transport-classes-kqueue-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/argparse4j-0.7.0.jar:/usr/share/java/kafka-serde-tools/okio-jvm-3.4.0.jar:/usr/share/java/kafka-serde-tools/proto-google-iam-v1-1.21.0.jar:/usr/share/java/kafka-serde-tools/wire-schema-jvm-5.0.0.jar:/usr/share/java/kafka-serde-tools/snakeyaml-2.0.jar:/usr/share/java/kafka-serde-tools/azure-core-http-netty-1.15.1.jar:/usr/share/java/kafka-serde-tools/jackson-datatype-jdk8-2.16.0.jar:/usr/share/java/kafka-serde-tools/dek-registry-client-7.8.1.jar:/usr/share/java/kafka-serde-tools/nimbus-jose-jwt-9.37.3.jar:/usr/share/java/kafka-serde-tools/google-api-services-cloudkms-v1-rev20221107-2.0.0.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-gcp-7.8.1.jar:/usr/share/java/kafka-serde-tools/tink-awskms-1.10.1.jar:/usr/share/java/kafka-serde-tools/annotations-4.1.1.4.jar:/usr/share/java/kafka-serde-tools/grpc-protobuf-1.58.0.jar:/usr/share/java/kafka-serde-tools/kafka-connect-avro-converter-7.8.1.jar:/usr/share/java/kafka-serde-tools/scala-library-2.13.11.jar:/usr/share/java/kafka-serde-tools/grpc-context-1.58.0.jar:/usr/share/java/kafka-serde-tools/httpclient-4.5.13.jar:/usr/share/java/kafka-serde-tools/reactor-netty-core-1.0.45.jar:/usr/share/java/kafka-serde-tools/accessors-smart-2.5.0.jar:/usr/share/java/kafka-serde-tools/netty-buffer-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/error_prone_annotations-2.18.0.jar:/usr/share/java/kafka-serde-tools/kafka-streams-avro-serde-7.8.1.jar:/usr/share/java/kafka-serde-tools/netty-codec-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-osx-aarch_64.jar:/usr/share/java/kafka-serde-tools/kafka-protobuf-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/kotlin-reflect-2.0.0.jar:/usr/share/java/kafka-serde-tools/metrics-core-2.2.0.jar:/usr/share/java/kafka-serde-tools/swagger-annotations-2.1.10.jar:/usr/share/java/kafka-serde-tools/kafka-json-schema-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-storage-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/commons-beanutils-1.9.4.jar:/usr/share/java/kafka-serde-tools/cel-generated-pb-0.4.4.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-1.9.10.jar:/usr/share/java/kafka-serde-tools/netty-resolver-4.1.113.Final.jar:/usr/share/java/kafka-serde-tools/reactive-streams-1.0.4.jar:/usr/share/java/kafka-serde-tools/perfmark-api-0.26.0.jar:/usr/share/java/kafka-serde-tools/grpc-grpclb-1.58.0.jar:/usr/share/java/kafka-serde-tools/protobuf-java-3.25.5.jar:/usr/share/java/kafka-serde-tools/logredactor-metrics-1.0.12.jar:/usr/share/java/kafka-serde-tools/kafka-streams-7.8.1-ccs.jar:/usr/share/java/kafka-serde-tools/jopt-simple-5.0.4.jar:/usr/share/java/kafka-serde-tools/reactor-core-3.4.38.jar:/usr/share/java/kafka-serde-tools/guava-32.0.1-jre.jar:/usr/share/java/kafka-serde-tools/netty-tcnative-boringssl-static-2.0.66.Final-osx-x86_64.jar:/usr/share/java/kafka-serde-tools/kafka-connect-avro-data-7.8.1.jar:/usr/share/java/kafka-serde-tools/kafka-schema-serializer-7.8.1.jar:/usr/share/java/kafka-serde-tools/slf4j-api-1.7.36.jar:/usr/share/java/kafka-serde-tools/kotlin-stdlib-common-1.8.0.jar:/usr/share/java/kafka-serde-tools/azure-json-1.1.0.jar:/usr/share/java/kafka-serde-tools/caffeine-2.9.3.jar:/usr/share/java/kafka-serde-tools/google-cloud-kms-2.31.0.jar:/usr/share/java/kafka-serde-tools/minimal-json-0.9.5.jar:/usr/share/java/kafka-serde-tools/kafka-schema-registry-client-encryption-7.8.1.jar:/usr/share/java/kafka-serde-tools/opencensus-contrib-http-util-0.31.1.jar:/usr/share/java/kafka-serde-tools/jmespath-java-1.12.701.jar:/usr/share/java/kafka-serde-tools/conscrypt-openjdk-uber-2.5.2.jar:/usr/share/java/kafka-serde-tools/rocksdbjni-7.9.2.jar:/usr/share/java/kafka-serde-tools/tink-gcpkms-1.10.0.jar:/usr/share/java/kafka-serde-tools/kotlin-scripting-compiler-impl-embeddable-1.9.10.jar:/usr/share/java/kafka-serde-tools/google-oauth-client-1.34.1.jar:/usr/share/java/monitoring-interceptors/monitoring-interceptors-7.8.1.jar:/usr/bin/../share/java/kafka/jetty-servlets-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/reflections-0.10.2.jar:/usr/bin/../share/java/kafka/checker-qual-3.19.0.jar:/usr/bin/../share/java/kafka/swagger-annotations-2.2.8.jar:/usr/bin/../share/java/kafka/reload4j-1.2.25.jar:/usr/bin/../share/java/kafka/plexus-utils-3.5.1.jar:/usr/bin/../share/java/kafka/snappy-java-1.1.10.5.jar:/usr/bin/../share/java/kafka/netty-common-4.1.115.Final.jar:/usr/bin/../share/java/kafka/jetty-http-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jackson-core-2.16.2.jar:/usr/bin/../share/java/kafka/jsr305-3.0.2.jar:/usr/bin/../share/java/kafka/jersey-client-2.39.1.jar:/usr/bin/../share/java/kafka/scala-collection-compat_2.13-2.10.0.jar:/usr/bin/../share/java/kafka/paranamer-2.8.jar:/usr/bin/../share/java/kafka/jakarta.activation-api-1.2.2.jar:/usr/bin/../share/java/kafka/commons-digester-2.1.jar:/usr/bin/../share/java/kafka/commons-lang3-3.12.0.jar:/usr/bin/../share/java/kafka/lz4-java-1.8.0.jar:/usr/bin/../share/java/kafka/jakarta.inject-2.6.1.jar:/usr/bin/../share/java/kafka/kafka-streams-test-utils-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/jackson-databind-2.16.2.jar:/usr/bin/../share/java/kafka/jersey-hk2-2.39.1.jar:/usr/bin/../share/java/kafka/zookeeper-3.8.4.jar:/usr/bin/../share/java/kafka/slf4j-reload4j-1.7.36.jar:/usr/bin/../share/java/kafka/commons-cli-1.4.jar:/usr/bin/../share/java/kafka/jackson-module-scala_2.13-2.16.2.jar:/usr/bin/../share/java/kafka/jetty-util-ajax-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/kafka-streams-scala_2.13-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/scala-library-2.13.14.jar:/usr/bin/../share/java/kafka/pcollections-4.0.1.jar:/usr/bin/../share/java/kafka/kafka-streams-examples-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/connect-json-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/connect-api-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-tools-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/commons-collections-3.2.2.jar:/usr/bin/../share/java/kafka/jakarta.annotation-api-1.3.5.jar:/usr/bin/../share/java/kafka/jetty-util-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/jakarta.validation-api-2.0.2.jar:/usr/bin/../share/java/kafka/netty-transport-native-epoll-4.1.115.Final.jar:/usr/bin/../share/java/kafka/commons-logging-1.2.jar:/usr/bin/../share/java/kafka/jaxb-api-2.3.1.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-core-2.39.1.jar:/usr/bin/../share/java/kafka/kafka-clients-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/jackson-module-afterburner-2.16.2.jar:/usr/bin/../share/java/kafka/connect-runtime-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/commons-io-2.16.0.jar:/usr/bin/../share/java/kafka/audience-annotations-0.12.0.jar:/usr/bin/../share/java/kafka/jakarta.xml.bind-api-2.3.3.jar:/usr/bin/../share/java/kafka/kafka-group-coordinator-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/hk2-api-2.6.1.jar:/usr/bin/../share/java/kafka/jersey-common-2.39.1.jar:/usr/bin/../share/java/kafka/connect-basic-auth-extension-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/netty-handler-4.1.115.Final.jar:/usr/bin/../share/java/kafka/javax.annotation-api-1.3.2.jar:/usr/bin/../share/java/kafka/activation-1.1.1.jar:/usr/bin/../share/java/kafka/maven-artifact-3.9.6.jar:/usr/bin/../share/java/kafka/error_prone_annotations-2.10.0.jar:/usr/bin/../share/java/kafka/jackson-module-jaxb-annotations-2.16.2.jar:/usr/bin/../share/java/kafka/netty-codec-4.1.115.Final.jar:/usr/bin/../share/java/kafka/hk2-locator-2.6.1.jar:/usr/bin/../share/java/kafka/jersey-container-servlet-2.39.1.jar:/usr/bin/../share/java/kafka/commons-validator-1.7.jar:/usr/bin/../share/java/kafka/jline-3.25.1.jar:/usr/bin/../share/java/kafka/netty-transport-4.1.115.Final.jar:/usr/bin/../share/java/kafka/scala-java8-compat_2.13-1.0.2.jar:/usr/bin/../share/java/kafka/kafka-raft-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-json-provider-2.16.2.jar:/usr/bin/../share/java/kafka/jackson-datatype-jdk8-2.16.2.jar:/usr/bin/../share/java/kafka/aopalliance-repackaged-2.6.1.jar:/usr/bin/../share/java/kafka/kafka-transaction-coordinator-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/netty-buffer-4.1.115.Final.jar:/usr/bin/../share/java/kafka/jakarta.ws.rs-api-2.1.6.jar:/usr/bin/../share/java/kafka/connect-mirror-client-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/osgi-resource-locator-1.0.3.jar:/usr/bin/../share/java/kafka/jetty-io-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/kafka.jar:/usr/bin/../share/java/kafka/kafka-tools-api-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-continuation-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/netty-transport-native-unix-common-4.1.115.Final.jar:/usr/bin/../share/java/kafka/jackson-jaxrs-base-2.16.2.jar:/usr/bin/../share/java/kafka/kafka-server-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/scala-logging_2.13-3.9.4.jar:/usr/bin/../share/java/kafka/javax.servlet-api-3.1.0.jar:/usr/bin/../share/java/kafka/metrics-core-4.1.12.1.jar:/usr/bin/../share/java/kafka/kafka-storage-api-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/javax.ws.rs-api-2.1.1.jar:/usr/bin/../share/java/kafka/jose4j-0.9.4.jar:/usr/bin/../share/java/kafka/kafka-log4j-appender-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-server-common-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-client-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/kafka_2.13-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/jetty-server-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/javax.activation-api-1.2.0.jar:/usr/bin/../share/java/kafka/argparse4j-0.7.0.jar:/usr/bin/../share/java/kafka/kafka-metadata-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/trogdor-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/jersey-server-2.39.1.jar:/usr/bin/../share/java/kafka/scala-reflect-2.13.14.jar:/usr/bin/../share/java/kafka/kafka-group-coordinator-api-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/jackson-annotations-2.16.2.jar:/usr/bin/../share/java/kafka/zookeeper-jute-3.8.4.jar:/usr/bin/../share/java/kafka/javassist-3.29.2-GA.jar:/usr/bin/../share/java/kafka/jetty-servlet-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/netty-resolver-4.1.115.Final.jar:/usr/bin/../share/java/kafka/metrics-core-2.2.0.jar:/usr/bin/../share/java/kafka/connect-mirror-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/kafka-storage-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/commons-beanutils-1.9.4.jar:/usr/bin/../share/java/kafka/jetty-security-9.4.56.v20240826.jar:/usr/bin/../share/java/kafka/protobuf-java-3.25.5.jar:/usr/bin/../share/java/kafka/kafka-streams-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/jopt-simple-5.0.4.jar:/usr/bin/../share/java/kafka/opentelemetry-proto-1.0.0-alpha.jar:/usr/bin/../share/java/kafka/slf4j-api-1.7.36.jar:/usr/bin/../share/java/kafka/caffeine-2.9.3.jar:/usr/bin/../share/java/kafka/netty-transport-classes-epoll-4.1.115.Final.jar:/usr/bin/../share/java/kafka/jackson-dataformat-csv-2.16.2.jar:/usr/bin/../share/java/kafka/kafka-shell-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/connect-transforms-7.8.1-ccs.jar:/usr/bin/../share/java/kafka/hk2-utils-2.6.1.jar:/usr/bin/../share/java/kafka/zstd-jni-1.5.6-4.jar:/usr/bin/../share/java/kafka/rocksdbjni-7.9.2.jar:/usr/bin/../share/java/confluent-telemetry/confluent-metrics-7.8.1-ce.jar
benchi-kafka-connect  | 	os.spec = Linux, aarch64, 6.10.14-linuxkit
benchi-kafka-connect  | 	os.vcpus = 14
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.WorkerInfo)
benchi-kafka-connect  | [2025-04-02 09:54:18,068] INFO Scanning for plugin classes. This might take a moment ... (org.apache.kafka.connect.cli.AbstractConnectCli)
benchi-kafka-connect  | [2025-04-02 09:54:18,097] INFO Loading plugin from: /usr/share/java/cp-base-new (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,199] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/cp-base-new/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,200] INFO Loading plugin from: /usr/share/java/confluent-common (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,204] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-common/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,204] INFO Loading plugin from: /usr/share/java/confluent-control-center (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,480] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-control-center/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,480] INFO Loading plugin from: /usr/share/java/schema-registry (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,556] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/schema-registry/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,556] INFO Loading plugin from: /usr/share/java/rest-utils (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,611] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/rest-utils/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,611] INFO Loading plugin from: /usr/share/java/confluent-telemetry (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,613] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-telemetry/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,613] INFO Loading plugin from: /usr/share/java/confluent-hub-client (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,618] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-hub-client/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,618] INFO Loading plugin from: /usr/share/java/kafka-serde-tools (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,628] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka-serde-tools/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,628] INFO Loading plugin from: /usr/share/java/monitoring-interceptors (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,631] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/monitoring-interceptors/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,631] INFO Loading plugin from: /usr/share/java/acl (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,708] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/acl/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,708] INFO Loading plugin from: /usr/share/java/kafka (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,763] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,763] INFO Loading plugin from: /usr/share/confluent-hub-components/debezium-debezium-connector-postgresql (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,768] INFO Using up-to-date JsonConverter implementation (io.debezium.converters.CloudEventsConverter)
benchi-kafka-connect  | [2025-04-02 09:54:18,782] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/confluent-hub-components/debezium-debezium-connector-postgresql/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,784] INFO Loading plugin from: classpath (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,786] INFO Registered loader: jdk.internal.loader.ClassLoaders$AppClassLoader@5ffead27 (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,786] INFO Scanning plugins with ServiceLoaderScanner took 689 ms (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:18,787] INFO Loading plugin from: /usr/share/java/cp-base-new (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:19,261] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/cp-base-new/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:19,261] INFO Loading plugin from: /usr/share/java/confluent-common (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:19,263] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-common/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:19,263] INFO Loading plugin from: /usr/share/java/confluent-control-center (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:20,221] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-control-center/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:20,221] INFO Loading plugin from: /usr/share/java/schema-registry (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:20,566] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/schema-registry/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:20,566] INFO Loading plugin from: /usr/share/java/rest-utils (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:20,772] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/rest-utils/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:20,772] INFO Loading plugin from: /usr/share/java/confluent-telemetry (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:21,046] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-telemetry/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:21,046] INFO Loading plugin from: /usr/share/java/confluent-hub-client (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:21,097] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/confluent-hub-client/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:21,097] INFO Loading plugin from: /usr/share/java/kafka-serde-tools (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:21,600] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka-serde-tools/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:21,600] INFO Loading plugin from: /usr/share/java/monitoring-interceptors (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:21,701] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/monitoring-interceptors/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:21,701] INFO Loading plugin from: /usr/share/java/acl (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:24,647] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/acl/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:24,647] INFO Loading plugin from: /usr/share/java/kafka (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:24,912] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/java/kafka/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:24,912] INFO Loading plugin from: /usr/share/confluent-hub-components/debezium-debezium-connector-postgresql (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:24,968] INFO Registered loader: PluginClassLoader{pluginLocation=file:/usr/share/confluent-hub-components/debezium-debezium-connector-postgresql/} (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:24,968] INFO Loading plugin from: classpath (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:25,792] INFO Registered loader: jdk.internal.loader.ClassLoaders$AppClassLoader@5ffead27 (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:25,792] INFO Scanning plugins with ReflectionScanner took 7005 ms (org.apache.kafka.connect.runtime.isolation.PluginScanner)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] WARN One or more plugins are missing ServiceLoader manifests may not be usable with plugin.discovery=service_load: [
benchi-kafka-connect  | file:/usr/share/java/acl/	io.confluent.connect.avro.AvroConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/confluent-control-center/	io.confluent.connect.avro.AvroConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/kafka-serde-tools/	io.confluent.connect.avro.AvroConverter	converter	undefined
benchi-kafka-connect  | classpath	io.confluent.connect.avro.AvroConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/acl/	io.confluent.connect.json.JsonSchemaConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/confluent-control-center/	io.confluent.connect.json.JsonSchemaConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/kafka-serde-tools/	io.confluent.connect.json.JsonSchemaConverter	converter	undefined
benchi-kafka-connect  | classpath	io.confluent.connect.json.JsonSchemaConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/acl/	io.confluent.connect.protobuf.ProtobufConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/confluent-control-center/	io.confluent.connect.protobuf.ProtobufConverter	converter	undefined
benchi-kafka-connect  | file:/usr/share/java/kafka-serde-tools/	io.confluent.connect.protobuf.ProtobufConverter	converter	undefined
benchi-kafka-connect  | classpath	io.confluent.connect.protobuf.ProtobufConverter	converter	undefined
benchi-kafka-connect  | ]
benchi-kafka-connect  | Read the documentation at https://kafka.apache.org/documentation.html#connect_plugindiscovery for instructions on migrating your plugins to take advantage of the performance improvements of service_load mode. To silence this warning, set plugin.discovery=only_scan in the worker config. (org.apache.kafka.connect.runtime.isolation.Plugins)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.transforms.ReplaceField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.transforms.Filter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.mirror.MirrorSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.transforms.InsertField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.converters.DoubleConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.transforms.DropHeaders' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.transforms.Cast$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.storage.SimpleHeaderConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.transforms.InsertHeader' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'io.confluent.connect.json.JsonSchemaConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'io.debezium.converters.BinaryDataConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.common.config.provider.DirectoryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.transforms.Flatten$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDb' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,797] INFO Added plugin 'org.apache.kafka.connect.mirror.MirrorCheckpointConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.transforms.HeaderFrom$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.transforms.SetSchemaMetadata$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'io.debezium.transforms.ExtractNewRecordState' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'io.debezium.converters.ByteArrayConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'io.debezium.transforms.partitions.PartitionRouting' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.transforms.predicates.TopicNameMatches' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.transforms.ReplaceField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'io.debezium.transforms.outbox.EventRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.transforms.SetSchemaMetadata$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.converters.IntegerConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.transforms.predicates.RecordIsTombstone' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.converters.ByteArrayConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'io.confluent.connect.avro.AvroConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'io.confluent.connect.security.ConnectSecurityExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.transforms.Cast$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,798] INFO Added plugin 'org.apache.kafka.connect.transforms.Flatten$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'io.debezium.connector.postgresql.rest.DebeziumPostgresConnectRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.ExtractField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.TimestampConverter$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.converters.FloatConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.TimestampConverter$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'io.debezium.transforms.HeaderToValue' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'io.debezium.transforms.SchemaChangeEventFilter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.TimestampRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'io.debezium.transforms.ExtractSchemaToNewRecord' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'io.debezium.transforms.ByLogicalTableRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.RegexRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.HoistField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.ValueToKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.converters.LongConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.common.config.provider.FileConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'io.confluent.kafka.schemaregistry.client.config.provider.SchemaRegistryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.json.JsonConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'io.debezium.transforms.TimezoneConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.HeaderFrom$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'io.confluent.connect.protobuf.ProtobufConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.predicates.HasHeaderKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.connect.transforms.MaskField$Value' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,799] INFO Added plugin 'org.apache.kafka.common.config.provider.EnvVarConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'io.debezium.transforms.ExtractChangedRecordState' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'org.apache.kafka.connect.storage.StringConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'io.debezium.transforms.tracing.ActivateTracingSpan' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'org.apache.kafka.connect.transforms.MaskField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'org.apache.kafka.connect.transforms.ExtractField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'org.apache.kafka.connect.transforms.InsertField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'org.apache.kafka.connect.converters.BooleanConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'io.debezium.connector.postgresql.PostgresConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'org.apache.kafka.connect.mirror.MirrorHeartbeatConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'io.debezium.converters.CloudEventsConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'org.apache.kafka.connect.transforms.HoistField$Key' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,800] INFO Added plugin 'org.apache.kafka.connect.converters.ShortConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'JsonSchema' to plugin 'io.confluent.connect.json.JsonSchemaConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'RecordIsTombstone' to plugin 'org.apache.kafka.connect.transforms.predicates.RecordIsTombstone' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'CloudEventsConverter' to plugin 'io.debezium.converters.CloudEventsConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'String' to plugin 'org.apache.kafka.connect.storage.StringConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'EnvVar' to plugin 'org.apache.kafka.common.config.provider.EnvVarConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'EnvVarConfigProvider' to plugin 'org.apache.kafka.common.config.provider.EnvVarConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'MirrorCheckpointConnector' to plugin 'org.apache.kafka.connect.mirror.MirrorCheckpointConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'Boolean' to plugin 'org.apache.kafka.connect.converters.BooleanConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'AvroConverter' to plugin 'io.confluent.connect.avro.AvroConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'HeaderToValue' to plugin 'io.debezium.transforms.HeaderToValue' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'PartitionRouting' to plugin 'io.debezium.transforms.partitions.PartitionRouting' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'SchemaRegistryConfigProvider' to plugin 'io.confluent.kafka.schemaregistry.client.config.provider.SchemaRegistryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,801] INFO Added alias 'Json' to plugin 'org.apache.kafka.connect.json.JsonConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'StringConverter' to plugin 'org.apache.kafka.connect.storage.StringConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'IntegerConverter' to plugin 'org.apache.kafka.connect.converters.IntegerConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'Float' to plugin 'org.apache.kafka.connect.converters.FloatConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'LongConverter' to plugin 'org.apache.kafka.connect.converters.LongConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'DropHeaders' to plugin 'org.apache.kafka.connect.transforms.DropHeaders' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'SimpleHeaderConverter' to plugin 'org.apache.kafka.connect.storage.SimpleHeaderConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'ExtractSchemaToNewRecord' to plugin 'io.debezium.transforms.ExtractSchemaToNewRecord' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'BinaryData' to plugin 'io.debezium.converters.BinaryDataConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'DirectoryConfigProvider' to plugin 'org.apache.kafka.common.config.provider.DirectoryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'ShortConverter' to plugin 'org.apache.kafka.connect.converters.ShortConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'CloudEvents' to plugin 'io.debezium.converters.CloudEventsConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'TimezoneConverter' to plugin 'io.debezium.transforms.TimezoneConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'BasicAuthSecurityRestExtension' to plugin 'org.apache.kafka.connect.rest.basic.auth.extension.BasicAuthSecurityRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'Avro' to plugin 'io.confluent.connect.avro.AvroConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'Simple' to plugin 'org.apache.kafka.connect.storage.SimpleHeaderConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'Protobuf' to plugin 'io.confluent.connect.protobuf.ProtobufConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'DebeziumPostgres' to plugin 'io.debezium.connector.postgresql.rest.DebeziumPostgresConnectRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'AllConnectorClientConfigOverridePolicy' to plugin 'org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'ExtractNewRecordState' to plugin 'io.debezium.transforms.ExtractNewRecordState' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'MirrorSource' to plugin 'org.apache.kafka.connect.mirror.MirrorSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'Directory' to plugin 'org.apache.kafka.common.config.provider.DirectoryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'MirrorHeartbeat' to plugin 'org.apache.kafka.connect.mirror.MirrorHeartbeatConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'BooleanConverter' to plugin 'org.apache.kafka.connect.converters.BooleanConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'HasHeaderKey' to plugin 'org.apache.kafka.connect.transforms.predicates.HasHeaderKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'ConnectSecurityExtension' to plugin 'io.confluent.connect.security.ConnectSecurityExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'MirrorCheckpoint' to plugin 'org.apache.kafka.connect.mirror.MirrorCheckpointConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'ExtractChangedRecordState' to plugin 'io.debezium.transforms.ExtractChangedRecordState' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'None' to plugin 'org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'TimestampRouter' to plugin 'org.apache.kafka.connect.transforms.TimestampRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'Principal' to plugin 'org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'All' to plugin 'org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'JsonConverter' to plugin 'org.apache.kafka.connect.json.JsonConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,802] INFO Added alias 'DebeziumPostgresConnectRestExtension' to plugin 'io.debezium.connector.postgresql.rest.DebeziumPostgresConnectRestExtension' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'RegexRouter' to plugin 'org.apache.kafka.connect.transforms.RegexRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'Postgres' to plugin 'io.debezium.connector.postgresql.PostgresConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'NoneConnectorClientConfigOverridePolicy' to plugin 'org.apache.kafka.connect.connector.policy.NoneConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'Short' to plugin 'org.apache.kafka.connect.converters.ShortConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'ByLogicalTableRouter' to plugin 'io.debezium.transforms.ByLogicalTableRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'Double' to plugin 'org.apache.kafka.connect.converters.DoubleConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'FileConfigProvider' to plugin 'org.apache.kafka.common.config.provider.FileConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'EventRouter' to plugin 'io.debezium.transforms.outbox.EventRouter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'SchemaChangeEventFilter' to plugin 'io.debezium.transforms.SchemaChangeEventFilter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'Long' to plugin 'org.apache.kafka.connect.converters.LongConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'File' to plugin 'org.apache.kafka.common.config.provider.FileConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'FloatConverter' to plugin 'org.apache.kafka.connect.converters.FloatConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'ActivateTracingSpan' to plugin 'io.debezium.transforms.tracing.ActivateTracingSpan' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'DoubleConverter' to plugin 'org.apache.kafka.connect.converters.DoubleConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'BinaryDataConverter' to plugin 'io.debezium.converters.BinaryDataConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'TimescaleDb' to plugin 'io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDb' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'TopicNameMatches' to plugin 'org.apache.kafka.connect.transforms.predicates.TopicNameMatches' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'ProtobufConverter' to plugin 'io.confluent.connect.protobuf.ProtobufConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'MirrorHeartbeatConnector' to plugin 'org.apache.kafka.connect.mirror.MirrorHeartbeatConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'InsertHeader' to plugin 'org.apache.kafka.connect.transforms.InsertHeader' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'MirrorSourceConnector' to plugin 'org.apache.kafka.connect.mirror.MirrorSourceConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'PrincipalConnectorClientConfigOverridePolicy' to plugin 'org.apache.kafka.connect.connector.policy.PrincipalConnectorClientConfigOverridePolicy' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'PostgresConnector' to plugin 'io.debezium.connector.postgresql.PostgresConnector' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'ValueToKey' to plugin 'org.apache.kafka.connect.transforms.ValueToKey' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'Integer' to plugin 'org.apache.kafka.connect.converters.IntegerConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'JsonSchemaConverter' to plugin 'io.confluent.connect.json.JsonSchemaConverter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'Filter' to plugin 'org.apache.kafka.connect.transforms.Filter' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,803] INFO Added alias 'SchemaRegistry' to plugin 'io.confluent.kafka.schemaregistry.client.config.provider.SchemaRegistryConfigProvider' (org.apache.kafka.connect.runtime.isolation.DelegatingClassLoader)
benchi-kafka-connect  | [2025-04-02 09:54:25,816] INFO DistributedConfig values: 
benchi-kafka-connect  | 	access.control.allow.methods = 
benchi-kafka-connect  | 	access.control.allow.origin = 
benchi-kafka-connect  | 	admin.listeners = null
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = 
benchi-kafka-connect  | 	config.providers = []
benchi-kafka-connect  | 	config.storage.replication.factor = 1
benchi-kafka-connect  | 	config.storage.topic = benchi-connect-configs
benchi-kafka-connect  | 	connect.protocol = sessioned
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	connector.client.config.override.policy = All
benchi-kafka-connect  | 	exactly.once.source.support = disabled
benchi-kafka-connect  | 	group.id = connect-cluster-group
benchi-kafka-connect  | 	header.converter = class org.apache.kafka.connect.storage.SimpleHeaderConverter
benchi-kafka-connect  | 	heartbeat.interval.ms = 3000
benchi-kafka-connect  | 	inter.worker.key.generation.algorithm = HmacSHA256
benchi-kafka-connect  | 	inter.worker.key.size = null
benchi-kafka-connect  | 	inter.worker.key.ttl.ms = 3600000
benchi-kafka-connect  | 	inter.worker.signature.algorithm = HmacSHA256
benchi-kafka-connect  | 	inter.worker.verification.algorithms = [HmacSHA256]
benchi-kafka-connect  | 	key.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	listeners = [http://:8083]
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	offset.flush.interval.ms = 10000
benchi-kafka-connect  | 	offset.flush.timeout.ms = 5000
benchi-kafka-connect  | 	offset.storage.partitions = 25
benchi-kafka-connect  | 	offset.storage.replication.factor = 1
benchi-kafka-connect  | 	offset.storage.topic = benchi-connect-offsets
benchi-kafka-connect  | 	plugin.discovery = hybrid_warn
benchi-kafka-connect  | 	plugin.path = [/usr/share/java, /usr/share/confluent-hub-components]
benchi-kafka-connect  | 	rebalance.timeout.ms = 60000
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 40000
benchi-kafka-connect  | 	response.http.headers.config = 
benchi-kafka-connect  | 	rest.advertised.host.name = benchi-kafka-connect
benchi-kafka-connect  | 	rest.advertised.listener = null
benchi-kafka-connect  | 	rest.advertised.port = null
benchi-kafka-connect  | 	rest.extension.classes = []
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	scheduled.rebalance.max.delay.ms = 300000
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	session.timeout.ms = 10000
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.client.auth = none
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	status.storage.partitions = 5
benchi-kafka-connect  | 	status.storage.replication.factor = 1
benchi-kafka-connect  | 	status.storage.topic = benchi-connect-status
benchi-kafka-connect  | 	task.shutdown.graceful.timeout.ms = 5000
benchi-kafka-connect  | 	topic.creation.enable = true
benchi-kafka-connect  | 	topic.tracking.allow.reset = true
benchi-kafka-connect  | 	topic.tracking.enable = true
benchi-kafka-connect  | 	value.converter = class org.apache.kafka.connect.json.JsonConverter
benchi-kafka-connect  | 	worker.sync.timeout.ms = 3000
benchi-kafka-connect  | 	worker.unsync.backoff.ms = 300000
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.distributed.DistributedConfig)
benchi-kafka-connect  | [2025-04-02 09:54:25,817] INFO Creating Kafka admin client (org.apache.kafka.connect.runtime.WorkerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:25,818] INFO AdminClientConfig values: 
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	bootstrap.controllers = []
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = 
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  |  (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-02 09:54:25,840] INFO These configurations '[log4j.loggers, config.storage.topic, auto.create.topics.enable, rest.advertised.host.name, group.id, status.storage.topic, plugin.path, offset.flush.interval.ms, rest.port, config.storage.replication.factor, status.storage.replication.factor, offset.storage.replication.factor, offset.storage.topic, value.converter, key.converter]' were supplied but are not used yet. (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-02 09:54:25,840] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:25,840] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:25,840] INFO Kafka startTimeMs: 1743587665840 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:25,943] INFO Kafka cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.connect.runtime.WorkerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:25,943] INFO App info kafka.admin.client for adminclient-1 unregistered (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:25,945] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-02 09:54:25,945] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-02 09:54:25,945] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka-connect  | [2025-04-02 09:54:25,947] INFO PublicConfig values: 
benchi-kafka-connect  | 	access.control.allow.methods = 
benchi-kafka-connect  | 	access.control.allow.origin = 
benchi-kafka-connect  | 	admin.listeners = null
benchi-kafka-connect  | 	listeners = [http://:8083]
benchi-kafka-connect  | 	response.http.headers.config = 
benchi-kafka-connect  | 	rest.advertised.host.name = benchi-kafka-connect
benchi-kafka-connect  | 	rest.advertised.listener = null
benchi-kafka-connect  | 	rest.advertised.port = null
benchi-kafka-connect  | 	rest.extension.classes = []
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.client.auth = none
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	topic.tracking.allow.reset = true
benchi-kafka-connect  | 	topic.tracking.enable = true
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.rest.RestServerConfig$PublicConfig)
benchi-kafka-connect  | [2025-04-02 09:54:25,950] INFO Logging initialized @8235ms to org.eclipse.jetty.util.log.Slf4jLog (org.eclipse.jetty.util.log)
benchi-kafka-connect  | [2025-04-02 09:54:25,963] INFO Added connector for http://:8083 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:25,963] INFO Initializing REST server (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:25,971] INFO jetty-9.4.56.v20240826; built: 2024-08-26T17:15:05.868Z; git: ec6782ff5ead824dabdcf47fa98f90a4aedff401; jvm 17.0.13+11 (org.eclipse.jetty.server.Server)
benchi-kafka-connect  | [2025-04-02 09:54:25,980] INFO Started http_8083@132bd3c5{HTTP/1.1, (http/1.1)}{0.0.0.0:8083} (org.eclipse.jetty.server.AbstractConnector)
benchi-kafka-connect  | [2025-04-02 09:54:25,980] INFO Started @8265ms (org.eclipse.jetty.server.Server)
benchi-kafka-connect  | [2025-04-02 09:54:25,988] INFO Advertised URI: http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:25,988] INFO REST server listening at http://172.18.0.4:8083/, advertising URL http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:25,988] INFO Advertised URI: http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:25,988] INFO REST admin endpoints at http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:25,988] INFO Advertised URI: http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:25,988] INFO Setting up All Policy for ConnectorClientConfigOverride. This will allow all client configurations to be overridden (org.apache.kafka.connect.connector.policy.AllConnectorClientConfigOverridePolicy)
benchi-kafka-connect  | [2025-04-02 09:54:25,990] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = key
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = false
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-02 09:54:25,996] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:25,996] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:25,996] INFO Kafka startTimeMs: 1743587665996 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:25,998] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = key
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = false
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-02 09:54:25,998] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = value
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = false
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,005] INFO Advertised URI: http://benchi-kafka-connect:8083/ (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:26,014] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,014] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,014] INFO Kafka startTimeMs: 1743587666014 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,015] INFO Kafka Connect worker initialization took 7949ms (org.apache.kafka.connect.cli.AbstractConnectCli)
benchi-kafka-connect  | [2025-04-02 09:54:26,015] INFO Kafka Connect starting (org.apache.kafka.connect.runtime.Connect)
benchi-kafka-connect  | [2025-04-02 09:54:26,015] INFO Initializing REST resources (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:26,016] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Herder starting (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:26,016] INFO Worker starting (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:26,016] INFO Starting KafkaOffsetBackingStore (org.apache.kafka.connect.storage.KafkaOffsetBackingStore)
benchi-kafka-connect  | [2025-04-02 09:54:26,016] INFO Starting KafkaBasedLog with topic benchi-connect-offsets reportErrorsToCallback=false (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-02 09:54:26,016] INFO AdminClientConfig values: 
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	bootstrap.controllers = []
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-shared-admin
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  |  (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,018] INFO These configurations '[log4j.loggers, config.storage.topic, auto.create.topics.enable, metrics.context.connect.group.id, rest.advertised.host.name, group.id, status.storage.topic, plugin.path, offset.flush.interval.ms, rest.port, config.storage.replication.factor, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.replication.factor, offset.storage.topic, value.converter, key.converter]' were supplied but are not used yet. (org.apache.kafka.clients.admin.AdminClientConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,018] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,018] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,018] INFO Kafka startTimeMs: 1743587666018 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,028] INFO Adding admin resources to main listener (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:26,043] INFO DefaultSessionIdManager workerName=node0 (org.eclipse.jetty.server.session)
benchi-kafka-connect  | [2025-04-02 09:54:26,043] INFO No SessionScavenger set, using defaults (org.eclipse.jetty.server.session)
benchi-kafka-connect  | [2025-04-02 09:54:26,044] INFO node0 Scavenging every 660000ms (org.eclipse.jetty.server.session)
benchi-kafka-connect  | [2025-04-02 09:54:26,091] INFO Created topic (name=benchi-connect-offsets, numPartitions=25, replicationFactor=1, replicasAssignments=null, configs={cleanup.policy=compact}) on brokers at benchi-kafka:9092 (org.apache.kafka.connect.util.TopicAdmin)
benchi-kafka-connect  | [2025-04-02 09:54:26,094] INFO ProducerConfig values: 
benchi-kafka-connect  | 	acks = -1
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	batch.size = 16384
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	buffer.memory = 33554432
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-offsets
benchi-kafka-connect  | 	compression.gzip.level = -1
benchi-kafka-connect  | 	compression.lz4.level = 9
benchi-kafka-connect  | 	compression.type = none
benchi-kafka-connect  | 	compression.zstd.level = 3
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	delivery.timeout.ms = 2147483647
benchi-kafka-connect  | 	enable.idempotence = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  | 	linger.ms = 0
benchi-kafka-connect  | 	max.block.ms = 60000
benchi-kafka-connect  | 	max.in.flight.requests.per.connection = 1
benchi-kafka-connect  | 	max.request.size = 1048576
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.max.idle.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partitioner.adaptive.partitioning.enable = true
benchi-kafka-connect  | 	partitioner.availability.timeout.ms = 0
benchi-kafka-connect  | 	partitioner.class = null
benchi-kafka-connect  | 	partitioner.ignore.keys = false
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	transaction.timeout.ms = 60000
benchi-kafka-connect  | 	transactional.id = null
benchi-kafka-connect  | 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  |  (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,105] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-02 09:54:26,116] INFO These configurations '[log4j.loggers, auto.create.topics.enable, group.id, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,116] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,116] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,116] INFO Kafka startTimeMs: 1743587666116 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,118] INFO ConsumerConfig values: 
benchi-kafka-connect  | 	allow.auto.create.topics = true
benchi-kafka-connect  | 	auto.commit.interval.ms = 5000
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	auto.offset.reset = earliest
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	check.crcs = true
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-offsets
benchi-kafka-connect  | 	client.rack = 
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.auto.commit = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	exclude.internal.topics = true
benchi-kafka-connect  | 	fetch.max.bytes = 52428800
benchi-kafka-connect  | 	fetch.max.wait.ms = 500
benchi-kafka-connect  | 	fetch.min.bytes = 1
benchi-kafka-connect  | 	group.id = connect-cluster-group
benchi-kafka-connect  | 	group.instance.id = null
benchi-kafka-connect  | 	group.protocol = classic
benchi-kafka-connect  | 	group.remote.assignor = null
benchi-kafka-connect  | 	heartbeat.interval.ms = 3000
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	internal.leave.group.on.close = true
benchi-kafka-connect  | 	internal.throw.on.fetch.stable.offset.unsupported = false
benchi-kafka-connect  | 	isolation.level = read_uncommitted
benchi-kafka-connect  | 	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
benchi-kafka-connect  | 	max.partition.fetch.bytes = 1048576
benchi-kafka-connect  | 	max.poll.interval.ms = 300000
benchi-kafka-connect  | 	max.poll.records = 500
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	session.timeout.ms = 45000
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
benchi-kafka-connect  |  (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,122] INFO [Producer clientId=connect-cluster-group-offsets] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-02 09:54:26,124] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-02 09:54:26,139] INFO These configurations '[log4j.loggers, auto.create.topics.enable, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,139] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,139] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,139] INFO Kafka startTimeMs: 1743587666139 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,149] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-02 09:54:26,162] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Assigned to partition(s): benchi-connect-offsets-17, benchi-connect-offsets-20, benchi-connect-offsets-11, benchi-connect-offsets-23, benchi-connect-offsets-14, benchi-connect-offsets-5, benchi-connect-offsets-0, benchi-connect-offsets-8, benchi-connect-offsets-7, benchi-connect-offsets-4, benchi-connect-offsets-1, benchi-connect-offsets-10, benchi-connect-offsets-13, benchi-connect-offsets-24, benchi-connect-offsets-21, benchi-connect-offsets-16, benchi-connect-offsets-3, benchi-connect-offsets-9, benchi-connect-offsets-15, benchi-connect-offsets-18, benchi-connect-offsets-19, benchi-connect-offsets-22, benchi-connect-offsets-6, benchi-connect-offsets-2, benchi-connect-offsets-12 (org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-17 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-20 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-11 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-23 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-14 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-5 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-8 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-7 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-4 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-1 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-10 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-13 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-24 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-21 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-16 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-3 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-9 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-15 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-18 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-19 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-22 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-6 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-2 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,163] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-offsets-12 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,203] INFO Started o.e.j.s.ServletContextHandler@80fdc18{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
benchi-kafka-connect  | [2025-04-02 09:54:26,203] INFO REST resources initialized; server is started and ready to handle requests (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:26,203] INFO Kafka Connect started (org.apache.kafka.connect.runtime.Connect)
benchi-kafka-connect  | [2025-04-02 09:54:26,314] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-9 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,314] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-7 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,314] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-5 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,314] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,314] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,314] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-24 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-22 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-20 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-18 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-16 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-14 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-12 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-10 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-8 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-6 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-23 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-21 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-19 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-17 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-15 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-13 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO [Consumer clientId=connect-cluster-group-offsets, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-offsets-11 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO Finished reading KafkaBasedLog for topic benchi-connect-offsets (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-02 09:54:26,315] INFO Started KafkaBasedLog for topic benchi-connect-offsets (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-02 09:54:26,316] INFO Finished reading offsets topic and starting KafkaOffsetBackingStore (org.apache.kafka.connect.storage.KafkaOffsetBackingStore)
benchi-kafka-connect  | [2025-04-02 09:54:26,316] INFO Worker started (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:26,316] INFO Starting KafkaBasedLog with topic benchi-connect-status reportErrorsToCallback=false (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-02 09:54:26,357] INFO Created topic (name=benchi-connect-status, numPartitions=5, replicationFactor=1, replicasAssignments=null, configs={cleanup.policy=compact}) on brokers at benchi-kafka:9092 (org.apache.kafka.connect.util.TopicAdmin)
benchi-kafka-connect  | [2025-04-02 09:54:26,357] INFO ProducerConfig values: 
benchi-kafka-connect  | 	acks = -1
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	batch.size = 16384
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	buffer.memory = 33554432
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-statuses
benchi-kafka-connect  | 	compression.gzip.level = -1
benchi-kafka-connect  | 	compression.lz4.level = 9
benchi-kafka-connect  | 	compression.type = none
benchi-kafka-connect  | 	compression.zstd.level = 3
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	delivery.timeout.ms = 120000
benchi-kafka-connect  | 	enable.idempotence = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
benchi-kafka-connect  | 	linger.ms = 0
benchi-kafka-connect  | 	max.block.ms = 60000
benchi-kafka-connect  | 	max.in.flight.requests.per.connection = 1
benchi-kafka-connect  | 	max.request.size = 1048576
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.max.idle.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partitioner.adaptive.partitioning.enable = true
benchi-kafka-connect  | 	partitioner.availability.timeout.ms = 0
benchi-kafka-connect  | 	partitioner.class = null
benchi-kafka-connect  | 	partitioner.ignore.keys = false
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 0
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	transaction.timeout.ms = 60000
benchi-kafka-connect  | 	transactional.id = null
benchi-kafka-connect  | 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  |  (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,357] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-02 09:54:26,359] INFO These configurations '[log4j.loggers, auto.create.topics.enable, group.id, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,359] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,359] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,359] INFO Kafka startTimeMs: 1743587666359 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,360] INFO ConsumerConfig values: 
benchi-kafka-connect  | 	allow.auto.create.topics = true
benchi-kafka-connect  | 	auto.commit.interval.ms = 5000
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	auto.offset.reset = earliest
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	check.crcs = true
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-statuses
benchi-kafka-connect  | 	client.rack = 
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.auto.commit = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	exclude.internal.topics = true
benchi-kafka-connect  | 	fetch.max.bytes = 52428800
benchi-kafka-connect  | 	fetch.max.wait.ms = 500
benchi-kafka-connect  | 	fetch.min.bytes = 1
benchi-kafka-connect  | 	group.id = connect-cluster-group
benchi-kafka-connect  | 	group.instance.id = null
benchi-kafka-connect  | 	group.protocol = classic
benchi-kafka-connect  | 	group.remote.assignor = null
benchi-kafka-connect  | 	heartbeat.interval.ms = 3000
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	internal.leave.group.on.close = true
benchi-kafka-connect  | 	internal.throw.on.fetch.stable.offset.unsupported = false
benchi-kafka-connect  | 	isolation.level = read_uncommitted
benchi-kafka-connect  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
benchi-kafka-connect  | 	max.partition.fetch.bytes = 1048576
benchi-kafka-connect  | 	max.poll.interval.ms = 300000
benchi-kafka-connect  | 	max.poll.records = 500
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	session.timeout.ms = 45000
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
benchi-kafka-connect  |  (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,360] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-02 09:54:26,363] INFO These configurations '[log4j.loggers, auto.create.topics.enable, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,363] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,363] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,363] INFO Kafka startTimeMs: 1743587666363 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,385] INFO [Producer clientId=connect-cluster-group-statuses] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-02 09:54:26,385] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-02 09:54:26,393] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Assigned to partition(s): benchi-connect-status-1, benchi-connect-status-3, benchi-connect-status-2, benchi-connect-status-0, benchi-connect-status-4 (org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer)
benchi-kafka-connect  | [2025-04-02 09:54:26,393] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-1 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,393] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-3 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,393] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-2 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,393] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,393] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-status-4 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,530] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,530] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,530] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,530] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-3 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,531] INFO [Consumer clientId=connect-cluster-group-statuses, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-status-4 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,531] INFO Finished reading KafkaBasedLog for topic benchi-connect-status (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-02 09:54:26,531] INFO Started KafkaBasedLog for topic benchi-connect-status (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-02 09:54:26,532] INFO Starting KafkaConfigBackingStore (org.apache.kafka.connect.storage.KafkaConfigBackingStore)
benchi-kafka-connect  | [2025-04-02 09:54:26,532] INFO Starting KafkaBasedLog with topic benchi-connect-configs reportErrorsToCallback=false (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-02 09:54:26,566] INFO Created topic (name=benchi-connect-configs, numPartitions=1, replicationFactor=1, replicasAssignments=null, configs={cleanup.policy=compact}) on brokers at benchi-kafka:9092 (org.apache.kafka.connect.util.TopicAdmin)
benchi-kafka-connect  | [2025-04-02 09:54:26,567] INFO ProducerConfig values: 
benchi-kafka-connect  | 	acks = -1
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	batch.size = 16384
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	buffer.memory = 33554432
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-configs
benchi-kafka-connect  | 	compression.gzip.level = -1
benchi-kafka-connect  | 	compression.lz4.level = 9
benchi-kafka-connect  | 	compression.type = none
benchi-kafka-connect  | 	compression.zstd.level = 3
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	delivery.timeout.ms = 2147483647
benchi-kafka-connect  | 	enable.idempotence = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
benchi-kafka-connect  | 	linger.ms = 0
benchi-kafka-connect  | 	max.block.ms = 60000
benchi-kafka-connect  | 	max.in.flight.requests.per.connection = 1
benchi-kafka-connect  | 	max.request.size = 1048576
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.max.idle.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partitioner.adaptive.partitioning.enable = true
benchi-kafka-connect  | 	partitioner.availability.timeout.ms = 0
benchi-kafka-connect  | 	partitioner.class = null
benchi-kafka-connect  | 	partitioner.ignore.keys = false
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	transaction.timeout.ms = 60000
benchi-kafka-connect  | 	transactional.id = null
benchi-kafka-connect  | 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  |  (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,567] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-02 09:54:26,568] INFO These configurations '[log4j.loggers, auto.create.topics.enable, group.id, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,568] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,568] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,568] INFO Kafka startTimeMs: 1743587666568 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,569] INFO ConsumerConfig values: 
benchi-kafka-connect  | 	allow.auto.create.topics = true
benchi-kafka-connect  | 	auto.commit.interval.ms = 5000
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	auto.offset.reset = earliest
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	check.crcs = true
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connect-cluster-group-configs
benchi-kafka-connect  | 	client.rack = 
benchi-kafka-connect  | 	connections.max.idle.ms = 180000
benchi-kafka-connect  | 	default.api.timeout.ms = 60000
benchi-kafka-connect  | 	enable.auto.commit = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	exclude.internal.topics = true
benchi-kafka-connect  | 	fetch.max.bytes = 52428800
benchi-kafka-connect  | 	fetch.max.wait.ms = 500
benchi-kafka-connect  | 	fetch.min.bytes = 1
benchi-kafka-connect  | 	group.id = connect-cluster-group
benchi-kafka-connect  | 	group.instance.id = null
benchi-kafka-connect  | 	group.protocol = classic
benchi-kafka-connect  | 	group.remote.assignor = null
benchi-kafka-connect  | 	heartbeat.interval.ms = 3000
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	internal.leave.group.on.close = true
benchi-kafka-connect  | 	internal.throw.on.fetch.stable.offset.unsupported = false
benchi-kafka-connect  | 	isolation.level = read_uncommitted
benchi-kafka-connect  | 	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
benchi-kafka-connect  | 	max.partition.fetch.bytes = 1048576
benchi-kafka-connect  | 	max.poll.interval.ms = 300000
benchi-kafka-connect  | 	max.poll.records = 500
benchi-kafka-connect  | 	metadata.max.age.ms = 180000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
benchi-kafka-connect  | 	receive.buffer.bytes = 65536
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	session.timeout.ms = 45000
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
benchi-kafka-connect  |  (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,569] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-02 09:54:26,570] INFO These configurations '[log4j.loggers, auto.create.topics.enable, plugin.path, metrics.context.connect.kafka.cluster.id, status.storage.replication.factor, offset.storage.topic, value.converter, key.converter, config.storage.topic, metrics.context.connect.group.id, rest.advertised.host.name, status.storage.topic, offset.flush.interval.ms, rest.port, config.storage.replication.factor, offset.storage.replication.factor]' were supplied but are not used yet. (org.apache.kafka.clients.consumer.ConsumerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:26,570] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,570] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,570] INFO Kafka startTimeMs: 1743587666570 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:26,574] INFO [Producer clientId=connect-cluster-group-configs] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-02 09:54:26,575] INFO [Consumer clientId=connect-cluster-group-configs, groupId=connect-cluster-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-02 09:54:26,582] INFO [Consumer clientId=connect-cluster-group-configs, groupId=connect-cluster-group] Assigned to partition(s): benchi-connect-configs-0 (org.apache.kafka.clients.consumer.internals.LegacyKafkaConsumer)
benchi-kafka-connect  | [2025-04-02 09:54:26,582] INFO [Consumer clientId=connect-cluster-group-configs, groupId=connect-cluster-group] Seeking to earliest offset of partition benchi-connect-configs-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,591] INFO [Consumer clientId=connect-cluster-group-configs, groupId=connect-cluster-group] Resetting offset for partition benchi-connect-configs-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[benchi-kafka:9092 (id: 1 rack: null)], epoch=0}}. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
benchi-kafka-connect  | [2025-04-02 09:54:26,591] INFO Finished reading KafkaBasedLog for topic benchi-connect-configs (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-02 09:54:26,591] INFO Started KafkaBasedLog for topic benchi-connect-configs (org.apache.kafka.connect.util.KafkaBasedLog)
benchi-kafka-connect  | [2025-04-02 09:54:26,591] INFO Started KafkaConfigBackingStore (org.apache.kafka.connect.storage.KafkaConfigBackingStore)
benchi-kafka-connect  | [2025-04-02 09:54:26,591] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Herder started (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:26,603] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-02 09:54:26,604] INFO 172.18.0.4 - - [02/Apr/2025:09:54:26 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 37 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:26,739] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Discovered group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:26,739] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Rebalance started (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:26,739] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:26,751] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR. isDisconnected: false. Rediscovery will be attempted. (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:26,751] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Requesting disconnect from last known coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:26,751] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:26,751] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Request joining group due to: rebalance failed due to 'This is not the correct coordinator.' (NotCoordinatorException) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:26,852] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Client requested disconnect from node 2147483646 (org.apache.kafka.clients.NetworkClient)
benchi-kafka-connect  | [2025-04-02 09:54:27,009] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Discovered group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,010] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,034] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: error response NOT_COORDINATOR. isDisconnected: false. Rediscovery will be attempted. (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,034] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Requesting disconnect from last known coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,034] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] JoinGroup failed: This is not the correct coordinator. Marking coordinator unknown. Sent generation was Generation{generationId=-1, memberId='', protocol='null'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,034] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Request joining group due to: rebalance failed due to 'This is not the correct coordinator.' (NotCoordinatorException) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,135] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Client requested disconnect from node 2147483646 (org.apache.kafka.clients.NetworkClient)
benchi-kafka-connect  | [2025-04-02 09:54:27,138] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Discovered group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,139] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted. (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,139] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Requesting disconnect from last known coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,263] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Discovered group coordinator benchi-kafka:9092 (id: 2147483646 rack: null) (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,263] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:27,273] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:30,286] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully joined group with generation Generation{generationId=1, memberId='connect-benchi-kafka-connect:8083-406738f6-17c8-4828-b6df-e07e079a91a8', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:30,303] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully synced group in generation Generation{generationId=1, memberId='connect-benchi-kafka-connect:8083-406738f6-17c8-4828-b6df-e07e079a91a8', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:30,303] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Joined group at generation 1 with protocol version 2 and got assignment: Assignment{error=0, leader='connect-benchi-kafka-connect:8083-406738f6-17c8-4828-b6df-e07e079a91a8', leaderUrl='http://benchi-kafka-connect:8083/', offset=-1, connectorIds=[], taskIds=[], revokedConnectorIds=[], revokedTaskIds=[], delay=0} with rebalance delay: 0 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:30,303] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting connectors and tasks using config offset -1 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:30,303] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Finished starting connectors and tasks (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:30,337] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Session key updated (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:31,637] INFO 172.18.0.4 - - [02/Apr/2025:09:54:31 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 3 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:36,674] INFO 172.18.0.4 - - [02/Apr/2025:09:54:36 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:41,710] INFO 172.18.0.4 - - [02/Apr/2025:09:54:41 +0000] "GET /connectors HTTP/1.1" 200 2 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:43,664] INFO Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker (io.debezium.config.CommonConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,713] INFO Successfully tested connection for jdbc:postgresql://benchi-postgres:5432/meroxadb with user 'meroxauser' (io.debezium.connector.postgresql.PostgresConnector)
benchi-kafka-connect  | [2025-04-02 09:54:43,716] INFO Connection gracefully closed (io.debezium.jdbc.JdbcConnection)
benchi-kafka-connect  | [2025-04-02 09:54:43,718] INFO AbstractConfig values: 
benchi-kafka-connect  |  (org.apache.kafka.common.config.AbstractConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,729] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Connector benchi-source-connector config updated (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,730] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Rebalance started (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,730] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,737] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully joined group with generation Generation{generationId=2, memberId='connect-benchi-kafka-connect:8083-406738f6-17c8-4828-b6df-e07e079a91a8', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,739] INFO [0:0:0:0:0:0:0:1] - - [02/Apr/2025:09:54:43 +0000] "POST /connectors HTTP/1.1" 201 626 "-" "curl/7.61.1" 119 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:43,741] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully synced group in generation Generation{generationId=2, memberId='connect-benchi-kafka-connect:8083-406738f6-17c8-4828-b6df-e07e079a91a8', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,742] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Joined group at generation 2 with protocol version 2 and got assignment: Assignment{error=0, leader='connect-benchi-kafka-connect:8083-406738f6-17c8-4828-b6df-e07e079a91a8', leaderUrl='http://benchi-kafka-connect:8083/', offset=2, connectorIds=[benchi-source-connector], taskIds=[], revokedConnectorIds=[], revokedTaskIds=[], delay=0} with rebalance delay: 0 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,742] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting connectors and tasks using config offset 2 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,742] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting connector benchi-source-connector (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,744] INFO Creating connector benchi-source-connector of type io.debezium.connector.postgresql.PostgresConnector (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:43,744] INFO SourceConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.postgresql.PostgresConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = null
benchi-kafka-connect  | 	name = benchi-source-connector
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = null
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.SourceConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,744] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.postgresql.PostgresConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = null
benchi-kafka-connect  | 	name = benchi-source-connector
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = null
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,747] INFO Instantiated connector benchi-source-connector with version 2.5.4.Final of type class io.debezium.connector.postgresql.PostgresConnector (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:43,747] INFO Finished creating connector benchi-source-connector (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:43,747] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Finished starting connectors and tasks (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,753] INFO SourceConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.postgresql.PostgresConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = null
benchi-kafka-connect  | 	name = benchi-source-connector
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = null
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.SourceConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,753] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.postgresql.PostgresConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = null
benchi-kafka-connect  | 	name = benchi-source-connector
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = null
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,760] INFO [0:0:0:0:0:0:0:1] - - [02/Apr/2025:09:54:43 +0000] "GET /connectors/benchi-source-connector/status HTTP/1.1" 404 84 "-" "curl/7.61.1" 8 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:43,774] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Tasks [benchi-source-connector-0] configs updated (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,775] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Rebalance started (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,775] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] (Re-)joining group (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,778] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully joined group with generation Generation{generationId=3, memberId='connect-benchi-kafka-connect:8083-406738f6-17c8-4828-b6df-e07e079a91a8', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,781] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Successfully synced group in generation Generation{generationId=3, memberId='connect-benchi-kafka-connect:8083-406738f6-17c8-4828-b6df-e07e079a91a8', protocol='sessioned'} (org.apache.kafka.connect.runtime.distributed.WorkerCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,781] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Joined group at generation 3 with protocol version 2 and got assignment: Assignment{error=0, leader='connect-benchi-kafka-connect:8083-406738f6-17c8-4828-b6df-e07e079a91a8', leaderUrl='http://benchi-kafka-connect:8083/', offset=4, connectorIds=[benchi-source-connector], taskIds=[benchi-source-connector-0], revokedConnectorIds=[], revokedTaskIds=[], delay=0} with rebalance delay: 0 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,781] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting connectors and tasks using config offset 4 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,782] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Starting task benchi-source-connector-0 (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,783] INFO Creating task benchi-source-connector-0 (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:43,784] INFO ConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.postgresql.PostgresConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = null
benchi-kafka-connect  | 	name = benchi-source-connector
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = null
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,784] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.postgresql.PostgresConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = null
benchi-kafka-connect  | 	name = benchi-source-connector
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = null
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,785] INFO TaskConfig values: 
benchi-kafka-connect  | 	task.class = class io.debezium.connector.postgresql.PostgresConnectorTask
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.TaskConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,786] INFO Instantiated task benchi-source-connector-0 with version 2.5.4.Final of type io.debezium.connector.postgresql.PostgresConnectorTask (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:43,787] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = key
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = true
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,787] INFO Set up the key converter class org.apache.kafka.connect.json.JsonConverter for task benchi-source-connector-0 using the worker config (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:43,787] INFO JsonConverterConfig values: 
benchi-kafka-connect  | 	converter.type = value
benchi-kafka-connect  | 	decimal.format = BASE64
benchi-kafka-connect  | 	replace.null.with.default = true
benchi-kafka-connect  | 	schemas.cache.size = 1000
benchi-kafka-connect  | 	schemas.enable = true
benchi-kafka-connect  |  (org.apache.kafka.connect.json.JsonConverterConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,787] INFO Set up the value converter class org.apache.kafka.connect.json.JsonConverter for task benchi-source-connector-0 using the worker config (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:43,787] INFO Set up the header converter class org.apache.kafka.connect.storage.SimpleHeaderConverter for task benchi-source-connector-0 using the worker config (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:43,788] INFO Initializing: org.apache.kafka.connect.runtime.TransformationChain{} (org.apache.kafka.connect.runtime.Worker)
benchi-kafka-connect  | [2025-04-02 09:54:43,788] INFO SourceConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.postgresql.PostgresConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = null
benchi-kafka-connect  | 	name = benchi-source-connector
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = null
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.SourceConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,788] INFO EnrichedConnectorConfig values: 
benchi-kafka-connect  | 	config.action.reload = restart
benchi-kafka-connect  | 	connector.class = io.debezium.connector.postgresql.PostgresConnector
benchi-kafka-connect  | 	errors.log.enable = false
benchi-kafka-connect  | 	errors.log.include.messages = false
benchi-kafka-connect  | 	errors.retry.delay.max.ms = 60000
benchi-kafka-connect  | 	errors.retry.timeout = 0
benchi-kafka-connect  | 	errors.tolerance = none
benchi-kafka-connect  | 	exactly.once.support = requested
benchi-kafka-connect  | 	header.converter = null
benchi-kafka-connect  | 	key.converter = null
benchi-kafka-connect  | 	name = benchi-source-connector
benchi-kafka-connect  | 	offsets.storage.topic = null
benchi-kafka-connect  | 	predicates = []
benchi-kafka-connect  | 	tasks.max = 1
benchi-kafka-connect  | 	tasks.max.enforce = true
benchi-kafka-connect  | 	topic.creation.groups = []
benchi-kafka-connect  | 	transaction.boundary = poll
benchi-kafka-connect  | 	transaction.boundary.interval.ms = null
benchi-kafka-connect  | 	transforms = []
benchi-kafka-connect  | 	value.converter = null
benchi-kafka-connect  |  (org.apache.kafka.connect.runtime.ConnectorConfig$EnrichedConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,789] INFO ProducerConfig values: 
benchi-kafka-connect  | 	acks = -1
benchi-kafka-connect  | 	auto.include.jmx.reporter = true
benchi-kafka-connect  | 	batch.size = 16384
benchi-kafka-connect  | 	bootstrap.servers = [benchi-kafka:9092]
benchi-kafka-connect  | 	buffer.memory = 33554432
benchi-kafka-connect  | 	client.dns.lookup = use_all_dns_ips
benchi-kafka-connect  | 	client.id = connector-producer-benchi-source-connector-0
benchi-kafka-connect  | 	compression.gzip.level = -1
benchi-kafka-connect  | 	compression.lz4.level = 9
benchi-kafka-connect  | 	compression.type = none
benchi-kafka-connect  | 	compression.zstd.level = 3
benchi-kafka-connect  | 	connections.max.idle.ms = 540000
benchi-kafka-connect  | 	delivery.timeout.ms = 2147483647
benchi-kafka-connect  | 	enable.idempotence = false
benchi-kafka-connect  | 	enable.metrics.push = true
benchi-kafka-connect  | 	interceptor.classes = []
benchi-kafka-connect  | 	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  | 	linger.ms = 0
benchi-kafka-connect  | 	max.block.ms = 9223372036854775807
benchi-kafka-connect  | 	max.in.flight.requests.per.connection = 1
benchi-kafka-connect  | 	max.request.size = 1048576
benchi-kafka-connect  | 	metadata.max.age.ms = 300000
benchi-kafka-connect  | 	metadata.max.idle.ms = 300000
benchi-kafka-connect  | 	metadata.recovery.strategy = none
benchi-kafka-connect  | 	metric.reporters = []
benchi-kafka-connect  | 	metrics.num.samples = 2
benchi-kafka-connect  | 	metrics.recording.level = INFO
benchi-kafka-connect  | 	metrics.sample.window.ms = 30000
benchi-kafka-connect  | 	partitioner.adaptive.partitioning.enable = true
benchi-kafka-connect  | 	partitioner.availability.timeout.ms = 0
benchi-kafka-connect  | 	partitioner.class = null
benchi-kafka-connect  | 	partitioner.ignore.keys = false
benchi-kafka-connect  | 	receive.buffer.bytes = 32768
benchi-kafka-connect  | 	reconnect.backoff.max.ms = 1000
benchi-kafka-connect  | 	reconnect.backoff.ms = 50
benchi-kafka-connect  | 	request.timeout.ms = 30000
benchi-kafka-connect  | 	retries = 2147483647
benchi-kafka-connect  | 	retry.backoff.max.ms = 1000
benchi-kafka-connect  | 	retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.client.callback.handler.class = null
benchi-kafka-connect  | 	sasl.jaas.config = null
benchi-kafka-connect  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka-connect  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka-connect  | 	sasl.kerberos.service.name = null
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka-connect  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.callback.handler.class = null
benchi-kafka-connect  | 	sasl.login.class = null
benchi-kafka-connect  | 	sasl.login.connect.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.read.timeout.ms = null
benchi-kafka-connect  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka-connect  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka-connect  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka-connect  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka-connect  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.mechanism = GSSAPI
benchi-kafka-connect  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka-connect  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka-connect  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka-connect  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka-connect  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka-connect  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka-connect  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka-connect  | 	security.protocol = PLAINTEXT
benchi-kafka-connect  | 	security.providers = null
benchi-kafka-connect  | 	send.buffer.bytes = 131072
benchi-kafka-connect  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka-connect  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka-connect  | 	ssl.cipher.suites = null
benchi-kafka-connect  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka-connect  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka-connect  | 	ssl.engine.factory.class = null
benchi-kafka-connect  | 	ssl.key.password = null
benchi-kafka-connect  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka-connect  | 	ssl.keystore.certificate.chain = null
benchi-kafka-connect  | 	ssl.keystore.key = null
benchi-kafka-connect  | 	ssl.keystore.location = null
benchi-kafka-connect  | 	ssl.keystore.password = null
benchi-kafka-connect  | 	ssl.keystore.type = JKS
benchi-kafka-connect  | 	ssl.protocol = TLSv1.3
benchi-kafka-connect  | 	ssl.provider = null
benchi-kafka-connect  | 	ssl.secure.random.implementation = null
benchi-kafka-connect  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka-connect  | 	ssl.truststore.certificates = null
benchi-kafka-connect  | 	ssl.truststore.location = null
benchi-kafka-connect  | 	ssl.truststore.password = null
benchi-kafka-connect  | 	ssl.truststore.type = JKS
benchi-kafka-connect  | 	transaction.timeout.ms = 60000
benchi-kafka-connect  | 	transactional.id = null
benchi-kafka-connect  | 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
benchi-kafka-connect  |  (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,789] INFO initializing Kafka metrics collector (org.apache.kafka.common.telemetry.internals.KafkaMetricsCollector)
benchi-kafka-connect  | [2025-04-02 09:54:43,791] INFO These configurations '[metrics.context.connect.kafka.cluster.id, metrics.context.connect.group.id]' were supplied but are not used yet. (org.apache.kafka.clients.producer.ProducerConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,791] INFO Kafka version: 7.8.1-ccs (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:43,791] INFO Kafka commitId: 3eb9c1b8442d046f77fcce351e49303422f9a6e9 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:43,791] INFO Kafka startTimeMs: 1743587683791 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka-connect  | [2025-04-02 09:54:43,793] INFO [Producer clientId=connector-producer-benchi-source-connector-0] Cluster ID: 5L6g3nShT-eMCtK--X86sw (org.apache.kafka.clients.Metadata)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO [Worker clientId=connect-benchi-kafka-connect:8083, groupId=connect-cluster-group] Finished starting connectors and tasks (org.apache.kafka.connect.runtime.distributed.DistributedHerder)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO Starting PostgresConnectorTask with configuration: (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    connector.class = io.debezium.connector.postgresql.PostgresConnector (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    database.user = meroxauser (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    database.dbname = meroxadb (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    slot.name = debezium_slot (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    tasks.max = 1 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    database.history.kafka.bootstrap.servers = benchi-kafka-connect:9092 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    database.history.kafka.topic = schema-changes.postgres (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    database.server.name = postgres_server (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    database.port = 5432 (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    plugin.name = pgoutput (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    table.whitelist = employees (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    topic.prefix = kafkaconnect (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    task.class = io.debezium.connector.postgresql.PostgresConnectorTask (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    database.hostname = benchi-postgres (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    database.password = ******** (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO    name = benchi-source-connector (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,795] INFO Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker (io.debezium.config.CommonConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,796] INFO Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy (io.debezium.config.CommonConnectorConfig)
benchi-kafka-connect  | [2025-04-02 09:54:43,800] INFO Connection gracefully closed (io.debezium.jdbc.JdbcConnection)
benchi-kafka-connect  | [2025-04-02 09:54:43,829] INFO No previous offsets found (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,841] INFO user 'meroxauser' connected to database 'meroxadb' on PostgreSQL 16.4 (Debian 16.4-1.pgdg110+2) on aarch64-unknown-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit with roles:
benchi-kafka-connect  | 	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_use_reserved_connections' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_create_subscription' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'meroxauser' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]
benchi-kafka-connect  | 	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
benchi-kafka-connect  | 	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false] (io.debezium.connector.postgresql.PostgresConnectorTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,844] INFO Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null] (io.debezium.connector.postgresql.connection.PostgresConnection)
benchi-kafka-connect  | [2025-04-02 09:54:43,844] INFO No previous offset found (io.debezium.connector.postgresql.PostgresConnectorTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,849] INFO Initializing PgOutput logical decoder publication (io.debezium.connector.postgresql.connection.PostgresReplicationConnection)
benchi-kafka-connect  | [2025-04-02 09:54:43,849] INFO Creating new publication 'dbz_publication' for plugin 'PGOUTPUT' (io.debezium.connector.postgresql.connection.PostgresReplicationConnection)
benchi-kafka-connect  | [2025-04-02 09:54:43,849] INFO Creating Publication with statement 'CREATE PUBLICATION dbz_publication FOR ALL TABLES;' (io.debezium.connector.postgresql.connection.PostgresReplicationConnection)
benchi-kafka-connect  | [2025-04-02 09:54:43,850] INFO Creating replication slot with command CREATE_REPLICATION_SLOT "debezium_slot"  LOGICAL pgoutput (io.debezium.connector.postgresql.connection.PostgresReplicationConnection)
benchi-kafka-connect  | [2025-04-02 09:54:43,859] INFO Requested thread factory for connector PostgresConnector, id = kafkaconnect named = SignalProcessor (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-02 09:54:43,864] INFO Requested thread factory for connector PostgresConnector, id = kafkaconnect named = change-event-source-coordinator (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-02 09:54:43,864] INFO Requested thread factory for connector PostgresConnector, id = kafkaconnect named = blocking-snapshot (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-02 09:54:43,865] INFO Creating thread debezium-postgresconnector-kafkaconnect-change-event-source-coordinator (io.debezium.util.Threads)
benchi-kafka-connect  | [2025-04-02 09:54:43,865] INFO WorkerSourceTask{id=benchi-source-connector-0} Source task finished initialization and start (org.apache.kafka.connect.runtime.AbstractWorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:43,867] INFO Metrics registered (io.debezium.pipeline.ChangeEventSourceCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,867] INFO Context created (io.debezium.pipeline.ChangeEventSourceCoordinator)
benchi-kafka-connect  | [2025-04-02 09:54:43,869] INFO Taking initial snapshot for new datasource (io.debezium.connector.postgresql.snapshot.InitialSnapshotter)
benchi-kafka-connect  | [2025-04-02 09:54:43,869] INFO According to the connector configuration data will be snapshotted (io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,870] INFO Snapshot step 1 - Preparing (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,870] INFO Setting isolation level (io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,870] INFO Opening transaction with statement SET TRANSACTION ISOLATION LEVEL REPEATABLE READ; 
benchi-kafka-connect  | SET TRANSACTION SNAPSHOT '00000005-00000004-1'; (io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,898] INFO Snapshot step 2 - Determining captured tables (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,899] INFO Adding table public.employees to the list of capture schema tables (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,900] INFO Created connection pool with 1 threads (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,900] INFO Snapshot step 3 - Locking captured tables [public.employees] (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,900] INFO Snapshot step 4 - Determining snapshot offset (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,900] INFO Creating initial offset context (io.debezium.connector.postgresql.PostgresOffsetContext)
benchi-kafka-connect  | [2025-04-02 09:54:43,901] INFO Read xlogStart at 'LSN{0/90745640}' from transaction '949' (io.debezium.connector.postgresql.PostgresOffsetContext)
benchi-kafka-connect  | [2025-04-02 09:54:43,904] INFO Read xlogStart at 'LSN{0/90745640}' from transaction '949' (io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,904] INFO Snapshot step 5 - Reading structure of captured tables (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,904] INFO Reading structure of schema 'public' of catalog 'meroxadb' (io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,916] INFO Snapshot step 6 - Persisting schema history (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,917] INFO Snapshot step 7 - Snapshotting data (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,917] INFO Creating snapshot worker pool with 1 worker thread(s) (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,919] INFO For table 'public.employees' using select statement: 'SELECT "id", "name", "full_time", "updated_at" FROM "public"."employees"' (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:43,920] INFO Exporting data from table 'public.employees' (1 of 1 tables) (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:44,025] WARN [Producer clientId=connector-producer-benchi-source-connector-0] Error while fetching metadata with correlation id 4 : {kafkaconnect.public.employees=UNKNOWN_TOPIC_OR_PARTITION} (org.apache.kafka.clients.NetworkClient)
benchi-kafka-connect  | [2025-04-02 09:54:46,753] INFO 172.18.0.4 - - [02/Apr/2025:09:54:46 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:48,774] INFO [0:0:0:0:0:0:0:1] - - [02/Apr/2025:09:54:48 +0000] "GET /connectors/benchi-source-connector/status HTTP/1.1" 200 199 "-" "curl/7.61.1" 5 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:48,788] INFO 100352 records sent during previous 00:00:05.001, last recorded offset of {server=kafkaconnect} partition is {last_snapshot_record=false, lsn=2423543360, txId=949, ts_usec=1743587683871701, snapshot=true} (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:51,794] INFO 172.18.0.4 - - [02/Apr/2025:09:54:51 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:53,795] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 229387 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:54:53,928] INFO 	 Exported 256001 records for table 'public.employees' after 00:00:10.008 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:54:56,830] INFO 172.18.0.4 - - [02/Apr/2025:09:54:56 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:54:58,828] INFO 301056 records sent during previous 00:00:10.04, last recorded offset of {server=kafkaconnect} partition is {last_snapshot_record=false, lsn=2423543360, txId=949, ts_usec=1743587683871701, snapshot=true} (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:55:01,867] INFO 172.18.0.4 - - [02/Apr/2025:09:55:01 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:03,853] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 313344 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:55:03,976] INFO 	 Exported 567299 records for table 'public.employees' after 00:00:20.055 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:55:06,898] INFO 172.18.0.4 - - [02/Apr/2025:09:55:06 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:11,937] INFO 172.18.0.4 - - [02/Apr/2025:09:55:11 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:13,856] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 327678 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:55:13,982] INFO 	 Exported 894979 records for table 'public.employees' after 00:00:30.062 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:55:16,978] INFO 172.18.0.4 - - [02/Apr/2025:09:55:16 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:18,822] INFO 645120 records sent during previous 00:00:19.994, last recorded offset of {server=kafkaconnect} partition is {last_snapshot_record=false, lsn=2423543360, txId=949, ts_usec=1743587683871701, snapshot=true} (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:55:22,015] INFO 172.18.0.4 - - [02/Apr/2025:09:55:22 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:23,858] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 327678 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:55:24,017] INFO 	 Exported 1224707 records for table 'public.employees' after 00:00:40.097 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:55:27,051] INFO 172.18.0.4 - - [02/Apr/2025:09:55:27 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:32,096] INFO 172.18.0.4 - - [02/Apr/2025:09:55:32 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:33,860] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 344058 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:55:34,059] INFO 	 Exported 1568771 records for table 'public.employees' after 00:00:50.139 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:55:37,128] INFO 172.18.0.4 - - [02/Apr/2025:09:55:37 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:42,155] INFO 172.18.0.4 - - [02/Apr/2025:09:55:42 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 2 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:43,861] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 339978 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:55:44,093] INFO 	 Exported 1910787 records for table 'public.employees' after 00:01:00.173 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:55:47,193] INFO 172.18.0.4 - - [02/Apr/2025:09:55:47 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:52,230] INFO 172.18.0.4 - - [02/Apr/2025:09:55:52 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:53,862] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 329718 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:55:54,126] INFO 	 Exported 2242563 records for table 'public.employees' after 00:01:10.206 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:55:57,259] INFO 172.18.0.4 - - [02/Apr/2025:09:55:57 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:55:58,824] INFO 1347584 records sent during previous 00:00:40.002, last recorded offset of {server=kafkaconnect} partition is {last_snapshot_record=false, lsn=2423543360, txId=949, ts_usec=1743587683871701, snapshot=true} (io.debezium.connector.common.BaseSourceTask)
benchi-kafka-connect  | [2025-04-02 09:56:02,296] INFO 172.18.0.4 - - [02/Apr/2025:09:56:02 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:03,875] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 335880 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:56:04,141] INFO 	 Exported 2578435 records for table 'public.employees' after 00:01:20.221 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:56:07,328] INFO 172.18.0.4 - - [02/Apr/2025:09:56:07 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:12,363] INFO 172.18.0.4 - - [02/Apr/2025:09:56:12 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:13,876] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 327672 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:56:14,194] INFO 	 Exported 2908163 records for table 'public.employees' after 00:01:30.274 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:56:17,410] INFO 172.18.0.4 - - [02/Apr/2025:09:56:17 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:22,446] INFO 172.18.0.4 - - [02/Apr/2025:09:56:22 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:23,878] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 323586 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:56:24,202] INFO 	 Exported 3229699 records for table 'public.employees' after 00:01:40.282 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:56:27,479] INFO 172.18.0.4 - - [02/Apr/2025:09:56:27 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:32,511] INFO 172.18.0.4 - - [02/Apr/2025:09:56:32 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:33,878] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 323586 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:56:34,207] INFO 	 Exported 3555331 records for table 'public.employees' after 00:01:50.287 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:56:37,548] INFO 172.18.0.4 - - [02/Apr/2025:09:56:37 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:42,583] INFO 172.18.0.4 - - [02/Apr/2025:09:56:42 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:43,879] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 333828 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:56:44,245] INFO 	 Exported 3889155 records for table 'public.employees' after 00:02:00.325 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:56:47,622] INFO 172.18.0.4 - - [02/Apr/2025:09:56:47 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:52,657] INFO 172.18.0.4 - - [02/Apr/2025:09:56:52 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
benchi-kafka-connect  | [2025-04-02 09:56:53,880] INFO WorkerSourceTask{id=benchi-source-connector-0} Committing offsets for 327684 acknowledged messages (org.apache.kafka.connect.runtime.WorkerSourceTask)
benchi-kafka-connect  | [2025-04-02 09:56:54,254] INFO 	 Exported 4218883 records for table 'public.employees' after 00:02:10.334 (io.debezium.relational.RelationalSnapshotChangeEventSource)
benchi-kafka-connect  | [2025-04-02 09:56:57,696] INFO 172.18.0.4 - - [02/Apr/2025:09:56:57 +0000] "GET /connectors HTTP/1.1" 200 27 "-" "curl/7.61.1" 1 (org.apache.kafka.connect.runtime.rest.RestServer)
[Kbenchi-kafka-connect exited with code 137
