 Container benchi-kafka  Creating
 Container benchi-kafka  Created
Attaching to benchi-kafka
benchi-kafka  | ===> User
benchi-kafka  | uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
benchi-kafka  | ===> Setting default values of environment variables if not already set.
benchi-kafka  | CLUSTER_ID not set. Setting it to default value: "5L6g3nShT-eMCtK--X86sw"
benchi-kafka  | ===> Configuring ...
benchi-kafka  | Running in KRaft mode...
benchi-kafka  | KAFKA_OPTS should contain 'com.sun.management.jmxremote.rmi.port' property. It is required for accessing the JMX metrics externally.
benchi-kafka  | ===> Launching ... 
benchi-kafka  | ===> Using provided cluster id 5L6g3nShT-eMCtK--X86sw ...
benchi-kafka  | 2025-04-02 09:51:20.244 | main | INFO | io.prometheus.jmx.JavaAgent | Starting ...
benchi-kafka  | 2025-04-02 09:51:20.718 | main | INFO | io.prometheus.jmx.JavaAgent | HTTP enabled [true]
benchi-kafka  | 2025-04-02 09:51:20.718 | main | INFO | io.prometheus.jmx.JavaAgent | HTTP host:port [0.0.0.0:7071]
benchi-kafka  | 2025-04-02 09:51:20.727 | main | INFO | io.prometheus.jmx.JavaAgent | OpenTelemetry enabled [false]
benchi-kafka  | 2025-04-02 09:51:20.789 | main | INFO | io.prometheus.jmx.JavaAgent | Running ...
benchi-kafka  | [2025-04-02 09:51:20,895] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
benchi-kafka  | [2025-04-02 09:51:20,944] INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation=true to disable client-initiated TLS renegotiation (org.apache.zookeeper.common.X509Util)
benchi-kafka  | [2025-04-02 09:51:21,050] INFO Registered signal handlers for TERM, INT, HUP (org.apache.kafka.common.utils.LoggingSignalHandler)
benchi-kafka  | [2025-04-02 09:51:21,053] INFO [ControllerServer id=1] Starting controller (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:51:21,232] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
benchi-kafka  | [2025-04-02 09:51:21,252] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(CONTROLLER) (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:51:21,258] INFO authorizerStart completed for endpoint CONTROLLER. Endpoint is now READY. (org.apache.kafka.server.network.EndpointReadyFutures)
benchi-kafka  | [2025-04-02 09:51:21,259] INFO [SharedServer id=1] Starting SharedServer (kafka.server.SharedServer)
benchi-kafka  | [2025-04-02 09:51:21,319] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
benchi-kafka  | [2025-04-02 09:51:21,319] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kafka-logs] Reloading from producer snapshot and rebuilding producer state from offset 0 (kafka.log.UnifiedLog$)
benchi-kafka  | [2025-04-02 09:51:21,320] INFO [LogLoader partition=__cluster_metadata-0, dir=/tmp/kafka-logs] Producer state recovery took 1ms for snapshot load and 0ms for segment recovery from offset 0 (kafka.log.UnifiedLog$)
benchi-kafka  | [2025-04-02 09:51:21,333] INFO Initialized snapshots with IDs SortedSet() from /tmp/kafka-logs/__cluster_metadata-0 (kafka.raft.KafkaMetadataLog$)
benchi-kafka  | [2025-04-02 09:51:21,338] INFO [raft-expiration-reaper]: Starting (kafka.raft.TimingWheelExpirationService$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,341] INFO [RaftManager id=1] Reading KRaft snapshot and log as part of the initialization (org.apache.kafka.raft.KafkaRaftClient)
benchi-kafka  | [2025-04-02 09:51:21,344] INFO [RaftManager id=1] Starting voters are VoterSet(voters={1=VoterNode(voterKey=ReplicaKey(id=1, directoryId=Optional.empty), listeners=Endpoints(endpoints={ListenerName(CONTROLLER)=benchi-kafka/172.18.0.3:9093}), supportedKRaftVersion=SupportedVersionRange[min_version:0, max_version:0])}) (org.apache.kafka.raft.KafkaRaftClient)
benchi-kafka  | [2025-04-02 09:51:21,345] INFO [RaftManager id=1] Starting request manager with static voters: [benchi-kafka:9093 (id: 1 rack: null)] (org.apache.kafka.raft.KafkaRaftClient)
benchi-kafka  | [2025-04-02 09:51:21,348] INFO [RaftManager id=1] Attempting durable transition to Unattached(epoch=0, votedKey=null, voters=[1], electionTimeoutMs=1117, highWatermark=Optional.empty) from null (org.apache.kafka.raft.QuorumState)
benchi-kafka  | [2025-04-02 09:51:21,363] INFO [RaftManager id=1] Completed transition to Unattached(epoch=0, votedKey=null, voters=[1], electionTimeoutMs=1117, highWatermark=Optional.empty) from null (org.apache.kafka.raft.QuorumState)
benchi-kafka  | [2025-04-02 09:51:21,365] INFO [RaftManager id=1] Attempting durable transition to CandidateState(localId=1, localDirectoryId=epliRbaKU89pZ1Z5nrbjHg,epoch=1, retries=1, voteStates={1=org.apache.kafka.raft.CandidateState$VoterState@5f0fd5a0}, highWatermark=Optional.empty, electionTimeoutMs=1811) from Unattached(epoch=0, votedKey=null, voters=[1], electionTimeoutMs=1117, highWatermark=Optional.empty) (org.apache.kafka.raft.QuorumState)
benchi-kafka  | [2025-04-02 09:51:21,367] INFO [RaftManager id=1] Completed transition to CandidateState(localId=1, localDirectoryId=epliRbaKU89pZ1Z5nrbjHg,epoch=1, retries=1, voteStates={1=org.apache.kafka.raft.CandidateState$VoterState@5f0fd5a0}, highWatermark=Optional.empty, electionTimeoutMs=1811) from Unattached(epoch=0, votedKey=null, voters=[1], electionTimeoutMs=1117, highWatermark=Optional.empty) (org.apache.kafka.raft.QuorumState)
benchi-kafka  | [2025-04-02 09:51:21,371] INFO [RaftManager id=1] Attempting durable transition to Leader(localReplicaKey=ReplicaKey(id=1, directoryId=Optional[epliRbaKU89pZ1Z5nrbjHg]), epoch=1, epochStartOffset=0, highWatermark=Optional.empty, voterStates={1=ReplicaState(replicaKey=ReplicaKey(id=1, directoryId=Optional.empty), endOffset=Optional.empty, lastFetchTimestamp=-1, lastCaughtUpTimestamp=-1, hasAcknowledgedLeader=true)}) from CandidateState(localId=1, localDirectoryId=epliRbaKU89pZ1Z5nrbjHg,epoch=1, retries=1, voteStates={1=org.apache.kafka.raft.CandidateState$VoterState@5f0fd5a0}, highWatermark=Optional.empty, electionTimeoutMs=1811) (org.apache.kafka.raft.QuorumState)
benchi-kafka  | [2025-04-02 09:51:21,373] INFO [RaftManager id=1] Completed transition to Leader(localReplicaKey=ReplicaKey(id=1, directoryId=Optional[epliRbaKU89pZ1Z5nrbjHg]), epoch=1, epochStartOffset=0, highWatermark=Optional.empty, voterStates={1=ReplicaState(replicaKey=ReplicaKey(id=1, directoryId=Optional.empty), endOffset=Optional.empty, lastFetchTimestamp=-1, lastCaughtUpTimestamp=-1, hasAcknowledgedLeader=true)}) from CandidateState(localId=1, localDirectoryId=epliRbaKU89pZ1Z5nrbjHg,epoch=1, retries=1, voteStates={1=org.apache.kafka.raft.CandidateState$VoterState@5f0fd5a0}, highWatermark=Optional.empty, electionTimeoutMs=1811) (org.apache.kafka.raft.QuorumState)
benchi-kafka  | [2025-04-02 09:51:21,385] INFO [kafka-1-raft-outbound-request-thread]: Starting (org.apache.kafka.raft.KafkaNetworkChannel$SendThread)
benchi-kafka  | [2025-04-02 09:51:21,386] INFO [kafka-1-raft-io-thread]: Starting (org.apache.kafka.raft.KafkaRaftClientDriver)
benchi-kafka  | [2025-04-02 09:51:21,392] INFO [MetadataLoader id=1] initializeNewPublishers: the loader is still catching up because we still don't know the high water mark yet. (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,393] INFO [ControllerServer id=1] Waiting for controller quorum voters future (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:51:21,393] INFO [ControllerServer id=1] Finished waiting for controller quorum voters future (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:51:21,408] INFO [RaftManager id=1] High watermark set to LogOffsetMetadata(offset=1, metadata=Optional[(segmentBaseOffset=0,relativePositionInSegment=91)]) for the first time for epoch 1 based on indexOfHw 0 and voters [ReplicaState(replicaKey=ReplicaKey(id=1, directoryId=Optional.empty), endOffset=Optional[LogOffsetMetadata(offset=1, metadata=Optional[(segmentBaseOffset=0,relativePositionInSegment=91)])], lastFetchTimestamp=-1, lastCaughtUpTimestamp=-1, hasAcknowledgedLeader=true)] (org.apache.kafka.raft.LeaderState)
benchi-kafka  | [2025-04-02 09:51:21,410] INFO [controller-1-ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:51:21,411] INFO [controller-1-ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:51:21,410] INFO [controller-1-ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:51:21,411] INFO [controller-1-ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:51:21,415] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,528] INFO [MetadataLoader id=1] initializeNewPublishers: The loader is still catching up because we have loaded up to offset -1, but the high water mark is 1 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,564] INFO [ControllerServer id=1] Waiting for the controller metadata publishers to be installed (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:51:21,565] INFO [ControllerServer id=1] Finished waiting for the controller metadata publishers to be installed (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:51:21,567] INFO [MetadataLoader id=1] initializeNewPublishers: The loader is still catching up because we have loaded up to offset -1, but the high water mark is 1 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,570] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Enabling request processing. (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:51:21,575] INFO [RaftManager id=1] Registered the listener org.apache.kafka.image.loader.MetadataLoader@1457998628 (org.apache.kafka.raft.KafkaRaftClient)
benchi-kafka  | [2025-04-02 09:51:21,576] INFO [RaftManager id=1] Registered the listener org.apache.kafka.controller.QuorumController$QuorumMetaLogListener@1725830685 (org.apache.kafka.raft.KafkaRaftClient)
benchi-kafka  | [2025-04-02 09:51:21,587] INFO Awaiting socket connections on 0.0.0.0:9093. (kafka.network.DataPlaneAcceptor)
benchi-kafka  | [2025-04-02 09:51:21,589] INFO [RaftManager id=1] Setting the next offset of org.apache.kafka.image.loader.MetadataLoader@1457998628 to 0 since there are no snapshots (org.apache.kafka.raft.KafkaRaftClient)
benchi-kafka  | [2025-04-02 09:51:21,595] INFO [RaftManager id=1] Setting the next offset of org.apache.kafka.controller.QuorumController$QuorumMetaLogListener@1725830685 to 0 since there are no snapshots (org.apache.kafka.raft.KafkaRaftClient)
benchi-kafka  | [2025-04-02 09:51:21,598] INFO [MetadataLoader id=1] maybePublishMetadata(LOG_DELTA): The loader is still catching up because we have not loaded a controller record as of offset 0 and high water mark is 1 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,627] INFO [controller-1-to-controller-registration-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,628] INFO [ControllerServer id=1] Waiting for all of the authorizer futures to be completed (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:51:21,628] INFO [ControllerRegistrationManager id=1 incarnation=XXflB6GsRQmlGiMW94EZtg] initialized channel manager. (kafka.server.ControllerRegistrationManager)
benchi-kafka  | [2025-04-02 09:51:21,629] INFO [ControllerServer id=1] Finished waiting for all of the authorizer futures to be completed (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:51:21,629] INFO [ControllerServer id=1] Waiting for all of the SocketServer Acceptors to be started (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:51:21,629] INFO [ControllerServer id=1] Finished waiting for all of the SocketServer Acceptors to be started (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:51:21,629] INFO [ControllerRegistrationManager id=1 incarnation=XXflB6GsRQmlGiMW94EZtg] maybeSendControllerRegistration: cannot register yet because the metadata.version is still 3.0-IV1, which does not support KIP-919 controller registration. (kafka.server.ControllerRegistrationManager)
benchi-kafka  | [2025-04-02 09:51:21,629] INFO [controller-1-to-controller-registration-channel-manager]: Recorded new KRaft controller, from now on will use node benchi-kafka:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,631] INFO [BrokerServer id=1] Transition from SHUTDOWN to STARTING (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,632] INFO [BrokerServer id=1] Starting broker (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,647] INFO [MetadataLoader id=1] maybePublishMetadata(LOG_DELTA): The loader finished catching up to the current high water mark of 5 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,649] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing SnapshotGenerator with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,650] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing KRaftMetadataCachePublisher with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,650] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing FeaturesPublisher with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,650] INFO [ControllerServer id=1] Loaded new metadata Features(metadataVersion=3.9-IV0, finalizedFeatures={metadata.version=21}, finalizedFeaturesEpoch=4). (org.apache.kafka.metadata.publisher.FeaturesPublisher)
benchi-kafka  | [2025-04-02 09:51:21,650] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ControllerRegistrationsPublisher with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,650] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ControllerRegistrationManager with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,650] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DynamicConfigPublisher controller id=1 with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,662] INFO [ControllerRegistrationManager id=1 incarnation=XXflB6GsRQmlGiMW94EZtg] sendControllerRegistration: attempting to send ControllerRegistrationRequestData(controllerId=1, incarnationId=XXflB6GsRQmlGiMW94EZtg, zkMigrationReady=false, listeners=[Listener(name='CONTROLLER', host='benchi-kafka', port=9093, securityProtocol=0)], features=[Feature(name='kraft.version', minSupportedVersion=0, maxSupportedVersion=1), Feature(name='metadata.version', minSupportedVersion=1, maxSupportedVersion=21)]) (kafka.server.ControllerRegistrationManager)
benchi-kafka  | [2025-04-02 09:51:21,662] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DynamicClientQuotaPublisher controller id=1 with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,665] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ScramPublisher controller id=1 with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,667] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing DelegationTokenPublisher controller id=1 with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,670] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing ControllerMetadataMetricsPublisher with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,671] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing AclPublisher controller id=1 with a snapshot at offset 4 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,675] INFO [broker-1-ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:51:21,678] INFO [broker-1-ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:51:21,678] INFO [broker-1-ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:51:21,678] INFO [broker-1-ThrottledChannelReaper-ControllerMutation]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:51:21,719] INFO [BrokerServer id=1] Waiting for controller quorum voters future (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,719] INFO [BrokerServer id=1] Finished waiting for controller quorum voters future (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,729] INFO [broker-1-to-controller-forwarding-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,729] INFO [broker-1-to-controller-forwarding-channel-manager]: Recorded new KRaft controller, from now on will use node benchi-kafka:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,732] INFO [client-metrics-reaper]: Starting (org.apache.kafka.server.util.timer.SystemTimerReaper$Reaper)
benchi-kafka  | [2025-04-02 09:51:21,773] INFO [ControllerRegistrationManager id=1 incarnation=XXflB6GsRQmlGiMW94EZtg] Our registration has been persisted to the metadata log. (kafka.server.ControllerRegistrationManager)
benchi-kafka  | [2025-04-02 09:51:21,778] INFO [ControllerRegistrationManager id=1 incarnation=XXflB6GsRQmlGiMW94EZtg] RegistrationResponseHandler: controller acknowledged ControllerRegistrationRequest. (kafka.server.ControllerRegistrationManager)
benchi-kafka  | [2025-04-02 09:51:21,791] INFO Updated connection-accept-rate max connection creation rate to 2147483647 (kafka.network.ConnectionQuotas)
benchi-kafka  | [2025-04-02 09:51:21,798] INFO [SocketServer listenerType=BROKER, nodeId=1] Created data-plane acceptor and processors for endpoint : ListenerName(PLAINTEXT) (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:51:21,800] INFO [broker-1-to-controller-alter-partition-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,800] INFO [broker-1-to-controller-alter-partition-channel-manager]: Recorded new KRaft controller, from now on will use node benchi-kafka:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,806] INFO [broker-1-to-controller-directory-assignments-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,806] INFO [broker-1-to-controller-directory-assignments-channel-manager]: Recorded new KRaft controller, from now on will use node benchi-kafka:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,811] INFO [ExpirationReaper-1-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,812] INFO [ExpirationReaper-1-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,813] INFO [ExpirationReaper-1-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,814] INFO [ExpirationReaper-1-ElectLeader]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,814] INFO [ExpirationReaper-1-RemoteFetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,819] INFO [ExpirationReaper-1-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,821] INFO [ExpirationReaper-1-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,831] INFO Unable to read the broker epoch in /tmp/kafka-logs. (kafka.log.LogManager)
benchi-kafka  | [2025-04-02 09:51:21,832] INFO [broker-1-to-controller-heartbeat-channel-manager]: Starting (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,833] INFO [broker-1-to-controller-heartbeat-channel-manager]: Recorded new KRaft controller, from now on will use node benchi-kafka:9093 (id: 1 rack: null) (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:51:21,835] INFO [BrokerLifecycleManager id=1] Incarnation aBWOXb89ScGrOx6-mnhw6Q of broker 1 in cluster 5L6g3nShT-eMCtK--X86sw is now STARTING. (kafka.server.BrokerLifecycleManager)
benchi-kafka  | [2025-04-02 09:51:21,837] INFO [ExpirationReaper-1-AlterAcls]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:51:21,849] INFO [BrokerServer id=1] Waiting for the broker metadata publishers to be installed (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,849] INFO [BrokerServer id=1] Finished waiting for the broker metadata publishers to be installed (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,849] INFO [BrokerServer id=1] Waiting for the controller to acknowledge that we are caught up (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,849] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing MetadataVersionPublisher(id=1) with a snapshot at offset 5 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,849] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing BrokerMetadataPublisher with a snapshot at offset 5 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,850] INFO [BrokerMetadataPublisher id=1] Publishing initial metadata at offset OffsetAndEpoch(offset=5, epoch=1) with metadata.version 3.9-IV0. (kafka.server.metadata.BrokerMetadataPublisher)
benchi-kafka  | [2025-04-02 09:51:21,852] INFO Loading logs from log dirs ArrayBuffer(/tmp/kafka-logs) (kafka.log.LogManager)
benchi-kafka  | [2025-04-02 09:51:21,856] INFO No logs found to be loaded in /tmp/kafka-logs (kafka.log.LogManager)
benchi-kafka  | [2025-04-02 09:51:21,862] INFO Loaded 0 logs in 9ms (kafka.log.LogManager)
benchi-kafka  | [2025-04-02 09:51:21,862] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
benchi-kafka  | [2025-04-02 09:51:21,863] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
benchi-kafka  | [2025-04-02 09:51:21,876] INFO [BrokerLifecycleManager id=1] Successfully registered broker 1 with broker epoch 6 (kafka.server.BrokerLifecycleManager)
benchi-kafka  | [2025-04-02 09:51:21,887] INFO [kafka-log-cleaner-thread-0]: Starting (kafka.log.LogCleaner$CleanerThread)
benchi-kafka  | [2025-04-02 09:51:21,889] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
benchi-kafka  | [2025-04-02 09:51:21,890] INFO [AddPartitionsToTxnSenderThread-1]: Starting (kafka.server.AddPartitionsToTxnManager)
benchi-kafka  | [2025-04-02 09:51:21,891] INFO [GroupCoordinator 1]: Starting up. (kafka.coordinator.group.GroupCoordinator)
benchi-kafka  | [2025-04-02 09:51:21,892] INFO [GroupCoordinator 1]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
benchi-kafka  | [2025-04-02 09:51:21,893] INFO [TransactionCoordinator id=1] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
benchi-kafka  | [2025-04-02 09:51:21,899] INFO [TxnMarkerSenderThread-1]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
benchi-kafka  | [2025-04-02 09:51:21,900] INFO [TransactionCoordinator id=1] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
benchi-kafka  | [2025-04-02 09:51:21,902] INFO [MetadataLoader id=1] InitializeNewPublishers: initializing BrokerRegistrationTracker(id=1) with a snapshot at offset 5 (org.apache.kafka.image.loader.MetadataLoader)
benchi-kafka  | [2025-04-02 09:51:21,913] INFO [BrokerLifecycleManager id=1] The broker has caught up. Transitioning from STARTING to RECOVERY. (kafka.server.BrokerLifecycleManager)
benchi-kafka  | [2025-04-02 09:51:21,915] INFO [BrokerServer id=1] Finished waiting for the controller to acknowledge that we are caught up (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,915] INFO [BrokerServer id=1] Waiting for the initial broker metadata update to be published (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,915] INFO [BrokerServer id=1] Finished waiting for the initial broker metadata update to be published (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,917] INFO KafkaConfig values: 
benchi-kafka  | 	advertised.listeners = PLAINTEXT://benchi-kafka:9092,CONTROLLER://benchi-kafka:9093
benchi-kafka  | 	alter.config.policy.class.name = null
benchi-kafka  | 	alter.log.dirs.replication.quota.window.num = 11
benchi-kafka  | 	alter.log.dirs.replication.quota.window.size.seconds = 1
benchi-kafka  | 	authorizer.class.name = 
benchi-kafka  | 	auto.create.topics.enable = true
benchi-kafka  | 	auto.include.jmx.reporter = true
benchi-kafka  | 	auto.leader.rebalance.enable = true
benchi-kafka  | 	background.threads = 10
benchi-kafka  | 	broker.heartbeat.interval.ms = 2000
benchi-kafka  | 	broker.id = 1
benchi-kafka  | 	broker.id.generation.enable = true
benchi-kafka  | 	broker.rack = null
benchi-kafka  | 	broker.session.timeout.ms = 9000
benchi-kafka  | 	client.quota.callback.class = null
benchi-kafka  | 	compression.gzip.level = -1
benchi-kafka  | 	compression.lz4.level = 9
benchi-kafka  | 	compression.type = producer
benchi-kafka  | 	compression.zstd.level = 3
benchi-kafka  | 	connection.failed.authentication.delay.ms = 100
benchi-kafka  | 	connections.max.idle.ms = 600000
benchi-kafka  | 	connections.max.reauth.ms = 0
benchi-kafka  | 	control.plane.listener.name = null
benchi-kafka  | 	controlled.shutdown.enable = true
benchi-kafka  | 	controlled.shutdown.max.retries = 3
benchi-kafka  | 	controlled.shutdown.retry.backoff.ms = 5000
benchi-kafka  | 	controller.listener.names = CONTROLLER
benchi-kafka  | 	controller.quorum.append.linger.ms = 25
benchi-kafka  | 	controller.quorum.bootstrap.servers = []
benchi-kafka  | 	controller.quorum.election.backoff.max.ms = 1000
benchi-kafka  | 	controller.quorum.election.timeout.ms = 1000
benchi-kafka  | 	controller.quorum.fetch.timeout.ms = 2000
benchi-kafka  | 	controller.quorum.request.timeout.ms = 2000
benchi-kafka  | 	controller.quorum.retry.backoff.ms = 20
benchi-kafka  | 	controller.quorum.voters = [1@benchi-kafka:9093]
benchi-kafka  | 	controller.quota.window.num = 11
benchi-kafka  | 	controller.quota.window.size.seconds = 1
benchi-kafka  | 	controller.socket.timeout.ms = 30000
benchi-kafka  | 	create.topic.policy.class.name = null
benchi-kafka  | 	default.replication.factor = 1
benchi-kafka  | 	delegation.token.expiry.check.interval.ms = 3600000
benchi-kafka  | 	delegation.token.expiry.time.ms = 86400000
benchi-kafka  | 	delegation.token.master.key = null
benchi-kafka  | 	delegation.token.max.lifetime.ms = 604800000
benchi-kafka  | 	delegation.token.secret.key = null
benchi-kafka  | 	delete.records.purgatory.purge.interval.requests = 1
benchi-kafka  | 	delete.topic.enable = true
benchi-kafka  | 	early.start.listeners = null
benchi-kafka  | 	eligible.leader.replicas.enable = false
benchi-kafka  | 	fetch.max.bytes = 57671680
benchi-kafka  | 	fetch.purgatory.purge.interval.requests = 1000
benchi-kafka  | 	group.consumer.assignors = [org.apache.kafka.coordinator.group.assignor.UniformAssignor, org.apache.kafka.coordinator.group.assignor.RangeAssignor]
benchi-kafka  | 	group.consumer.heartbeat.interval.ms = 5000
benchi-kafka  | 	group.consumer.max.heartbeat.interval.ms = 15000
benchi-kafka  | 	group.consumer.max.session.timeout.ms = 60000
benchi-kafka  | 	group.consumer.max.size = 2147483647
benchi-kafka  | 	group.consumer.migration.policy = disabled
benchi-kafka  | 	group.consumer.min.heartbeat.interval.ms = 5000
benchi-kafka  | 	group.consumer.min.session.timeout.ms = 45000
benchi-kafka  | 	group.consumer.session.timeout.ms = 45000
benchi-kafka  | 	group.coordinator.append.linger.ms = 10
benchi-kafka  | 	group.coordinator.new.enable = false
benchi-kafka  | 	group.coordinator.rebalance.protocols = [classic]
benchi-kafka  | 	group.coordinator.threads = 1
benchi-kafka  | 	group.initial.rebalance.delay.ms = 3000
benchi-kafka  | 	group.max.session.timeout.ms = 1800000
benchi-kafka  | 	group.max.size = 2147483647
benchi-kafka  | 	group.min.session.timeout.ms = 6000
benchi-kafka  | 	group.share.delivery.count.limit = 5
benchi-kafka  | 	group.share.enable = false
benchi-kafka  | 	group.share.heartbeat.interval.ms = 5000
benchi-kafka  | 	group.share.max.groups = 10
benchi-kafka  | 	group.share.max.heartbeat.interval.ms = 15000
benchi-kafka  | 	group.share.max.record.lock.duration.ms = 60000
benchi-kafka  | 	group.share.max.session.timeout.ms = 60000
benchi-kafka  | 	group.share.max.size = 200
benchi-kafka  | 	group.share.min.heartbeat.interval.ms = 5000
benchi-kafka  | 	group.share.min.record.lock.duration.ms = 15000
benchi-kafka  | 	group.share.min.session.timeout.ms = 45000
benchi-kafka  | 	group.share.partition.max.record.locks = 200
benchi-kafka  | 	group.share.record.lock.duration.ms = 30000
benchi-kafka  | 	group.share.session.timeout.ms = 45000
benchi-kafka  | 	initial.broker.registration.timeout.ms = 60000
benchi-kafka  | 	inter.broker.listener.name = PLAINTEXT
benchi-kafka  | 	inter.broker.protocol.version = 3.9-IV0
benchi-kafka  | 	kafka.metrics.polling.interval.secs = 10
benchi-kafka  | 	kafka.metrics.reporters = []
benchi-kafka  | 	leader.imbalance.check.interval.seconds = 300
benchi-kafka  | 	leader.imbalance.per.broker.percentage = 10
benchi-kafka  | 	listener.security.protocol.map = CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
benchi-kafka  | 	listeners = PLAINTEXT://:9092,CONTROLLER://:9093
benchi-kafka  | 	log.cleaner.backoff.ms = 15000
benchi-kafka  | 	log.cleaner.dedupe.buffer.size = 134217728
benchi-kafka  | 	log.cleaner.delete.retention.ms = 86400000
benchi-kafka  | 	log.cleaner.enable = true
benchi-kafka  | 	log.cleaner.io.buffer.load.factor = 0.9
benchi-kafka  | 	log.cleaner.io.buffer.size = 524288
benchi-kafka  | 	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
benchi-kafka  | 	log.cleaner.max.compaction.lag.ms = 9223372036854775807
benchi-kafka  | 	log.cleaner.min.cleanable.ratio = 0.5
benchi-kafka  | 	log.cleaner.min.compaction.lag.ms = 0
benchi-kafka  | 	log.cleaner.threads = 1
benchi-kafka  | 	log.cleanup.policy = [delete]
benchi-kafka  | 	log.dir = /tmp/kafka-logs
benchi-kafka  | 	log.dir.failure.timeout.ms = 30000
benchi-kafka  | 	log.dirs = null
benchi-kafka  | 	log.flush.interval.messages = 9223372036854775807
benchi-kafka  | 	log.flush.interval.ms = null
benchi-kafka  | 	log.flush.offset.checkpoint.interval.ms = 60000
benchi-kafka  | 	log.flush.scheduler.interval.ms = 9223372036854775807
benchi-kafka  | 	log.flush.start.offset.checkpoint.interval.ms = 60000
benchi-kafka  | 	log.index.interval.bytes = 4096
benchi-kafka  | 	log.index.size.max.bytes = 10485760
benchi-kafka  | 	log.initial.task.delay.ms = 30000
benchi-kafka  | 	log.local.retention.bytes = -2
benchi-kafka  | 	log.local.retention.ms = -2
benchi-kafka  | 	log.message.downconversion.enable = true
benchi-kafka  | 	log.message.format.version = 3.0-IV1
benchi-kafka  | 	log.message.timestamp.after.max.ms = 9223372036854775807
benchi-kafka  | 	log.message.timestamp.before.max.ms = 9223372036854775807
benchi-kafka  | 	log.message.timestamp.difference.max.ms = 9223372036854775807
benchi-kafka  | 	log.message.timestamp.type = CreateTime
benchi-kafka  | 	log.preallocate = false
benchi-kafka  | 	log.retention.bytes = -1
benchi-kafka  | 	log.retention.check.interval.ms = 300000
benchi-kafka  | 	log.retention.hours = 168
benchi-kafka  | 	log.retention.minutes = null
benchi-kafka  | 	log.retention.ms = null
benchi-kafka  | 	log.roll.hours = 168
benchi-kafka  | 	log.roll.jitter.hours = 0
benchi-kafka  | 	log.roll.jitter.ms = null
benchi-kafka  | 	log.roll.ms = null
benchi-kafka  | 	log.segment.bytes = 1073741824
benchi-kafka  | 	log.segment.delete.delay.ms = 60000
benchi-kafka  | 	max.connection.creation.rate = 2147483647
benchi-kafka  | 	max.connections = 2147483647
benchi-kafka  | 	max.connections.per.ip = 2147483647
benchi-kafka  | 	max.connections.per.ip.overrides = 
benchi-kafka  | 	max.incremental.fetch.session.cache.slots = 1000
benchi-kafka  | 	max.request.partition.size.limit = 2000
benchi-kafka  | 	message.max.bytes = 1048588
benchi-kafka  | 	metadata.log.dir = null
benchi-kafka  | 	metadata.log.max.record.bytes.between.snapshots = 20971520
benchi-kafka  | 	metadata.log.max.snapshot.interval.ms = 3600000
benchi-kafka  | 	metadata.log.segment.bytes = 1073741824
benchi-kafka  | 	metadata.log.segment.min.bytes = 8388608
benchi-kafka  | 	metadata.log.segment.ms = 604800000
benchi-kafka  | 	metadata.max.idle.interval.ms = 500
benchi-kafka  | 	metadata.max.retention.bytes = 104857600
benchi-kafka  | 	metadata.max.retention.ms = 604800000
benchi-kafka  | 	metric.reporters = []
benchi-kafka  | 	metrics.num.samples = 2
benchi-kafka  | 	metrics.recording.level = INFO
benchi-kafka  | 	metrics.sample.window.ms = 30000
benchi-kafka  | 	min.insync.replicas = 1
benchi-kafka  | 	node.id = 1
benchi-kafka  | 	num.io.threads = 8
benchi-kafka  | 	num.network.threads = 3
benchi-kafka  | 	num.partitions = 1
benchi-kafka  | 	num.recovery.threads.per.data.dir = 1
benchi-kafka  | 	num.replica.alter.log.dirs.threads = null
benchi-kafka  | 	num.replica.fetchers = 1
benchi-kafka  | 	offset.metadata.max.bytes = 4096
benchi-kafka  | 	offsets.commit.required.acks = -1
benchi-kafka  | 	offsets.commit.timeout.ms = 5000
benchi-kafka  | 	offsets.load.buffer.size = 5242880
benchi-kafka  | 	offsets.retention.check.interval.ms = 600000
benchi-kafka  | 	offsets.retention.minutes = 10080
benchi-kafka  | 	offsets.topic.compression.codec = 0
benchi-kafka  | 	offsets.topic.num.partitions = 50
benchi-kafka  | 	offsets.topic.replication.factor = 1
benchi-kafka  | 	offsets.topic.segment.bytes = 104857600
benchi-kafka  | 	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
benchi-kafka  | 	password.encoder.iterations = 4096
benchi-kafka  | 	password.encoder.key.length = 128
benchi-kafka  | 	password.encoder.keyfactory.algorithm = null
benchi-kafka  | 	password.encoder.old.secret = null
benchi-kafka  | 	password.encoder.secret = null
benchi-kafka  | 	principal.builder.class = class org.apache.kafka.common.security.authenticator.DefaultKafkaPrincipalBuilder
benchi-kafka  | 	process.roles = [broker, controller]
benchi-kafka  | 	producer.id.expiration.check.interval.ms = 600000
benchi-kafka  | 	producer.id.expiration.ms = 86400000
benchi-kafka  | 	producer.purgatory.purge.interval.requests = 1000
benchi-kafka  | 	queued.max.request.bytes = -1
benchi-kafka  | 	queued.max.requests = 500
benchi-kafka  | 	quota.window.num = 11
benchi-kafka  | 	quota.window.size.seconds = 1
benchi-kafka  | 	remote.fetch.max.wait.ms = 500
benchi-kafka  | 	remote.log.index.file.cache.total.size.bytes = 1073741824
benchi-kafka  | 	remote.log.manager.copier.thread.pool.size = -1
benchi-kafka  | 	remote.log.manager.copy.max.bytes.per.second = 9223372036854775807
benchi-kafka  | 	remote.log.manager.copy.quota.window.num = 11
benchi-kafka  | 	remote.log.manager.copy.quota.window.size.seconds = 1
benchi-kafka  | 	remote.log.manager.expiration.thread.pool.size = -1
benchi-kafka  | 	remote.log.manager.fetch.max.bytes.per.second = 9223372036854775807
benchi-kafka  | 	remote.log.manager.fetch.quota.window.num = 11
benchi-kafka  | 	remote.log.manager.fetch.quota.window.size.seconds = 1
benchi-kafka  | 	remote.log.manager.task.interval.ms = 30000
benchi-kafka  | 	remote.log.manager.task.retry.backoff.max.ms = 30000
benchi-kafka  | 	remote.log.manager.task.retry.backoff.ms = 500
benchi-kafka  | 	remote.log.manager.task.retry.jitter = 0.2
benchi-kafka  | 	remote.log.manager.thread.pool.size = 10
benchi-kafka  | 	remote.log.metadata.custom.metadata.max.bytes = 128
benchi-kafka  | 	remote.log.metadata.manager.class.name = org.apache.kafka.server.log.remote.metadata.storage.TopicBasedRemoteLogMetadataManager
benchi-kafka  | 	remote.log.metadata.manager.class.path = null
benchi-kafka  | 	remote.log.metadata.manager.impl.prefix = rlmm.config.
benchi-kafka  | 	remote.log.metadata.manager.listener.name = null
benchi-kafka  | 	remote.log.reader.max.pending.tasks = 100
benchi-kafka  | 	remote.log.reader.threads = 10
benchi-kafka  | 	remote.log.storage.manager.class.name = null
benchi-kafka  | 	remote.log.storage.manager.class.path = null
benchi-kafka  | 	remote.log.storage.manager.impl.prefix = rsm.config.
benchi-kafka  | 	remote.log.storage.system.enable = false
benchi-kafka  | 	replica.fetch.backoff.ms = 1000
benchi-kafka  | 	replica.fetch.max.bytes = 1048576
benchi-kafka  | 	replica.fetch.min.bytes = 1
benchi-kafka  | 	replica.fetch.response.max.bytes = 10485760
benchi-kafka  | 	replica.fetch.wait.max.ms = 500
benchi-kafka  | 	replica.high.watermark.checkpoint.interval.ms = 5000
benchi-kafka  | 	replica.lag.time.max.ms = 30000
benchi-kafka  | 	replica.selector.class = null
benchi-kafka  | 	replica.socket.receive.buffer.bytes = 65536
benchi-kafka  | 	replica.socket.timeout.ms = 30000
benchi-kafka  | 	replication.quota.window.num = 11
benchi-kafka  | 	replication.quota.window.size.seconds = 1
benchi-kafka  | 	request.timeout.ms = 30000
benchi-kafka  | 	reserved.broker.max.id = 1000
benchi-kafka  | 	sasl.client.callback.handler.class = null
benchi-kafka  | 	sasl.enabled.mechanisms = [GSSAPI]
benchi-kafka  | 	sasl.jaas.config = null
benchi-kafka  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
benchi-kafka  | 	sasl.kerberos.min.time.before.relogin = 60000
benchi-kafka  | 	sasl.kerberos.principal.to.local.rules = [DEFAULT]
benchi-kafka  | 	sasl.kerberos.service.name = null
benchi-kafka  | 	sasl.kerberos.ticket.renew.jitter = 0.05
benchi-kafka  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
benchi-kafka  | 	sasl.login.callback.handler.class = null
benchi-kafka  | 	sasl.login.class = null
benchi-kafka  | 	sasl.login.connect.timeout.ms = null
benchi-kafka  | 	sasl.login.read.timeout.ms = null
benchi-kafka  | 	sasl.login.refresh.buffer.seconds = 300
benchi-kafka  | 	sasl.login.refresh.min.period.seconds = 60
benchi-kafka  | 	sasl.login.refresh.window.factor = 0.8
benchi-kafka  | 	sasl.login.refresh.window.jitter = 0.05
benchi-kafka  | 	sasl.login.retry.backoff.max.ms = 10000
benchi-kafka  | 	sasl.login.retry.backoff.ms = 100
benchi-kafka  | 	sasl.mechanism.controller.protocol = GSSAPI
benchi-kafka  | 	sasl.mechanism.inter.broker.protocol = GSSAPI
benchi-kafka  | 	sasl.oauthbearer.clock.skew.seconds = 30
benchi-kafka  | 	sasl.oauthbearer.expected.audience = null
benchi-kafka  | 	sasl.oauthbearer.expected.issuer = null
benchi-kafka  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
benchi-kafka  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
benchi-kafka  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
benchi-kafka  | 	sasl.oauthbearer.jwks.endpoint.url = null
benchi-kafka  | 	sasl.oauthbearer.scope.claim.name = scope
benchi-kafka  | 	sasl.oauthbearer.sub.claim.name = sub
benchi-kafka  | 	sasl.oauthbearer.token.endpoint.url = null
benchi-kafka  | 	sasl.server.callback.handler.class = null
benchi-kafka  | 	sasl.server.max.receive.size = 524288
benchi-kafka  | 	security.inter.broker.protocol = PLAINTEXT
benchi-kafka  | 	security.providers = null
benchi-kafka  | 	server.max.startup.time.ms = 9223372036854775807
benchi-kafka  | 	socket.connection.setup.timeout.max.ms = 30000
benchi-kafka  | 	socket.connection.setup.timeout.ms = 10000
benchi-kafka  | 	socket.listen.backlog.size = 50
benchi-kafka  | 	socket.receive.buffer.bytes = 102400
benchi-kafka  | 	socket.request.max.bytes = 104857600
benchi-kafka  | 	socket.send.buffer.bytes = 102400
benchi-kafka  | 	ssl.allow.dn.changes = false
benchi-kafka  | 	ssl.allow.san.changes = false
benchi-kafka  | 	ssl.cipher.suites = []
benchi-kafka  | 	ssl.client.auth = none
benchi-kafka  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
benchi-kafka  | 	ssl.endpoint.identification.algorithm = https
benchi-kafka  | 	ssl.engine.factory.class = null
benchi-kafka  | 	ssl.key.password = null
benchi-kafka  | 	ssl.keymanager.algorithm = SunX509
benchi-kafka  | 	ssl.keystore.certificate.chain = null
benchi-kafka  | 	ssl.keystore.key = null
benchi-kafka  | 	ssl.keystore.location = null
benchi-kafka  | 	ssl.keystore.password = null
benchi-kafka  | 	ssl.keystore.type = JKS
benchi-kafka  | 	ssl.principal.mapping.rules = DEFAULT
benchi-kafka  | 	ssl.protocol = TLSv1.3
benchi-kafka  | 	ssl.provider = null
benchi-kafka  | 	ssl.secure.random.implementation = null
benchi-kafka  | 	ssl.trustmanager.algorithm = PKIX
benchi-kafka  | 	ssl.truststore.certificates = null
benchi-kafka  | 	ssl.truststore.location = null
benchi-kafka  | 	ssl.truststore.password = null
benchi-kafka  | 	ssl.truststore.type = JKS
benchi-kafka  | 	telemetry.max.bytes = 1048576
benchi-kafka  | 	transaction.abort.timed.out.transaction.cleanup.interval.ms = 10000
benchi-kafka  | 	transaction.max.timeout.ms = 900000
benchi-kafka  | 	transaction.partition.verification.enable = true
benchi-kafka  | 	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
benchi-kafka  | 	transaction.state.log.load.buffer.size = 5242880
benchi-kafka  | 	transaction.state.log.min.isr = 2
benchi-kafka  | 	transaction.state.log.num.partitions = 50
benchi-kafka  | 	transaction.state.log.replication.factor = 3
benchi-kafka  | 	transaction.state.log.segment.bytes = 104857600
benchi-kafka  | 	transactional.id.expiration.ms = 604800000
benchi-kafka  | 	unclean.leader.election.enable = false
benchi-kafka  | 	unclean.leader.election.interval.ms = 300000
benchi-kafka  | 	unstable.api.versions.enable = false
benchi-kafka  | 	unstable.feature.versions.enable = false
benchi-kafka  | 	zookeeper.clientCnxnSocket = null
benchi-kafka  | 	zookeeper.connect = null
benchi-kafka  | 	zookeeper.connection.timeout.ms = null
benchi-kafka  | 	zookeeper.max.in.flight.requests = 10
benchi-kafka  | 	zookeeper.metadata.migration.enable = false
benchi-kafka  | 	zookeeper.metadata.migration.min.batch.size = 200
benchi-kafka  | 	zookeeper.session.timeout.ms = 18000
benchi-kafka  | 	zookeeper.set.acl = false
benchi-kafka  | 	zookeeper.ssl.cipher.suites = null
benchi-kafka  | 	zookeeper.ssl.client.enable = false
benchi-kafka  | 	zookeeper.ssl.crl.enable = false
benchi-kafka  | 	zookeeper.ssl.enabled.protocols = null
benchi-kafka  | 	zookeeper.ssl.endpoint.identification.algorithm = HTTPS
benchi-kafka  | 	zookeeper.ssl.keystore.location = null
benchi-kafka  | 	zookeeper.ssl.keystore.password = null
benchi-kafka  | 	zookeeper.ssl.keystore.type = null
benchi-kafka  | 	zookeeper.ssl.ocsp.enable = false
benchi-kafka  | 	zookeeper.ssl.protocol = TLSv1.2
benchi-kafka  | 	zookeeper.ssl.truststore.location = null
benchi-kafka  | 	zookeeper.ssl.truststore.password = null
benchi-kafka  | 	zookeeper.ssl.truststore.type = null
benchi-kafka  |  (kafka.server.KafkaConfig)
benchi-kafka  | [2025-04-02 09:51:21,923] INFO [BrokerServer id=1] Waiting for the broker to be unfenced (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,963] INFO [BrokerLifecycleManager id=1] The broker has been unfenced. Transitioning from RECOVERY to RUNNING. (kafka.server.BrokerLifecycleManager)
benchi-kafka  | [2025-04-02 09:51:21,963] INFO [BrokerServer id=1] Finished waiting for the broker to be unfenced (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,964] INFO authorizerStart completed for endpoint PLAINTEXT. Endpoint is now READY. (org.apache.kafka.server.network.EndpointReadyFutures)
benchi-kafka  | [2025-04-02 09:51:21,964] INFO [SocketServer listenerType=BROKER, nodeId=1] Enabling request processing. (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:51:21,965] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.DataPlaneAcceptor)
benchi-kafka  | [2025-04-02 09:51:21,965] INFO [BrokerServer id=1] Waiting for all of the authorizer futures to be completed (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,965] INFO [BrokerServer id=1] Finished waiting for all of the authorizer futures to be completed (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,965] INFO [BrokerServer id=1] Waiting for all of the SocketServer Acceptors to be started (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,965] INFO [BrokerServer id=1] Finished waiting for all of the SocketServer Acceptors to be started (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,965] INFO [BrokerServer id=1] Transition from STARTING to STARTED (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:51:21,966] INFO Kafka version: 3.9.0 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka  | [2025-04-02 09:51:21,966] INFO Kafka commitId: a60e31147e6b01ee (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka  | [2025-04-02 09:51:21,966] INFO Kafka startTimeMs: 1743587481966 (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka  | [2025-04-02 09:51:21,972] INFO [KafkaRaftServer nodeId=1] Kafka Server started (kafka.server.KafkaRaftServer)
benchi-kafka  | [2025-04-02 09:51:44,581] INFO Sent auto-creation request for Set(postgres.public.employees) to the active controller. (kafka.server.DefaultAutoTopicCreationManager)
benchi-kafka  | [2025-04-02 09:51:44,625] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(postgres.public.employees-0) (kafka.server.ReplicaFetcherManager)
benchi-kafka  | [2025-04-02 09:51:44,635] INFO [LogLoader partition=postgres.public.employees-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.UnifiedLog$)
benchi-kafka  | [2025-04-02 09:51:44,637] INFO Created log for partition postgres.public.employees-0 in /tmp/kafka-logs/postgres.public.employees-0 with properties {} (kafka.log.LogManager)
benchi-kafka  | [2025-04-02 09:51:44,638] INFO [Partition postgres.public.employees-0 broker=1] No checkpointed highwatermark is found for partition postgres.public.employees-0 (kafka.cluster.Partition)
benchi-kafka  | [2025-04-02 09:51:44,638] INFO [Partition postgres.public.employees-0 broker=1] Log loaded for partition postgres.public.employees-0 with initial high watermark 0 (kafka.cluster.Partition)
benchi-kafka  | [2025-04-02 09:52:10,095] INFO [LocalLog partition=postgres.public.employees-0, dir=/tmp/kafka-logs] Rolled new log segment at offset 1524784 in 5 ms. (kafka.log.LocalLog)
benchi-kafka  | [2025-04-02 09:52:10,097] INFO [ProducerStateManager partition=postgres.public.employees-0] Wrote producer snapshot at offset 1524784 with 1 producer ids in 1 ms. (org.apache.kafka.storage.internals.log.ProducerStateManager)
benchi-kafka  | [2025-04-02 09:52:34,629] INFO [LocalLog partition=postgres.public.employees-0, dir=/tmp/kafka-logs] Rolled new log segment at offset 3038444 in 1 ms. (kafka.log.LocalLog)
benchi-kafka  | [2025-04-02 09:52:34,630] INFO [ProducerStateManager partition=postgres.public.employees-0] Wrote producer snapshot at offset 3038444 with 1 producer ids in 0 ms. (org.apache.kafka.storage.internals.log.ProducerStateManager)
benchi-kafka  | [2025-04-02 09:52:59,264] INFO [LocalLog partition=postgres.public.employees-0, dir=/tmp/kafka-logs] Rolled new log segment at offset 4552805 in 1 ms. (kafka.log.LocalLog)
benchi-kafka  | [2025-04-02 09:52:59,265] INFO [ProducerStateManager partition=postgres.public.employees-0] Wrote producer snapshot at offset 4552805 with 1 producer ids in 0 ms. (org.apache.kafka.storage.internals.log.ProducerStateManager)
benchi-kafka  | [2025-04-02 09:53:24,048] INFO [LocalLog partition=postgres.public.employees-0, dir=/tmp/kafka-logs] Rolled new log segment at offset 6066837 in 1 ms. (kafka.log.LocalLog)
benchi-kafka  | [2025-04-02 09:53:24,049] INFO [ProducerStateManager partition=postgres.public.employees-0] Wrote producer snapshot at offset 6066837 with 1 producer ids in 0 ms. (org.apache.kafka.storage.internals.log.ProducerStateManager)
benchi-kafka  | [2025-04-02 09:53:45,380] INFO Terminating process due to signal SIGTERM (org.apache.kafka.common.utils.LoggingSignalHandler)
benchi-kafka  | [2025-04-02 09:53:45,391] INFO [BrokerServer id=1] Transition from STARTED to SHUTTING_DOWN (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:53:45,392] INFO [BrokerServer id=1] shutting down (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:53:45,394] INFO [BrokerLifecycleManager id=1] Beginning controlled shutdown. (kafka.server.BrokerLifecycleManager)
benchi-kafka  | [2025-04-02 09:53:45,437] INFO [BrokerLifecycleManager id=1] The broker is in PENDING_CONTROLLED_SHUTDOWN state, still waiting for the active controller. (kafka.server.BrokerLifecycleManager)
benchi-kafka  | [2025-04-02 09:53:45,443] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(postgres.public.employees-0) (kafka.server.ReplicaFetcherManager)
benchi-kafka  | [2025-04-02 09:53:45,443] INFO [ReplicaAlterLogDirsManager on broker 1] Removed fetcher for partitions Set(postgres.public.employees-0) (kafka.server.ReplicaAlterLogDirsManager)
benchi-kafka  | [2025-04-02 09:53:45,525] INFO [BrokerLifecycleManager id=1] The controller has asked us to exit controlled shutdown. (kafka.server.BrokerLifecycleManager)
benchi-kafka  | [2025-04-02 09:53:45,525] INFO [BrokerLifecycleManager id=1] beginShutdown: shutting down event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,526] INFO [BrokerLifecycleManager id=1] Transitioning from PENDING_CONTROLLED_SHUTDOWN to SHUTTING_DOWN. (kafka.server.BrokerLifecycleManager)
benchi-kafka  | [2025-04-02 09:53:45,526] INFO [broker-1-to-controller-heartbeat-channel-manager]: Shutting down (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,526] INFO [broker-1-to-controller-heartbeat-channel-manager]: Stopped (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,527] INFO [broker-1-to-controller-heartbeat-channel-manager]: Shutdown completed (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,528] INFO [SocketServer listenerType=BROKER, nodeId=1] Stopping socket server request processors (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:53:45,543] INFO Node to controller channel manager for heartbeat shutdown (kafka.server.NodeToControllerChannelManagerImpl)
benchi-kafka  | [2025-04-02 09:53:45,563] INFO [SocketServer listenerType=BROKER, nodeId=1] Stopped socket server request processors (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:53:45,564] INFO [data-plane Kafka Request Handler on Broker 1], shutting down (kafka.server.KafkaRequestHandlerPool)
benchi-kafka  | [2025-04-02 09:53:45,566] INFO [data-plane Kafka Request Handler on Broker 1], shut down completely (kafka.server.KafkaRequestHandlerPool)
benchi-kafka  | [2025-04-02 09:53:45,566] INFO [ExpirationReaper-1-AlterAcls]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,567] INFO [ExpirationReaper-1-AlterAcls]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,568] INFO [ExpirationReaper-1-AlterAcls]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,569] INFO [KafkaApi-1] Shutdown complete. (kafka.server.KafkaApis)
benchi-kafka  | [2025-04-02 09:53:45,574] INFO [TransactionCoordinator id=1] Shutting down. (kafka.coordinator.transaction.TransactionCoordinator)
benchi-kafka  | [2025-04-02 09:53:45,574] INFO [Transaction State Manager 1]: Shutdown complete (kafka.coordinator.transaction.TransactionStateManager)
benchi-kafka  | [2025-04-02 09:53:45,575] INFO [TxnMarkerSenderThread-1]: Shutting down (kafka.coordinator.transaction.TransactionMarkerChannelManager)
benchi-kafka  | [2025-04-02 09:53:45,575] INFO [TxnMarkerSenderThread-1]: Stopped (kafka.coordinator.transaction.TransactionMarkerChannelManager)
benchi-kafka  | [2025-04-02 09:53:45,575] INFO [TxnMarkerSenderThread-1]: Shutdown completed (kafka.coordinator.transaction.TransactionMarkerChannelManager)
benchi-kafka  | [2025-04-02 09:53:45,577] INFO [TransactionCoordinator id=1] Shutdown complete. (kafka.coordinator.transaction.TransactionCoordinator)
benchi-kafka  | [2025-04-02 09:53:45,578] INFO [GroupCoordinator 1]: Shutting down. (kafka.coordinator.group.GroupCoordinator)
benchi-kafka  | [2025-04-02 09:53:45,579] INFO [ExpirationReaper-1-Heartbeat]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,580] INFO [ExpirationReaper-1-Heartbeat]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,580] INFO [ExpirationReaper-1-Heartbeat]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,581] INFO [ExpirationReaper-1-Rebalance]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,581] INFO [ExpirationReaper-1-Rebalance]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,581] INFO [ExpirationReaper-1-Rebalance]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,582] INFO [GroupCoordinator 1]: Shutdown complete. (kafka.coordinator.group.GroupCoordinator)
benchi-kafka  | [2025-04-02 09:53:45,582] INFO [AssignmentsManager id=1]KafkaEventQueue#close: shutting down event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,582] INFO [AssignmentsManager id=1] shutting down. (org.apache.kafka.server.AssignmentsManager)
benchi-kafka  | [2025-04-02 09:53:45,582] INFO [broker-1-to-controller-directory-assignments-channel-manager]: Shutting down (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,582] INFO [broker-1-to-controller-directory-assignments-channel-manager]: Stopped (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,582] INFO [broker-1-to-controller-directory-assignments-channel-manager]: Shutdown completed (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,582] INFO Node to controller channel manager for directory-assignments shutdown (kafka.server.NodeToControllerChannelManagerImpl)
benchi-kafka  | [2025-04-02 09:53:45,582] INFO [AssignmentsManager id=1]closed event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,583] INFO [ReplicaManager broker=1] Shutting down (kafka.server.ReplicaManager)
benchi-kafka  | [2025-04-02 09:53:45,599] INFO [LogDirFailureHandler]: Shutting down (kafka.server.ReplicaManager$LogDirFailureHandler)
benchi-kafka  | [2025-04-02 09:53:45,599] INFO [LogDirFailureHandler]: Stopped (kafka.server.ReplicaManager$LogDirFailureHandler)
benchi-kafka  | [2025-04-02 09:53:45,599] INFO [LogDirFailureHandler]: Shutdown completed (kafka.server.ReplicaManager$LogDirFailureHandler)
benchi-kafka  | [2025-04-02 09:53:45,600] INFO [ReplicaFetcherManager on broker 1] shutting down (kafka.server.ReplicaFetcherManager)
benchi-kafka  | [2025-04-02 09:53:45,600] INFO [ReplicaFetcherManager on broker 1] shutdown completed (kafka.server.ReplicaFetcherManager)
benchi-kafka  | [2025-04-02 09:53:45,600] INFO [ReplicaAlterLogDirsManager on broker 1] shutting down (kafka.server.ReplicaAlterLogDirsManager)
benchi-kafka  | [2025-04-02 09:53:45,600] INFO [ReplicaAlterLogDirsManager on broker 1] shutdown completed (kafka.server.ReplicaAlterLogDirsManager)
benchi-kafka  | [2025-04-02 09:53:45,600] INFO [ExpirationReaper-1-Fetch]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,601] INFO [ExpirationReaper-1-Fetch]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,601] INFO [ExpirationReaper-1-Fetch]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,601] INFO [ExpirationReaper-1-RemoteFetch]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,602] INFO [ExpirationReaper-1-RemoteFetch]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,602] INFO [ExpirationReaper-1-RemoteFetch]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,602] INFO [ExpirationReaper-1-Produce]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,602] INFO [ExpirationReaper-1-Produce]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,602] INFO [ExpirationReaper-1-Produce]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,603] INFO [ExpirationReaper-1-DeleteRecords]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,603] INFO [ExpirationReaper-1-DeleteRecords]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,603] INFO [ExpirationReaper-1-DeleteRecords]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,603] INFO [ExpirationReaper-1-ElectLeader]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,604] INFO [ExpirationReaper-1-ElectLeader]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,604] INFO [ExpirationReaper-1-ElectLeader]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,608] INFO [AddPartitionsToTxnSenderThread-1]: Shutting down (kafka.server.AddPartitionsToTxnManager)
benchi-kafka  | [2025-04-02 09:53:45,608] INFO [AddPartitionsToTxnSenderThread-1]: Stopped (kafka.server.AddPartitionsToTxnManager)
benchi-kafka  | [2025-04-02 09:53:45,609] INFO [AddPartitionsToTxnSenderThread-1]: Shutdown completed (kafka.server.AddPartitionsToTxnManager)
benchi-kafka  | [2025-04-02 09:53:45,609] INFO [ReplicaManager broker=1] Shut down completely (kafka.server.ReplicaManager)
benchi-kafka  | [2025-04-02 09:53:45,609] INFO [broker-1-to-controller-alter-partition-channel-manager]: Shutting down (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,609] INFO [broker-1-to-controller-alter-partition-channel-manager]: Stopped (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,609] INFO [broker-1-to-controller-alter-partition-channel-manager]: Shutdown completed (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,610] INFO Node to controller channel manager for alter-partition shutdown (kafka.server.NodeToControllerChannelManagerImpl)
benchi-kafka  | [2025-04-02 09:53:45,610] INFO [broker-1-to-controller-forwarding-channel-manager]: Shutting down (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,610] INFO [broker-1-to-controller-forwarding-channel-manager]: Stopped (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,610] INFO [broker-1-to-controller-forwarding-channel-manager]: Shutdown completed (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,610] INFO Node to controller channel manager for forwarding shutdown (kafka.server.NodeToControllerChannelManagerImpl)
benchi-kafka  | [2025-04-02 09:53:45,611] INFO Shutting down. (kafka.log.LogManager)
benchi-kafka  | [2025-04-02 09:53:45,612] INFO [kafka-log-cleaner-thread-0]: Shutting down (kafka.log.LogCleaner$CleanerThread)
benchi-kafka  | [2025-04-02 09:53:45,612] INFO [kafka-log-cleaner-thread-0]: Stopped (kafka.log.LogCleaner$CleanerThread)
benchi-kafka  | [2025-04-02 09:53:45,612] INFO [kafka-log-cleaner-thread-0]: Shutdown completed (kafka.log.LogCleaner$CleanerThread)
benchi-kafka  | [2025-04-02 09:53:45,618] INFO [ProducerStateManager partition=postgres.public.employees-0] Wrote producer snapshot at offset 7342451 with 1 producer ids in 1 ms. (org.apache.kafka.storage.internals.log.ProducerStateManager)
benchi-kafka  | [2025-04-02 09:53:45,649] INFO Shutdown complete. (kafka.log.LogManager)
benchi-kafka  | [2025-04-02 09:53:45,650] INFO [broker-1-ThrottledChannelReaper-Fetch]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,651] INFO [broker-1-ThrottledChannelReaper-Fetch]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,651] INFO [broker-1-ThrottledChannelReaper-Fetch]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,651] INFO [broker-1-ThrottledChannelReaper-Produce]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,651] INFO [broker-1-ThrottledChannelReaper-Produce]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,651] INFO [broker-1-ThrottledChannelReaper-Produce]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,651] INFO [broker-1-ThrottledChannelReaper-Request]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,651] INFO [broker-1-ThrottledChannelReaper-Request]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,651] INFO [broker-1-ThrottledChannelReaper-Request]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,651] INFO [broker-1-ThrottledChannelReaper-ControllerMutation]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,652] INFO [broker-1-ThrottledChannelReaper-ControllerMutation]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,652] INFO [broker-1-ThrottledChannelReaper-ControllerMutation]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,652] INFO [SocketServer listenerType=BROKER, nodeId=1] Shutting down socket server (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:53:45,662] INFO [SocketServer listenerType=BROKER, nodeId=1] Shutdown completed (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:53:45,663] INFO Broker and topic stats closed (kafka.server.BrokerTopicStats)
benchi-kafka  | [2025-04-02 09:53:45,664] INFO [BrokerLifecycleManager id=1] closed event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,664] INFO [client-metrics-reaper]: Shutting down (org.apache.kafka.server.util.timer.SystemTimerReaper$Reaper)
benchi-kafka  | [2025-04-02 09:53:45,664] INFO [client-metrics-reaper]: Stopped (org.apache.kafka.server.util.timer.SystemTimerReaper$Reaper)
benchi-kafka  | [2025-04-02 09:53:45,664] INFO [client-metrics-reaper]: Shutdown completed (org.apache.kafka.server.util.timer.SystemTimerReaper$Reaper)
benchi-kafka  | [2025-04-02 09:53:45,665] INFO [BrokerServer id=1] shut down completed (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:53:45,665] INFO [BrokerServer id=1] Transition from SHUTTING_DOWN to SHUTDOWN (kafka.server.BrokerServer)
benchi-kafka  | [2025-04-02 09:53:45,665] INFO [ControllerServer id=1] shutting down (kafka.server.ControllerServer)
benchi-kafka  | [2025-04-02 09:53:45,666] INFO [raft-expiration-reaper]: Shutting down (kafka.raft.TimingWheelExpirationService$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,805] INFO [raft-expiration-reaper]: Stopped (kafka.raft.TimingWheelExpirationService$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,805] INFO [raft-expiration-reaper]: Shutdown completed (kafka.raft.TimingWheelExpirationService$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,806] INFO [kafka-1-raft-io-thread]: Shutting down (org.apache.kafka.raft.KafkaRaftClientDriver)
benchi-kafka  | [2025-04-02 09:53:45,806] INFO [RaftManager id=1] Beginning graceful shutdown (org.apache.kafka.raft.KafkaRaftClient)
benchi-kafka  | [2025-04-02 09:53:45,808] INFO [RaftManager id=1] Graceful shutdown completed (org.apache.kafka.raft.KafkaRaftClient)
benchi-kafka  | [2025-04-02 09:53:45,808] INFO [RaftManager id=1] Completed graceful shutdown of RaftClient (org.apache.kafka.raft.KafkaRaftClientDriver)
benchi-kafka  | [2025-04-02 09:53:45,809] INFO [kafka-1-raft-io-thread]: Stopped (org.apache.kafka.raft.KafkaRaftClientDriver)
benchi-kafka  | [2025-04-02 09:53:45,809] INFO [kafka-1-raft-io-thread]: Shutdown completed (org.apache.kafka.raft.KafkaRaftClientDriver)
benchi-kafka  | [2025-04-02 09:53:45,811] INFO [kafka-1-raft-outbound-request-thread]: Shutting down (org.apache.kafka.raft.KafkaNetworkChannel$SendThread)
benchi-kafka  | [2025-04-02 09:53:45,812] INFO [kafka-1-raft-outbound-request-thread]: Stopped (org.apache.kafka.raft.KafkaNetworkChannel$SendThread)
benchi-kafka  | [2025-04-02 09:53:45,812] INFO [kafka-1-raft-outbound-request-thread]: Shutdown completed (org.apache.kafka.raft.KafkaNetworkChannel$SendThread)
benchi-kafka  | [2025-04-02 09:53:45,814] INFO [ProducerStateManager partition=__cluster_metadata-0] Wrote producer snapshot at offset 301 with 0 producer ids in 2 ms. (org.apache.kafka.storage.internals.log.ProducerStateManager)
benchi-kafka  | [2025-04-02 09:53:45,817] INFO [ControllerRegistrationManager id=1 incarnation=XXflB6GsRQmlGiMW94EZtg] beginShutdown: shutting down event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,817] INFO [ControllerRegistrationManager id=1 incarnation=XXflB6GsRQmlGiMW94EZtg] shutting down. (kafka.server.ControllerRegistrationManager)
benchi-kafka  | [2025-04-02 09:53:45,817] INFO [controller-1-to-controller-registration-channel-manager]: Shutting down (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,818] INFO [controller-1-to-controller-registration-channel-manager]: Stopped (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,818] INFO [controller-1-to-controller-registration-channel-manager]: Shutdown completed (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,819] INFO Node to controller channel manager for registration shutdown (kafka.server.NodeToControllerChannelManagerImpl)
benchi-kafka  | [2025-04-02 09:53:45,819] INFO [ControllerRegistrationManager id=1 incarnation=XXflB6GsRQmlGiMW94EZtg] closed event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,819] INFO [controller-1-to-controller-registration-channel-manager]: Shutdown completed (kafka.server.NodeToControllerRequestThread)
benchi-kafka  | [2025-04-02 09:53:45,819] WARN [NodeToControllerChannelManager id=1 name=registration] Attempting to close NetworkClient that has already been closed. (org.apache.kafka.clients.NetworkClient)
benchi-kafka  | [2025-04-02 09:53:45,819] INFO Node to controller channel manager for registration shutdown (kafka.server.NodeToControllerChannelManagerImpl)
benchi-kafka  | [2025-04-02 09:53:45,820] INFO [ControllerRegistrationManager id=1 incarnation=XXflB6GsRQmlGiMW94EZtg] closed event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,821] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Stopping socket server request processors (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:53:45,826] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Stopped socket server request processors (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:53:45,827] INFO [QuorumController id=1] QuorumController#beginShutdown: shutting down event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,827] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Shutting down socket server (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:53:45,831] INFO [SocketServer listenerType=CONTROLLER, nodeId=1] Shutdown completed (kafka.network.SocketServer)
benchi-kafka  | [2025-04-02 09:53:45,831] INFO [data-plane Kafka Request Handler on Broker 1], shutting down (kafka.server.KafkaRequestHandlerPool)
benchi-kafka  | [2025-04-02 09:53:45,832] INFO [data-plane Kafka Request Handler on Broker 1], shut down completely (kafka.server.KafkaRequestHandlerPool)
benchi-kafka  | [2025-04-02 09:53:45,832] INFO [ExpirationReaper-1-AlterAcls]: Shutting down (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,833] INFO [ExpirationReaper-1-AlterAcls]: Stopped (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,833] INFO [ExpirationReaper-1-AlterAcls]: Shutdown completed (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
benchi-kafka  | [2025-04-02 09:53:45,834] INFO [controller-1-ThrottledChannelReaper-Fetch]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,835] INFO [controller-1-ThrottledChannelReaper-Fetch]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,835] INFO [controller-1-ThrottledChannelReaper-Fetch]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,835] INFO [controller-1-ThrottledChannelReaper-Produce]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,835] INFO [controller-1-ThrottledChannelReaper-Produce]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,835] INFO [controller-1-ThrottledChannelReaper-Produce]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,835] INFO [controller-1-ThrottledChannelReaper-Request]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,836] INFO [controller-1-ThrottledChannelReaper-Request]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,836] INFO [controller-1-ThrottledChannelReaper-Request]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,836] INFO [controller-1-ThrottledChannelReaper-ControllerMutation]: Shutting down (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,837] INFO [controller-1-ThrottledChannelReaper-ControllerMutation]: Stopped (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,837] INFO [controller-1-ThrottledChannelReaper-ControllerMutation]: Shutdown completed (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
benchi-kafka  | [2025-04-02 09:53:45,837] INFO [QuorumController id=1] closed event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,838] INFO [SharedServer id=1] Stopping SharedServer (kafka.server.SharedServer)
benchi-kafka  | [2025-04-02 09:53:45,838] INFO [MetadataLoader id=1] beginShutdown: shutting down event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,838] INFO [SnapshotGenerator id=1] beginShutdown: shutting down event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,839] INFO [SnapshotGenerator id=1] closed event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,839] INFO [MetadataLoader id=1] closed event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,840] INFO [SnapshotGenerator id=1] closed event queue. (org.apache.kafka.queue.KafkaEventQueue)
benchi-kafka  | [2025-04-02 09:53:45,841] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka  | [2025-04-02 09:53:45,841] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
benchi-kafka  | [2025-04-02 09:53:45,841] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
benchi-kafka  | [2025-04-02 09:53:45,841] INFO App info kafka.server for 1 unregistered (org.apache.kafka.common.utils.AppInfoParser)
benchi-kafka  | [2025-04-02 09:53:45,842] INFO App info kafka.server for 1 unregistered (org.apache.kafka.common.utils.AppInfoParser)
[Kbenchi-kafka exited with code 143
